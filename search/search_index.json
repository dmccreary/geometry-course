{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Artificial Intelligence Assisted Geometry","text":"<p>Welcome to our website for an Artificial Intelligence (AI)  assisted high school geometry course.</p> <p>This website is designed to show how generative AI can work with knowledge graphs to create personalized learning plans for a typical high school geometry course.  It is the foundation for an intelligent textbook for geometry.</p> <p>This course also demonstrates how generative AI can be used to create interactive animations and simulations using MicroSims. MicroSims are small simulations of the real world that demonstrate learning concepts.  They can be created and modified using generative AI tools such as ChatGPT.  MicroSims can also be used to display Learning Graphs that display learning concepts and their dependencies.</p> <p>We are looking for volunteers to help design MicroSims and test the MicroSims in real classrooms.</p> <p>Please contact me on LinkedIn if you would like to help or if you have any questions about this course.</p> <p>Thanks! - Dan</p>"},{"location":"about/","title":"About the AI Geometry Course","text":"<p>This website contains resources to help teach a high-school level course on geometry.</p> <p>Our initial goal was to create a set of resources to demonstrate how generative AI can be used to generate artifiacts used in a high school geometry course.  For example:</p> <ol> <li>A list of key concepts</li> <li>A glossary of terms</li> <li>A word cloud</li> <li>A learning graph</li> <li>Micro-simulations (MicroSims)</li> </ol>"},{"location":"about/#how-to-use-the-website","title":"How to Use the Website","text":"<ol> <li>Use the left navigation bar to view some of the content in the website</li> <li>Use the search function at the top of the website to look for topics you are interested in</li> <li>Use the learning graph MicroSim to see how concepts are related</li> </ol> <p>We hope these resources are useful for both instructors and students.</p>"},{"location":"contact/","title":"Contact","text":"<p>Please contact me on LinkedIn</p> <p>Thanks! - Dan</p>"},{"location":"glossary/","title":"Glossary of Terms for a Geometry Course","text":""},{"location":"glossary/#45-45-90-triangle","title":"45-45-90 triangle","text":"<p>A special type of right triangle where the two legs are congruent, and the angles measure 45\u00b0, 45\u00b0, and 90\u00b0.</p>"},{"location":"glossary/#30-60-90-triangle","title":"30-60-90 triangle","text":"<p>A special type of right triangle with angles measuring 30\u00b0, 60\u00b0, and 90\u00b0, and the sides in the ratio 1:\u221a3:2.</p>"},{"location":"glossary/#aa-similarity","title":"AA similarity","text":"<p>A rule stating that two triangles are similar if two corresponding angles are congruent.</p>"},{"location":"glossary/#acute-angle","title":"Acute angle","text":"<p>An angle that measures less than 90\u00b0.</p>"},{"location":"glossary/#acute-triangle","title":"Acute triangle","text":"<p>A triangle where all three angles are acute (less than 90\u00b0).</p>"},{"location":"glossary/#adjacent-angles","title":"Adjacent angles","text":"<p>Two angles that share a common side and a common vertex.</p>"},{"location":"glossary/#alt-int-angles","title":"Alt int angles","text":"<p>Angles located on opposite sides of a transversal and inside the two lines it intersects.</p>"},{"location":"glossary/#alt-ext-angles","title":"Alt ext angles","text":"<p>Angles located on opposite sides of a transversal and outside the two lines it intersects.</p>"},{"location":"glossary/#angle","title":"Angle","text":"<p>A figure formed by two rays sharing a common endpoint called the vertex.</p>"},{"location":"glossary/#angle-bisector","title":"Angle bisector","text":"<p>A ray that divides an angle into two congruent angles.</p>"},{"location":"glossary/#arc","title":"Arc","text":"<p>A continuous portion of a circle.</p>"},{"location":"glossary/#arc-length","title":"Arc length","text":"<p>The distance along a circular arc, calculated as a portion of the circumference.</p>"},{"location":"glossary/#asa-congruence","title":"ASA congruence","text":"<p>A rule stating that two triangles are congruent if two angles and the included side are equal.</p>"},{"location":"glossary/#aas-congruence","title":"AAS congruence","text":"<p>A rule stating that two triangles are congruent if two angles and a non-included side are equal.</p>"},{"location":"glossary/#biconditional","title":"Biconditional","text":"<p>A logical statement where both the original statement and its converse are true.</p>"},{"location":"glossary/#bisector","title":"Bisector","text":"<p>A line, segment, or ray that divides a figure into two congruent parts.</p>"},{"location":"glossary/#central-angle","title":"Central angle","text":"<p>An angle whose vertex is at the center of a circle and whose sides are radii.</p>"},{"location":"glossary/#chord","title":"Chord","text":"<p>A segment whose endpoints lie on a circle.</p>"},{"location":"glossary/#collinear-points","title":"Collinear points","text":"<p>Points that lie on the same straight line.</p>"},{"location":"glossary/#compass-and-straightedge","title":"Compass and straightedge","text":"<p>Tools used in classical geometry for constructing figures and performing geometric tasks.</p>"},{"location":"glossary/#complementary-angles","title":"Complementary angles","text":"<p>Two angles whose measures add up to 90\u00b0.</p>"},{"location":"glossary/#composite-transformations","title":"Composite transformations","text":"<p>A combination of two or more geometric transformations.</p>"},{"location":"glossary/#conditional-statement","title":"Conditional statement","text":"<p>A logical statement that has two parts: a hypothesis and a conclusion, often written in \"if-then\" form.</p>"},{"location":"glossary/#congruent-figures","title":"Congruent figures","text":"<p>Figures that have the same size and shape.</p>"},{"location":"glossary/#congruent-triangles","title":"Congruent triangles","text":"<p>Triangles that are identical in size and shape, with corresponding sides and angles equal.</p>"},{"location":"glossary/#converse","title":"Converse","text":"<p>The statement formed by reversing the hypothesis and conclusion of a conditional statement.</p>"},{"location":"glossary/#coplanar-points","title":"Coplanar points","text":"<p>Points that lie on the same plane.</p>"},{"location":"glossary/#cross-section","title":"Cross section","text":"<p>A two-dimensional shape obtained by slicing a three-dimensional figure.</p>"},{"location":"glossary/#cylinder","title":"Cylinder","text":"<p>A three-dimensional figure with two congruent circular bases connected by a curved surface.</p>"},{"location":"glossary/#deductive-reasoning","title":"Deductive reasoning","text":"<p>A logical process in which a conclusion follows necessarily from the given premises.</p>"},{"location":"glossary/#diameter","title":"Diameter","text":"<p>A chord that passes through the center of a circle.</p>"},{"location":"glossary/#dilation","title":"Dilation","text":"<p>A transformation that changes the size of a figure but preserves its shape.</p>"},{"location":"glossary/#distance-formula","title":"Distance formula","text":"<p>A formula used to calculate the distance between two points in a plane.</p>"},{"location":"glossary/#directed-line-segment","title":"Directed line segment","text":"<p>A segment with a specific direction, defined by an initial point and a terminal point.</p>"},{"location":"glossary/#eulers-formula","title":"Euler's formula","text":"<p>A formula relating the vertices (V), edges (E), and faces (F) of a polyhedron: \\( V - E + F = 2 \\).</p>"},{"location":"glossary/#equation-of-circle","title":"Equation of circle","text":"<p>The formula \\( (x-h)^2 + (y-k)^2 = r^2 \\), representing a circle with center \\((h, k)\\) and radius \\(r\\).</p>"},{"location":"glossary/#exterior-angle-theorem","title":"Exterior angle theorem","text":"<p>A theorem stating that the measure of an exterior angle of a triangle is equal to the sum of the measures of the two non-adjacent interior angles.</p>"},{"location":"glossary/#flowchart-proof","title":"Flowchart proof","text":"<p>A proof presented as a diagram showing a logical sequence of steps with arrows connecting them.</p>"},{"location":"glossary/#glide-reflection","title":"Glide reflection","text":"<p>A transformation combining a reflection and a translation along the line of reflection.</p>"},{"location":"glossary/#image","title":"Image","text":"<p>The result of applying a transformation to a figure.</p>"},{"location":"glossary/#inductive-reasoning","title":"Inductive reasoning","text":"<p>A logical process of forming a generalization based on specific observations or examples.</p>"},{"location":"glossary/#isometry","title":"Isometry","text":"<p>A transformation that preserves distances, resulting in congruent figures.</p>"},{"location":"glossary/#kite","title":"Kite","text":"<p>A quadrilateral with two pairs of adjacent sides congruent and one pair of opposite angles congruent.</p>"},{"location":"glossary/#linear-pair","title":"Linear pair","text":"<p>A pair of adjacent angles whose non-common sides form a straight line.</p>"},{"location":"glossary/#line-symmetry","title":"Line symmetry","text":"<p>A property where a figure can be divided into two mirror-image halves by a line.</p>"},{"location":"glossary/#midpoint","title":"Midpoint","text":"<p>The point that divides a segment into two equal parts.</p>"},{"location":"glossary/#parallel-lines","title":"Parallel lines","text":"<p>Two lines in the same plane that never intersect.</p>"},{"location":"glossary/#perpendicular-bisector","title":"Perpendicular bisector","text":"<p>A line, segment, or ray that is perpendicular to a segment at its midpoint.</p>"},{"location":"glossary/#perpendicular-lines","title":"Perpendicular lines","text":"<p>Two lines that intersect to form a right angle.</p>"},{"location":"glossary/#point","title":"Point","text":"<p>A location in space with no size or dimension.</p>"},{"location":"glossary/#polygon-interior-angles","title":"Polygon interior angles","text":"<p>The angles inside a polygon, with the sum determined by \\((n-2) \\times 180^\\circ\\), where \\(n\\) is the number of sides.</p>"},{"location":"glossary/#proportional-sides","title":"Proportional sides","text":"<p>Corresponding sides of similar figures that have the same ratio.</p>"},{"location":"glossary/#pythagorean-theorem","title":"Pythagorean theorem","text":"<p>A theorem stating that in a right triangle, the square of the hypotenuse is equal to the sum of the squares of the other two sides.</p>"},{"location":"glossary/#radius","title":"Radius","text":"<p>A segment from the center of a circle to any point on the circle.</p>"},{"location":"glossary/#ray","title":"Ray","text":"<p>A part of a line that starts at a point and extends infinitely in one direction.</p>"},{"location":"glossary/#reflex-angle","title":"Reflex angle","text":"<p>An angle that measures more than 180\u00b0 but less than 360\u00b0.</p>"},{"location":"glossary/#right-angle","title":"Right angle","text":"<p>An angle that measures exactly 90\u00b0.</p>"},{"location":"glossary/#rotational-symmetry","title":"Rotational symmetry","text":"<p>A property of a figure that can be rotated about a point by a certain angle and still look the same.</p>"},{"location":"glossary/#scalene-triangle","title":"Scalene triangle","text":"<p>A triangle with no congruent sides.</p>"},{"location":"glossary/#slope","title":"Slope","text":"<p>A measure of the steepness of a line, calculated as the ratio of the vertical change to the horizontal change.</p>"},{"location":"glossary/#sss-congruence","title":"SSS congruence","text":"<p>A rule stating that two triangles are congruent if all three pairs of corresponding sides are equal.</p>"},{"location":"glossary/#sss-similarity","title":"SSS similarity","text":"<p>A rule stating that two triangles are similar if their corresponding sides are proportional.</p>"},{"location":"glossary/#tangent","title":"Tangent","text":"<p>A line that touches a circle at exactly one point.</p>"},{"location":"glossary/#tessellation","title":"Tessellation","text":"<p>A pattern of shapes that fit together without gaps or overlaps.</p>"},{"location":"glossary/#transformation","title":"Transformation","text":"<p>A change in the position, size, or shape of a figure.</p>"},{"location":"glossary/#transversal","title":"Transversal","text":"<p>A line that intersects two or more lines at distinct points.</p>"},{"location":"glossary/#triangle-inequality","title":"Triangle inequality","text":"<p>A rule stating that the sum of the lengths of any two sides of a triangle is greater than the length of the third side.</p>"},{"location":"glossary/#vertex","title":"Vertex","text":"<p>The common endpoint of two rays or segments in an angle, polygon, or polyhedron.</p>"},{"location":"glossary/#vertical-angles","title":"Vertical angles","text":"<p>Two angles formed by intersecting lines, sharing a common vertex but not a common side.</p>"},{"location":"glossary/#references","title":"References","text":"<p>Illustrative Mathematics</p>"},{"location":"how-we-built-this-site/","title":"How We Built This Site","text":"<p>This page describes how we built this website and some of  the rationale behind why we made various design choices.</p>"},{"location":"how-we-built-this-site/#python","title":"Python","text":"<p>MicroSims are about how we use generative AI to create animations and simulations.  The language of AI is Python.  So we wanted to create a site that could be easily understood by Python developers.</p>"},{"location":"how-we-built-this-site/#mkdocs-vs-docusaurus","title":"Mkdocs vs. Docusaurus","text":"<p>There are two main tools used by Python developers to write documentation: Mkdocs and Docusaurus.  Mkdocs is easier to use and more popular than Docusaurus. Docusaurus is also optimized for single-page applications. Mkdocs also has an extensive library of themes and plugins. None of us are experts in JavaScript or React. Based on our ChatGPT Analysis of the Tradeoffs we chose mkdocs for this site management.</p>"},{"location":"how-we-built-this-site/#github-and-github-pages","title":"GitHub and GitHub Pages","text":"<p>GitHub is a logical choice to store our  site source code and documentation.  GitHub also has a Custom GitHub Action that does auto-deployment if any files on the site change. We don't currently have this action enabled, but other teams can use this feature if they don't have the ability to do a local build with mkdocs.</p> <p>GitHub also has Issues,  Projects and releases that we can use to manage our bugs and tasks.</p> <p>The best practice for low-cost websites that have public-only content is GitHub Pages. Mkdocs has a command (<code>mkdocs gh-deploy</code>) that does deployment directly to GitHub Pages.  This was an easy choice to make.</p>"},{"location":"how-we-built-this-site/#github-clone","title":"GitHub Clone","text":"<p>If you would like to clone this repository, here are the commands:</p> <pre><code>mkdir projects\ncd projects\ngit clone https://github.com/dmccreary/microsims\n</code></pre>"},{"location":"how-we-built-this-site/#after-changes","title":"After Changes","text":"<p>After you make local changes you must do the following:</p> <pre><code># add the new files to a a local commit transaction\ngit add FILES\n# Execute the a local commit with a message about what and why you are doing the commit\ngit commit -m \"comment\"\n# Update the central GitHub repository\ngit push\n</code></pre>"},{"location":"how-we-built-this-site/#material-theme","title":"Material Theme","text":"<p>We had several options when picking a mkdocs theme:</p> <ol> <li>Mkdocs default</li> <li>Readthedocs</li> <li>Third-Party Themes See Ranking</li> </ol> <p>The Material Theme had 16K stars.  No other theme had over a few hundred. This was also an easy design decision.</p> <p>One key criterial was the social Open Graph tags so that when our users post a link to a simulation, the image of the simulation is included in the link.  Since Material supported this, we used the Material theme. You can see our ChatGPT Design Decision Analysis if you want to check our decision process.</p>"},{"location":"how-we-built-this-site/#enable-edit-icon","title":"Enable Edit Icon","text":"<p>To enable the Edit icon on all pages, you must add the edit_uri and the content.action.edit under the theme features area.</p> <pre><code>edit_uri: edit/master/docs/\n</code></pre> <pre><code>    theme:\n        features:\n            - content.action.edit\n</code></pre>"},{"location":"how-we-built-this-site/#conda-vs-venv","title":"Conda vs VENV","text":"<p>There are two choices for virtual environments.  We can use the native Python venv or use Conda.  venv is simle but is only designed for pure Python projects.  We imagine that this site could use JavaScript and other langauges in the future, so we picked Conda. There is nothing on this microsite that prevents you from using one or the other.  See the ChatGPT Analysis Here.</p> <p>Here is the conda script that we ran to create a new mkdocs environment that also supports the material social imaging libraries.</p> <pre><code>conda deactivate\nconda create -n mkdocs python=3\nconda activate mkdocs\npip install mkdocs \"mkdocs-material[imaging]\"\n</code></pre>"},{"location":"how-we-built-this-site/#mkdocs-commands","title":"Mkdocs Commands","text":"<p>There are three simple mkdoc commands we use.</p>"},{"location":"how-we-built-this-site/#local-build","title":"Local Build","text":"<pre><code>mkdocs build\n</code></pre> <p>This builds your website in a folder called <code>site</code>.  Use this to test that the mkdocs.yml site is working and does not have any errors.</p>"},{"location":"how-we-built-this-site/#run-a-local-server","title":"Run a Local Server","text":"<pre><code>mkdocs serve\n</code></pre> <p>This runs a server on <code>http://localhost:8000</code>. Use this to test the display formatting locally before you push your code up to the GitHub repo.</p> <pre><code>mkdoc gh-deploy\n</code></pre> <p>This pushes everything up to the GitHub Pages site. Note that it does not commit your code to GitHub.</p>"},{"location":"how-we-built-this-site/#mkdocs-material-social-tags","title":"Mkdocs Material Social Tags","text":"<p>We are using the Material Social tags.  This is a work in progress!</p> <p>Here is what we have learned.</p> <ol> <li>There are extensive image processing libraries that can't be installed with just pip.  You will need to run a tool like brew on the Mac to get the libraries installed.</li> <li>Even after <code>brew</code> installs the libraries, you have to get your environment to find the libraries.  The only way I could get that to work was to set up a local UNIX environment variable.</li> </ol> <p>Here is the brew command that I ran:</p> <pre><code>brew install cairo freetype libffi libjpeg libpng zlib\n</code></pre> <p>I then had to add the following to my ~/.zshrc file:</p> <pre><code>export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib\n</code></pre> <p>Note that I am running on a Mac with Apple silicon.  This means that the image libraries that brew downloads must be specific to the Mac Arm instruction set.</p>"},{"location":"how-we-built-this-site/#image-generation-and-compression","title":"Image Generation and Compression","text":"<p>I have used ChatGPT to create most of my images.  However, they are too large for most websites.  To compress them down I used  https://tinypng.com/ which is a free tool  for compressing png images without significant loss of quality.  The files created with ChatGPT are typically around 1-2 MB.  After  using the TinyPNG site the size is typically around 200-300KB.</p> <ul> <li>Cover images for blog post #4364</li> <li>Discussion on overriding the Social Card Image</li> </ul>"},{"location":"license/","title":"Creative Commons License","text":"<p>All content in this repository is governed by the following license agreement:</p>"},{"location":"license/#license-type","title":"License Type","text":"<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p>"},{"location":"license/#link-to-license-agreement","title":"Link to License Agreement","text":"<p>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en</p>"},{"location":"license/#your-rights","title":"Your Rights","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material</li> </ul> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>"},{"location":"license/#restrictions","title":"Restrictions","text":"<ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial \u2014 You may not use the material for commercial purposes.</li> <li>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> <li>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li> </ul> <p>Notices</p> <p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.</p> <p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.</p> <p>This deed highlights only some of the key features and terms of the actual license. It is not a license and has no legal value. You should carefully review all of the terms and conditions of the actual license before using the licensed material.</p>"},{"location":"references/","title":"Site References","text":"<ol> <li>mkdocs - https://www.mkdocs.org/ - this is our tool for building the website.  It converts Markdown into HTML in the <code>site</code> directory.</li> <li>mkdocs material theme - https://squidfunk.github.io/mkdocs-material/ - this is the theme for our site.  The theme adds the user interface elements that give our site the look and feel.  It also has the features such as social cards.</li> <li>GitHub Pages - https://pages.github.com/ - this is the free tool for hosting public websites created by mkdocs</li> <li>Markdown - https://www.mkdocs.org/user-guide/writing-your-docs/#writing-with-markdown - this is the format we use for text.  It allows us to have headers, lists, tables, links and images without learning HTML.</li> <li>Deploy Mkdocs GitHub Action - https://github.com/marketplace/actions/deploy-mkdocs - this is the tool we use to automatically build our site after edits are checked in with Git.</li> <li>Git Book - https://git-scm.com/book/en/v2 - a useful book on Git.  Just read the first two chapters to learn how to check in new code.</li> <li>Conda - https://conda.io/ - this is a command line tool that keeps our Python libraries organized for each project.</li> <li>VS Code - https://code.visualstudio.com/ - this is the integrated development environment we use to mange the files on our website.</li> <li>Markdown Paste - https://marketplace.visualstudio.com/items?itemName=telesoho.vscode-markdown-paste-image - this is the VS code extension we use to make sure we keep the markdown format generated by ChatGPT.</li> </ol>"},{"location":"chapters/","title":"Introduction to Geometry","text":""},{"location":"chapters/#list-of-chapters","title":"List of Chapters","text":""},{"location":"chapters/#chapter-1-introduction-to-geometry","title":"Chapter 1: Introduction to Geometry","text":"<p>This chapter introduces the fundamental elements of geometry, including points, lines, planes, and angles.  Students will learn basic definitions and postulates that form the foundation for all geometric concepts.</p> <p>MicroSims:</p> <ul> <li>Point-Line-Plane Explorer: Interactively plot points, lines, and planes to see how they relate.</li> <li>Angle Creator: Adjust rays to form different angles and measure them dynamically.</li> </ul> <p>Introduction to Geometry</p>"},{"location":"chapters/#chapter-2-reasoning-and-proof","title":"Chapter 2: Reasoning and Proof","text":"<p>Dive into the principles of logical reasoning, including inductive and deductive reasoning. Learn how to construct formal geometric proofs using definitions, postulates, and theorems.</p> <p>Reasoning and Proofs</p> <p>MicroSims:</p> <ul> <li>Logic Puzzle Solver: Practice reasoning skills with interactive puzzles.</li> <li>Proof Builder: Step through the process of creating geometric proofs.</li> </ul>"},{"location":"chapters/#chapter-3-parallel-and-perpendicular-lines","title":"Chapter 3: Parallel and Perpendicular Lines","text":"<p>Explore the properties of parallel and perpendicular lines and the angles formed when they are intersected by a transversal. Understand corresponding, alternate interior, and alternate exterior angles.</p> <p>MicroSims:</p> <ul> <li>Parallel Lines with Transversal: Manipulate lines to observe angle relationships.</li> <li>Perpendicular Line Constructor: Create perpendicular lines and examine right angles.</li> </ul> <p>Parallel and Perpendicular Lines</p>"},{"location":"chapters/#chapter-4-congruent-triangles","title":"Chapter 4: Congruent Triangles","text":"<p>Learn the criteria for triangle congruence, such as SSS, SAS, ASA, AAS, and HL. Apply these criteria to prove triangles are congruent in various geometric scenarios.</p> <p>MicroSims:</p> <ul> <li>Triangle Congruence Tester: Adjust side lengths and angles to test for congruence.</li> <li>SSS and SAS Simulator: Visualize how different congruence postulates work.</li> </ul> <p>Congruent Triangles</p>"},{"location":"chapters/#chapter-5-properties-of-triangles","title":"Chapter 5: Properties of Triangles","text":"<p>Investigate special segments in triangles, including medians, altitudes, and angle bisectors. Discover points of concurrency like the centroid, orthocenter, circumcenter, and incenter.</p> <p>MicroSims:</p> <ul> <li>Triangle Centers Explorer: Locate and explore different centers within a triangle.</li> <li>Median and Altitude Interactive: Visualize how medians and altitudes intersect.</li> </ul> <p>Properties of Triangles</p>"},{"location":"chapters/#chapter-6-quadrilaterals-and-polygons","title":"Chapter 6: Quadrilaterals and Polygons","text":"<p>Examine the properties of various quadrilaterals such as parallelograms,  rectangles, squares, rhombuses, and trapezoids. Extend these concepts to other polygons and understand their angle sums.</p> <p>Quadrilaterals and Polygons</p> <p>MicroSims:</p> <ul> <li>Quadrilateral Manipulator: Change side lengths and angles to see how properties vary.</li> <li>Polygon Angle Sum Calculator: Observe how interior angles add up in different polygons.</li> </ul>"},{"location":"chapters/#chapter-7-similarity","title":"Chapter 7: Similarity","text":"<p>Understand the concept of similar figures and the criteria for triangle similarity, including AA, SSS, and SAS. Learn to apply proportions and scale factors in problem-solving.</p> <p>MicroSims:</p> <ul> <li>Similarity Transformer: Apply dilations to shapes to explore similarity.</li> <li>Proportionality Simulator: Visualize and manipulate proportional segments.</li> </ul> <p>Similarity</p>"},{"location":"chapters/#chapter-8-right-triangles-and-trigonometry","title":"Chapter 8: Right Triangles and Trigonometry","text":"<p>Introduce the properties of right triangles and the basics of trigonometry. Learn about sine, cosine, and tangent ratios and how to apply them to find missing sides and angles.</p> <p>Right Triangles and Trigonometry</p> <p>MicroSims:</p> <ul> <li>Trigonometric Ratio Explorer: Adjust triangle sides to see changes in trig ratios.</li> <li>Right Triangle Solver: Input known values to calculate unknown sides or angles.</li> </ul>"},{"location":"chapters/#chapter-9-circles","title":"Chapter 9: Circles","text":"<p>Study the properties of circles, including chords, tangents, arcs, and sectors. Understand theorems related to angles and segments within and around circles.</p> <p>Circles</p> <p>MicroSims:</p> <ul> <li>Circle Anatomy Interactive: Explore different parts of a circle by moving points.</li> <li>Arc Length and Sector Area Calculator: See how changes in radius and angle affect measurements.</li> <li>Cords: See how circle cords restrict the movement of line endpoints on a circleCords</li> </ul>"},{"location":"chapters/#chapter-10-area-and-perimeter","title":"Chapter 10: Area and Perimeter","text":"<p>Learn how to calculate the area and perimeter of various two-dimensional figures, including composite shapes. Apply formulas to solve real-world and mathematical problems.</p> <p>MicroSims:</p> <ul> <li>Shape Area Calculator: Modify dimensions to see real-time area and perimeter calculations.</li> <li>Composite Figure Builder: Combine shapes to understand how total area is determined.</li> </ul> <p>Areas and Perimeters</p>"},{"location":"chapters/#chapter-11-surface-area-and-volume","title":"Chapter 11: Surface Area and Volume","text":"<p>Expand your knowledge to three-dimensional figures by calculating surface area and volume. Explore prisms, cylinders, pyramids, cones, and spheres.</p> <p>MicroSims:</p> <ul> <li>3D Solid Visualizer: Rotate and manipulate solids to understand their properties.</li> <li>Surface Area and Volume Simulator: Change dimensions to see effects on measurements.</li> </ul> <p>Surface Area and Volume</p>"},{"location":"chapters/#chapter-12-transformations","title":"Chapter 12: Transformations","text":"<p>Investigate geometric transformations, including translations, reflections, rotations, and dilations. Understand how transformations affect figures on the coordinate plane.</p> <p>MicroSims:</p> <ul> <li>Transformation Playground: Apply different transformations to shapes and observe outcomes.</li> <li>Coordinate Mapping Tool: See how points move under various transformations.</li> </ul> <p>Transformations</p>"},{"location":"chapters/areas-and-perimeters/","title":"Chapter 10: Area and Perimeter","text":"<p>Learn how to calculate the area and perimeter of various two-dimensional figures, including composite shapes. Apply formulas to solve real-world and mathematical problems.</p> <p>MicroSims:</p> <ul> <li>Shape Area Calculator: Modify dimensions to see real-time area and perimeter calculations.</li> <li>Composite Figure Builder: Combine shapes to understand how total area is determined.</li> </ul>"},{"location":"chapters/circles/","title":"Chapter 9: Circles","text":"<p>Study the properties of circles, including chords, tangents, arcs, and sectors. Understand theorems related to angles and segments within and around circles.</p> <p>MicroSims:</p> <ul> <li>Circle Anatomy Interactive: Explore different parts of a circle by moving points.</li> <li>Arc Length and Sector Area Calculator: See how changes in radius and angle affect measurements.</li> </ul>"},{"location":"chapters/circles/cords/","title":"Cords","text":""},{"location":"chapters/congruent-triangles/","title":"Chapter 4: Congruent Triangles","text":"<p>Learn the criteria for triangle congruence, such as SSS, SAS, ASA, AAS, and HL. Apply these criteria to prove triangles are congruent in various geometric scenarios.</p> <p>MicroSims:</p> <ul> <li>Triangle Congruence Tester: Adjust side lengths and angles to test for congruence.</li> <li>SSS and SAS Simulator: Visualize how different congruence postulates work.</li> </ul>"},{"location":"chapters/intro/","title":"Chapter 1: Introduction to Geometry","text":"<p>This chapter introduces the fundamental elements of geometry, including:</p> <ol> <li>points</li> <li>lines</li> <li>planes</li> <li>angles</li> </ol> <p>Students will learn basic definitions and postulates that form the foundation for all geometric concepts.</p>"},{"location":"chapters/intro/#microsims","title":"MicroSims","text":"<ul> <li>Point-Line-Plane Explorer: Interactively plot points, lines, and planes to see how they relate.</li> <li>Angle Explorer Adjust rays to form different angles and measure them dynamically.</li> <li>Complementary and Supplementary Angles</li> </ul>"},{"location":"chapters/intro/angle-explorer/","title":"Exploring Angles with the Angle Explorer MicroSim","text":"<p>Run the Angle Explorer MicroSim</p> <p>Grade Level: 9th - 12th Grade Geometry</p>"},{"location":"chapters/intro/angle-explorer/#lesson-objectives","title":"Lesson Objectives","text":"<p>By the end of this lesson, students will be able to:</p> <ul> <li>Understand and identify different types of angles: zero, acute, right, obtuse, and straight angles.</li> <li>Use the Angle Explorer MicroSim to manipulate rays and observe how angle measures change dynamically.</li> <li>Relate angle measures to their corresponding angle types.</li> <li>Apply their understanding of angles to solve problems and recognize angles in real-world contexts.</li> </ul>"},{"location":"chapters/intro/angle-explorer/#key-concepts","title":"Key Concepts","text":"<ul> <li> <p>Angle Measurement: An angle is formed by two rays (sides) sharing a common endpoint (vertex). Angles are measured in degrees (\u00b0), ranging from 0\u00b0 to 180\u00b0 in this context.</p> </li> <li> <p>Types of Angles:</p> </li> <li> <p>Zero Angle (0\u00b0): The rays overlap completely; there is no opening between them.</p> </li> <li>Acute Angle (0\u00b0 &lt; angle &lt; 90\u00b0): An angle smaller than a right angle; the rays form a sharp point.</li> <li>Right Angle (90\u00b0): An angle that forms a perfect \"L\" shape; the rays are perpendicular.</li> <li>Obtuse Angle (90\u00b0 &lt; angle &lt; 180\u00b0): An angle larger than a right angle but less than a straight angle.</li> <li>Straight Angle (180\u00b0): The rays extend in opposite directions, forming a straight line.</li> <li>Dynamic Visualization: Using interactive tools to manipulate geometric figures helps deepen understanding of geometric concepts.</li> </ul>"},{"location":"chapters/intro/angle-explorer/#materials-needed","title":"Materials Needed","text":"<ul> <li>Computers or tablets with internet access.</li> <li>Access to the Angle Explorer MicroSim (the provided p5.js sketch).</li> </ul>"},{"location":"chapters/intro/angle-explorer/#lesson-activities","title":"Lesson Activities","text":""},{"location":"chapters/intro/angle-explorer/#1-introduction-10-minutes","title":"1. Introduction (10 minutes)","text":"<ul> <li>Discussion: Begin with a brief review of angles and their significance in geometry.</li> <li>Real-Life Examples: Ask students where they see angles in everyday life (e.g., corners of a room, slices of pizza, hands of a clock).</li> <li>Objective Sharing: Explain that today they will explore angles dynamically using the Angle Explorer MicroSim.</li> </ul>"},{"location":"chapters/intro/angle-explorer/#2-exploring-the-microsim-10-minutes","title":"2. Exploring the MicroSim (10 minutes)","text":"<ul> <li> <p>Guided Tour:</p> </li> <li> <p>Show students how to access and run the MicroSim.</p> </li> <li>Demonstrate adjusting the angle using the slider at the bottom.</li> <li> <p>Point out the display of the angle measure and the angle type.</p> </li> <li> <p>Hands-On Exploration:</p> </li> <li> <p>Allow students time to experiment with the MicroSim independently.</p> </li> <li>Encourage them to observe how moving the slider affects the rays and angle measure.</li> </ul>"},{"location":"chapters/intro/angle-explorer/#3-key-concepts-discussion-15-minutes","title":"3. Key Concepts Discussion (15 minutes)","text":"<ul> <li> <p>Zero Angle (0\u00b0):</p> <ul> <li>Activity: Set the angle to 0\u00b0.</li> <li>Observation: Discuss how the rays overlap.</li> <li>Question: What happens when there is no angle between the rays?</li> </ul> </li> <li> <p>Acute Angles (1\u00b0 - 89\u00b0):</p> <ul> <li>Activity: Adjust the angle to 30\u00b0.</li> <li>Observation: Identify characteristics of acute angles.</li> <li>Question: How do acute angles appear compared to right angles?</li> </ul> </li> <li> <p>Right Angle (90\u00b0):</p> <ul> <li>Activity: Set the angle to 90\u00b0.</li> <li>Observation: Note the perpendicular rays.</li> <li>Question: Why is the right angle significant in geometry?</li> </ul> </li> <li> <p>Obtuse Angles (91\u00b0 - 179\u00b0):</p> <ul> <li>Activity: Change the angle to 120\u00b0.</li> <li>Observation: Examine how obtuse angles differ from acute angles.</li> <li>Question: What real-world objects have obtuse angles?</li> </ul> </li> <li> <p>Straight Angle (180\u00b0):</p> <ul> <li>Activity: Set the angle to 180\u00b0.</li> <li>Observation: The rays form a straight line.</li> <li>Question: How does a straight angle relate to a straight line?</li> </ul> </li> </ul>"},{"location":"chapters/intro/angle-explorer/#4-interactive-challenges-20-minutes","title":"4. Interactive Challenges (20 minutes)","text":"<ul> <li> <p>Challenge 1: Angle Identification</p> <ul> <li>Task: Adjust the slider to find examples of each angle type.</li> <li>Record: For each angle type, note the angle measure and draw a sketch.</li> <li>Share: Discuss findings with a partner or small group.</li> </ul> </li> <li> <p>Challenge 2: Real-Life Connections</p> <ul> <li>Task: Think of real-life examples that match each angle type.</li> <li>Examples:<ul> <li>Acute Angle: A slice of pie.</li> <li>Right Angle: Corner of a book.</li> <li>Obtuse Angle: The hands of a clock at 10:10.</li> </ul> </li> <li>Share: Present examples to the class.</li> </ul> </li> </ul>"},{"location":"chapters/intro/angle-explorer/#5-concept-application-15-minutes","title":"5. Concept Application (15 minutes)","text":"<ul> <li> <p>Problem-Solving Activity:</p> <ul> <li>Scenario: Using the MicroSim, imagine designing a piece of art that incorporates different angle types.</li> <li>Task: Create a plan that includes at least one of each angle type.</li> <li>Explain: Write a brief description of how each angle will be used in your design.</li> </ul> </li> <li> <p>Reflection Questions:</p> <ul> <li>How does changing the angle measure affect the classification of the angle?</li> <li>What patterns do you notice as the angle increases from 0\u00b0 to 180\u00b0?</li> </ul> </li> </ul>"},{"location":"chapters/intro/angle-explorer/#6-conclusion-5-minutes","title":"6. Conclusion (5 minutes)","text":"<ul> <li>Summary: Recap the key concepts learned about angle measures and types.</li> <li>Questions: Open the floor for any remaining questions or clarifications.</li> <li>Preview: Inform students about the next lesson on angle relationships (e.g., complementary and supplementary angles).</li> </ul>"},{"location":"chapters/intro/angle-explorer/#things-for-students-to-try-with-the-microsim","title":"Things for Students to Try with the MicroSim","text":"<ol> <li>Exact Measures:</li> </ol> <p>Set the angle to specific measures (15\u00b0, 45\u00b0, 75\u00b0, etc.) and identify the angle type.</p> <ol> <li> <p>Transitional Angles:</p> </li> <li> <p>Observe what happens when the angle changes from 89\u00b0 to 90\u00b0, and from 90\u00b0 to 91\u00b0.</p> </li> <li> <p>Question: How does the angle type classification change at these points?</p> </li> <li> <p>Angle Sum Exploration:</p> <ul> <li>Combine two angles by setting the slider to different positions and considering how they might add up to 180\u00b0.</li> <li>Extension: Discuss complementary (adding up to 90\u00b0) and supplementary angles (adding up to 180\u00b0).</li> </ul> </li> <li> <p>Angle Bisectors:</p> <ul> <li>Find the angle that is exactly half of a right angle.</li> <li>Task: Set the angle to 45\u00b0 and discuss the concept of an angle bisector.</li> </ul> </li> <li> <p>Dynamic Observation:</p> <ul> <li>Slowly move the slider from 0\u00b0 to 180\u00b0 and watch the rays.</li> <li>Question: How does the movement of the ray relate to the increase in angle measure?</li> </ul> </li> <li> <p>Creating Shapes:</p> <ul> <li>Use specific angles to imagine forming shapes (e.g., triangles with angles summing to 180\u00b0).</li> <li>Task: Think about how different angles can come together to form various polygons.</li> </ul> </li> </ol>"},{"location":"chapters/intro/angle-explorer/#assessment","title":"Assessment","text":"<ul> <li>Informal Observation: Monitor student engagement and understanding during activities.</li> <li>Class Participation: Encourage students to ask questions and contribute to discussions.</li> <li>Exit Slip: At the end of the lesson, have students write down:<ul> <li>One thing they learned.</li> <li>One question they still have.</li> </ul> </li> </ul>"},{"location":"chapters/intro/angle-explorer/#extension-activities","title":"Extension Activities","text":"<ul> <li> <p>Advanced Angle Types:</p> <ul> <li>Reflex Angles: Discuss angles greater than 180\u00b0 and how they would appear.</li> <li>Full Rotation (360\u00b0): Explore what happens when an angle completes a full circle.</li> <li> <p>Real-World Applications:</p> </li> <li> <p>Investigate how angles are used in fields like architecture, engineering, and art.</p> </li> <li>Project Idea: Design a simple structure or piece of art that incorporates various angle types.</li> <li> <p>Technology Integration:</p> </li> <li> <p>Encourage students to modify the MicroSim code (if appropriate) to add features, such as displaying angle measures beyond 180\u00b0.</p> </li> </ul> </li> </ul>"},{"location":"chapters/intro/angle-explorer/#teachers-notes","title":"Teacher's Notes","text":"<ul> <li> <p>Preparation:</p> <ul> <li>Ensure all students have access to a device that can run the MicroSim.</li> <li>Test the MicroSim beforehand to familiarize yourself with its functionality.</li> </ul> </li> <li> <p>Differentiation:</p> <ul> <li>For Visual Learners: Emphasize the visual changes in the angle as the slider moves.</li> <li>For Kinesthetic Learners: Have students use their arms to physically model different angles.</li> </ul> </li> <li> <p>Classroom Management:</p> <ul> <li>Set clear expectations for device use.</li> <li>Encourage collaboration but monitor to keep students on task.</li> </ul> </li> </ul>"},{"location":"chapters/intro/angle-explorer/#homework-assignment","title":"Homework Assignment","text":"<ul> <li>Worksheet on Angles:<ul> <li>Complete problems identifying and classifying angles in various diagrams.</li> <li>Draw and label examples of each angle type.</li> <li>Challenge Question: Find and photograph real-life examples of each angle type to share in the next class.</li> </ul> </li> </ul>"},{"location":"chapters/intro/angle-explorer/#reflection-and-feedback","title":"Reflection and Feedback","text":"<ul> <li>Note which concepts were well understood and which need reinforcement.</li> <li>Consider student feedback for improving future lessons.</li> </ul>"},{"location":"chapters/intro/angle-explorer/#student-feedback","title":"Student Feedback","text":"<p>Collect anonymous feedback on the MicroSim's effectiveness in enhancing understanding.</p>"},{"location":"chapters/intro/angle-explorer/#summary","title":"Summary","text":"<p>By engaging with the Angle Explorer MicroSim, students gain hands-on experience manipulating and observing angles, making abstract concepts tangible and interactive. This lesson plan encourages exploration, critical thinking, and real-world connections, fostering a deeper understanding of geometry.</p>"},{"location":"chapters/intro/comp-and-sup-angles/","title":"Complementary and Supplementary Angles","text":"<p>Lesson Plan: Understanding Complementary and Supplementary Angles Using the MicroSim</p>"},{"location":"chapters/intro/comp-and-sup-angles/#objective","title":"Objective","text":"<ul> <li>To help students visualize and understand the concepts of complementary and supplementary angles.</li> <li>To enable students to interactively explore how angles relate to each other through the MicroSim tool.</li> <li>To assess students' comprehension of angle relationships using the interactive simulation.</li> </ul>"},{"location":"chapters/intro/comp-and-sup-angles/#materials-needed","title":"Materials Needed","text":"<ul> <li>Computers or tablets with internet access.</li> <li>The MicroSim p5.js sketch for Complementary and Supplementary Angles.</li> </ul>"},{"location":"chapters/intro/comp-and-sup-angles/#lesson-outline","title":"Lesson Outline","text":""},{"location":"chapters/intro/comp-and-sup-angles/#1-introduction-10-minutes","title":"1. Introduction (10 minutes)","text":"<ul> <li>Begin with a brief review of basic angle concepts.<ul> <li>Define an angle and how it is measured in degrees.</li> <li>Introduce the terms:<ul> <li>Complementary Angles: Two angles whose measures add up to 90\u00b0.</li> <li>Supplementary Angles: Two angles whose measures add up to 180\u00b0.</li> </ul> </li> </ul> </li> <li>Explain the importance of understanding these angle relationships in geometry.</li> </ul>"},{"location":"chapters/intro/comp-and-sup-angles/#2-demonstration-of-the-microsim-5-minutes","title":"2. Demonstration of the MicroSim (5 minutes)","text":"<ul> <li>Project the MicroSim onto a screen for the whole class to see.</li> <li>Walk through the features of the MicroSim:<ul> <li>Slider Control: Adjusts the angle from 0\u00b0 to 180\u00b0.</li> <li>Visual Representation: Shows the angle with moving rays and labels.</li> <li>Angle Name Display: Identifies the type of angle based on its measure.</li> <li>Complement and Supplement Display: Calculates and displays the complement and supplement of the angle, if applicable.</li> </ul> </li> </ul>"},{"location":"chapters/intro/comp-and-sup-angles/#3-guided-exploration-15-minutes","title":"3. Guided Exploration (15 minutes)","text":"<ul> <li>Instruct students to access the MicroSim on their devices.</li> <li>Ask them to adjust the slider and observe:<ul> <li>How the angle changes visually.</li> <li>How the angle name changes (e.g., acute, right, obtuse).</li> <li>The calculations of the complement and supplement.</li> </ul> </li> <li>Pose the following questions for students to consider:<ul> <li>What happens to the complement as the angle increases?</li> <li>At what angle does the complement become \"None\" or \"N/A\"?</li> <li>How does the supplement change as the angle approaches 180\u00b0?</li> </ul> </li> <li>Encourage students to take notes on their observations.</li> </ul>"},{"location":"chapters/intro/comp-and-sup-angles/#4-interactive-activities-20-minutes","title":"4. Interactive Activities (20 minutes)","text":"<ul> <li>Activity 1: Finding Complements<ul> <li>Set the angle to various measures less than 90\u00b0.</li> <li>Record the angle and its complement.</li> <li>Verify that the sum equals 90\u00b0.</li> </ul> </li> <li>Activity 2: Finding Supplements<ul> <li>Set the angle to various measures less than 180\u00b0.</li> <li>Record the angle and its supplement.</li> <li>Verify that the sum equals 180\u00b0.</li> </ul> </li> <li>Activity 3: Special Angles<ul> <li>Identify what happens at 90\u00b0 and 180\u00b0.</li> <li>Discuss why the complement or supplement is \"None\" at these angles.</li> </ul> </li> <li>Activity 4: Angle Classification<ul> <li>Categorize angles based on their measures:<ul> <li>Acute (0\u00b0 &lt; angle &lt; 90\u00b0)</li> <li>Right (angle = 90\u00b0)</li> <li>Obtuse (90\u00b0 &lt; angle &lt; 180\u00b0)</li> <li>Straight (angle = 180\u00b0)</li> </ul> </li> </ul> </li> </ul>"},{"location":"chapters/intro/comp-and-sup-angles/#5-class-discussion-10-minutes","title":"5. Class Discussion (10 minutes)","text":"<ul> <li>Bring the class back together to discuss findings.</li> <li>Ask volunteers to share their observations and conclusions.</li> <li>Clarify any misconceptions and reinforce key concepts.</li> </ul>"},{"location":"chapters/intro/comp-and-sup-angles/#6-sample-assessment-10-minutes","title":"6. Sample Assessment (10 minutes)","text":"<ul> <li>Distribute or display the following questions for students to answer individually.</li> </ul>"},{"location":"chapters/intro/comp-and-sup-angles/#sample-assessment-questions","title":"Sample Assessment Questions","text":"<ol> <li> <p>If an angle measures 30\u00b0, what is its complement and supplement?</p> <ul> <li>Answer:<ul> <li>Complement: 60\u00b0</li> <li>Supplement: 150\u00b0</li> </ul> </li> <li> <p>An angle has a supplement that measures 100\u00b0. What is the measure of the angle?</p> </li> <li> <p>Answer: 80\u00b0, because 180\u00b0 - 100\u00b0 = 80\u00b0</p> </li> <li> <p>Why does an angle measuring 90\u00b0 have no complement?</p> </li> <li> <p>Answer: Because the complement would be 0\u00b0, and an angle of 0\u00b0 does not make sense in this context. Complementary angles must both be greater than 0\u00b0 and add up to 90\u00b0.</p> </li> <li> <p>Is it possible for an obtuse angle to have a complement? Explain why or why not.</p> </li> <li> <p>Answer: No, because obtuse angles measure more than 90\u00b0, and complementary angles must add up to 90\u00b0. Therefore, an obtuse angle cannot have a complement.</p> </li> <li> <p>Using the MicroSim, at what angle measure does the supplement become \"None\"? What does this signify?</p> </li> <li> <p>Answer: At 180\u00b0, the supplement becomes \"None\". This signifies that an angle measuring 180\u00b0 is a straight angle and does not have a supplement because there is no angle that can be added to it to reach 180\u00b0, as it already measures 180\u00b0.</p> </li> <li> <p>If two angles are supplementary and one angle measures x\u00b0, express the other angle in terms of x.</p> </li> <li> <p>Answer: The other angle measures (180\u00b0 - x)\u00b0.</p> </li> <li> <p>Using the MicroSim, find two angles that are both complementary and supplementary. Is this possible? Explain your reasoning.</p> </li> <li> <p>Answer: It is not possible for two angles to be both complementary and supplementary because complementary angles add up to 90\u00b0, while supplementary angles add up to 180\u00b0. No two angles can satisfy both conditions simultaneously.</p> </li> </ul> </li> </ol>"},{"location":"chapters/intro/comp-and-sup-angles/#conclusion","title":"Conclusion","text":"<ul> <li>Summarize the key takeaways from the lesson.<ul> <li>Complementary angles add up to 90\u00b0.</li> <li>Supplementary angles add up to 180\u00b0.</li> <li>The MicroSim is a useful tool for visualizing and understanding these concepts.</li> </ul> </li> <li>Encourage students to explore the MicroSim further at home to reinforce their understanding.</li> </ul>"},{"location":"chapters/intro/comp-and-sup-angles/#homework-optional","title":"Homework (Optional)","text":"<ul> <li>Assign problems from the textbook related to complementary and supplementary angles.</li> <li>Ask students to create their own angle problems and solve them using the MicroSim.</li> </ul> <p>Note to Students: The MicroSim is an interactive way to see how angles work together. By adjusting the slider, you can see in real-time how changing one angle affects its complement and supplement. Use this tool to deepen your understanding and have fun exploring the world of geometry!</p> <p>o1</p>"},{"location":"chapters/lines/","title":"Chapter 3: Parallel and Perpendicular Lines","text":"<p>Explore the properties of parallel and perpendicular lines and the angles formed when they are intersected by a transversal. Understand corresponding, alternate interior, and alternate exterior angles.</p> <p>MicroSims:</p> <ul> <li>Parallel Lines with Transversal: Manipulate lines to observe angle relationships.</li> <li>Perpendicular Line Constructor: Create perpendicular lines and examine right angles.</li> </ul>"},{"location":"chapters/polygons/","title":"Polygons","text":""},{"location":"chapters/proofs/","title":"Chapter 2: Reasoning and Proof","text":"<p>Geometry is more than just shapes and figures; it's a way of thinking. In this chapter, you will learn how to approach problems logically, just as mathematicians have done for thousands of years. By exploring inductive reasoning, deductive reasoning, and the process of creating geometric proofs, you'll build tools to think critically and solve problems effectively.</p>"},{"location":"chapters/proofs/#1-the-art-of-logical-reasoning","title":"1. The Art of Logical Reasoning","text":""},{"location":"chapters/proofs/#what-is-reasoning","title":"What is Reasoning?","text":"<p>Reasoning is the process of drawing conclusions based on evidence or logical rules. It is the foundation of problem-solving in geometry and beyond.</p> <p>There are two main types of reasoning:</p> <ol> <li>Inductive Reasoning: Making generalizations based on specific examples or patterns.</li> <li>Deductive Reasoning: Drawing specific conclusions based on general rules or facts.</li> </ol>"},{"location":"chapters/proofs/#11-inductive-reasoning-finding-patterns","title":"1.1 Inductive Reasoning: Finding Patterns","text":"<p>Inductive reasoning involves observing patterns and making conjectures (educated guesses). It is like being a detective---examining clues and forming a hypothesis.</p>"},{"location":"chapters/proofs/#example","title":"Example:","text":"<ol> <li>The first three angles of a triangle are 60\u00b0, 60\u00b0, and 60\u00b0.</li> <li>The second triangle also has 60\u00b0, 60\u00b0, and 60\u00b0 angles.</li> <li>You observe this for 10 more triangles and conclude: \"All triangles with equal angles are equilateral.\"</li> </ol> <p>While inductive reasoning is useful, it's not always foolproof. A single counterexample can prove a conjecture wrong.</p> <p>Suggested Figure: A series of triangles with various angles labeled, leading to a conjecture.</p>"},{"location":"chapters/proofs/#12-deductive-reasoning-from-facts-to-conclusions","title":"1.2 Deductive Reasoning: From Facts to Conclusions","text":"<p>Deductive reasoning starts with known facts (definitions, postulates, or theorems) and uses logical steps to reach conclusions.</p>"},{"location":"chapters/proofs/#example_1","title":"Example:","text":"<ol> <li>All right angles measure 90\u00b0 (fact).</li> <li>\u2220A is a right angle (fact).</li> <li>Therefore, \u2220A measures 90\u00b0 (conclusion).</li> </ol> <p>Deductive reasoning guarantees correct conclusions if the initial facts are true.</p> <p>Suggested Figure: A flowchart showing logical steps to deduce a conclusion about angles.</p>"},{"location":"chapters/proofs/#2-the-structure-of-a-geometric-proof","title":"2. The Structure of a Geometric Proof","text":"<p>A proof is a logical argument that uses deductive reasoning to show that a statement is true. In geometry, proofs are like solving a puzzle---you start with known pieces (givens) and assemble them step-by-step until the conclusion becomes clear.</p>"},{"location":"chapters/proofs/#21-the-ingredients-of-a-proof","title":"2.1 The Ingredients of a Proof","text":"<ul> <li>Givens: The facts or conditions provided.</li> <li>Definitions: Precise meanings of geometric terms (e.g., \"A triangle has three sides\").</li> <li>Postulates: Statements accepted without proof (e.g., \"Through any two points, there is exactly one line\").</li> <li>Theorems: Proven statements that can be used in other proofs.</li> <li>Diagrams: Visual aids to clarify relationships.</li> </ul>"},{"location":"chapters/proofs/#22-types-of-proofs","title":"2.2 Types of Proofs","text":""},{"location":"chapters/proofs/#two-column-proofs","title":"Two-Column Proofs","text":"<p>These proofs organize statements and their justifications in two columns:</p> <ul> <li>Left Column: Statements (what you know or conclude).</li> <li>Right Column: Reasons (why each statement is true).</li> </ul>"},{"location":"chapters/proofs/#paragraph-proofs","title":"Paragraph Proofs","text":"<p>In paragraph proofs, the reasoning is written as a narrative, combining statements and justifications in flowing sentences.</p>"},{"location":"chapters/proofs/#23-constructing-a-proof","title":"2.3 Constructing a Proof","text":"<p>Here's a step-by-step process:</p> <ol> <li>Understand the Problem:<ul> <li>What are you trying to prove?</li> <li>What information is given?</li> </ul> </li> <li>Draw a Diagram:<ul> <li>Include all relevant points, lines, and angles.</li> </ul> </li> <li>State the Givens and Goal:<ul> <li>Write the facts you know and the conclusion you need to reach.</li> </ul> </li> <li>Apply Definitions, Postulates, and Theorems:<ul> <li>Use logical steps to connect the givens to the goal.</li> </ul> </li> <li>Write the Proof:<ul> <li>Choose either a two-column or paragraph format.</li> </ul> </li> </ol>"},{"location":"chapters/proofs/#example-proof","title":"Example Proof","text":"<p>Theorem: If two angles are supplementary to the same angle, they are congruent.</p> <p>Givens:</p> <ul> <li>\u2220A and \u2220B are supplementary.</li> <li>\u2220B and \u2220C are supplementary.</li> </ul> <p>To Prove: \u2220A \u2245 \u2220C.</p> <p>Proof (Two-Column Format):</p> Statements Reasons 1. \u2220A + \u2220B = 180\u00b0 Definition of supplementary angles --- --- 2. \u2220B + \u2220C = 180\u00b0 Definition of supplementary angles 3. \u2220A + \u2220B = \u2220B + \u2220C Substitution Property 4. \u2220A = \u2220C Subtraction Property of Equality <p>Suggested Figure: A diagram with three angles labeled \u2220A, \u2220B, and \u2220C, highlighting their relationships.</p>"},{"location":"chapters/proofs/#3-stories-from-the-history-of-reasoning-and-proof","title":"3. Stories from the History of Reasoning and Proof","text":""},{"location":"chapters/proofs/#31-the-legacy-of-euclid","title":"3.1 The Legacy of Euclid","text":"<p>The first systematic approach to proofs was created by Euclid of Alexandria, a Greek mathematician often called the \"Father of Geometry.\" His book Elements is one of the most influential works in mathematics, introducing axioms, postulates, and formal proofs.</p> <p>Story Idea: Imagine Euclid teaching his students in ancient Alexandria, challenging them to prove simple truths with logic rather than just intuition. Picture the lively debates and \"aha!\" moments when concepts clicked.</p>"},{"location":"chapters/proofs/#32-the-story-of-the-pythagorean-theorem","title":"3.2 The Story of the Pythagorean Theorem","text":"<p>The Pythagorean Theorem is one of the most famous results in geometry. While Pythagoras himself may not have proven it, his followers did. Some ancient proofs of this theorem involved arranging tiles in clever ways.</p> <p>Story Idea: Tell the tale of an ancient Greek artisan who noticed that square tiles could fit perfectly into a triangle to prove the theorem. Add drama by involving Pythagoras inspecting the pattern.</p> <p>Suggested Figure: A visual proof of the Pythagorean Theorem using squares and triangles.</p>"},{"location":"chapters/proofs/#33-hypatia-of-alexandria","title":"3.3 Hypatia of Alexandria","text":"<p>Hypatia, one of the first known female mathematicians, lived in the 4th century CE and taught geometry in Alexandria. She emphasized logical thinking and proof, inspiring generations of students.</p> <p>Story Idea: Paint a vivid picture of Hypatia's classroom, filled with curious students of all backgrounds, where logical reasoning was celebrated as a path to understanding the universe.</p>"},{"location":"chapters/proofs/#4-practice-problems","title":"4. Practice Problems","text":""},{"location":"chapters/proofs/#41-inductive-reasoning","title":"4.1 Inductive Reasoning","text":"<ol> <li>Look at the sequence: 2, 4, 8, 16... What is the next number? Explain your reasoning.</li> </ol>"},{"location":"chapters/proofs/#42-deductive-reasoning","title":"4.2 Deductive Reasoning","text":"<ol> <li>If a quadrilateral is a square, then it has four congruent sides. Prove that a figure with four congruent sides and four right angles is a square.</li> </ol>"},{"location":"chapters/proofs/#43-proof-construction","title":"4.3 Proof Construction","text":"<ol> <li>Prove: Vertical angles are congruent.<ul> <li>Hint: Use the definition of vertical angles and the Linear Pair Postulate.</li> </ul> </li> </ol> <p>Suggested Figure: Two intersecting lines forming vertical angles, labeled appropriately.</p>"},{"location":"chapters/proofs/#5-conclusion","title":"5. Conclusion","text":"<p>Reasoning and proof are powerful tools that allow you to think critically and systematically. Whether solving puzzles, proving theorems, or even making decisions in everyday life, these skills will serve you well.</p> <p>Challenge: Can you write your own proof for a simple geometric theorem? Try proving that the angles in a triangle always add up to 180\u00b0!</p> <p>This chapter bridges ancient wisdom with modern techniques, empowering you to think like a mathematician and solve problems with clarity and confidence.</p>"},{"location":"chapters/properties-of-triangles/","title":"Chapter 5: Properties of Triangles","text":"<p>Investigate special segments in triangles, including medians, altitudes, and angle bisectors. Discover points of concurrency like the centroid, orthocenter, circumcenter, and incenter.</p> <p>MicroSims:</p> <ul> <li>Triangle Centers Explorer: Locate and explore different centers within a triangle.</li> <li>Median and Altitude Interactive: Visualize how medians and altitudes intersect.</li> </ul>"},{"location":"chapters/similarity/","title":"Chapter 7: Similarity","text":"<p>Understand the concept of similar figures and the criteria for triangle similarity, including AA, SSS, and SAS. Learn to apply proportions and scale factors in problem-solving.</p> <p>MicroSims:</p> <ul> <li>Similarity Transformer: Apply dilations to shapes to explore similarity.</li> <li>Proportionality Simulator: Visualize and manipulate proportional segments.</li> </ul>"},{"location":"chapters/surface-area-and-volume/","title":"Chapter 11: Surface Area and Volume","text":"<p>Expand your knowledge to three-dimensional figures by calculating surface area and volume. Explore prisms, cylinders, pyramids, cones, and spheres.</p> <p>MicroSims:</p> <ul> <li>3D Solid Visualizer: Rotate and manipulate solids to understand their properties.</li> <li>Surface Area and Volume Simulator: Change dimensions to see effects on measurements.</li> </ul>"},{"location":"chapters/transformations/","title":"Chapter 12: Transformations","text":"<p>Investigate geometric transformations, including translations, reflections, rotations, and dilations. Understand how transformations affect figures on the coordinate plane.</p> <p>MicroSims:</p> <ul> <li>Transformation Playground: Apply different transformations to shapes and observe outcomes.</li> <li>Coordinate Mapping Tool: See how points move under various transformations.</li> </ul>"},{"location":"chapters/trigonometry/","title":"Chapter 8: Right Triangles and Trigonometry","text":"<p>Introduce the properties of right triangles and the basics of trigonometry.  Learn about sine, cosine, and tangent ratios and how to apply them to find missing sides and angles.</p> <p>MicroSims:</p> <ul> <li> <p>Right Triangle Solver: Input known values to calculate unknown sides or angles.</p> </li> <li> <p>Pythagorean Theorem MicroSim</p> </li> <li> <p>Trigonometric Ratio Explorer: Adjust triangle sides to see changes in trig ratios.</p> </li> </ul>"},{"location":"chapters/trigonometry/pythagorean-theorem/","title":"Pythagorean Theorem","text":""},{"location":"prompts/","title":"Sample Prompts","text":"<p>Use these prompts to generate your own knowledge graph for a geometry course.</p>"},{"location":"prompts/#course-description","title":"Course Description","text":""},{"location":"prompts/#concept-enumerations","title":"Concept Enumerations","text":""},{"location":"prompts/#concept-dependencies","title":"Concept Dependencies","text":""},{"location":"prompts/#concept-taxonomy","title":"Concept Taxonomy","text":""},{"location":"prompts/#concept-glossary","title":"Concept Glossary","text":""},{"location":"prompts/01-course-description/","title":"Course Description","text":""},{"location":"prompts/01-course-description/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Create a one-page course description of a high-school\nlevel geometry course as it might appear in a school\ncourse catalog.  Mention that the course is designed\nfor self-paced independent learning and includes a\nlarge number of interactive geometry animations\nand simulations to make the concepts fun and easy to learn. \n</code></pre>"},{"location":"prompts/01-course-description/#sample-chatgpt-response","title":"Sample ChatGPT Response","text":"<p>Title: High School Geometry Course Code: MATH-204 Grade Levels: 9-12 Credits: 1.0</p>"},{"location":"prompts/01-course-description/#course-overview","title":"Course Overview","text":"<p>This high-school level Geometry course is designed for self-paced, independent learners who want to explore the world of shapes, sizes, patterns, and spatial reasoning in a flexible and engaging way. The course provides a comprehensive introduction to the fundamental concepts of geometry, including angles, lines, triangles, polygons, circles, transformations, and 3D objects.</p> <p>With a focus on visual and hands-on learning, students will have access to interactive geometry animations and simulations that make abstract concepts fun, intuitive, and easy to understand. These tools allow students to experiment, explore, and visualize geometric principles dynamically, fostering deeper comprehension and retention.</p>"},{"location":"prompts/01-course-description/#course-features","title":"Course Features","text":"<ul> <li>Self-Paced Learning: Work through the material at your own speed with flexible deadlines.</li> <li>Interactive Simulations: Hands-on tools for exploring concepts like congruence, similarity, and the Pythagorean theorem in an engaging way.</li> <li>Real-World Applications: Discover how geometry is used in architecture, design, robotics, and other fields.</li> <li>Support for Independent Study: Includes guided examples, video tutorials, and interactive problem sets for effective learning.</li> </ul>"},{"location":"prompts/01-course-description/#topics-covered","title":"Topics Covered","text":"<ul> <li>Basics of Geometry: Points, lines, planes, and angles</li> <li>Triangles: Properties, congruence, and similarity</li> <li>Polygons and Quadrilaterals: Classification and properties</li> <li>Circles: Arcs, chords, tangents, and sector areas</li> <li>Coordinate Geometry: Equations of lines and parabolas</li> <li>Transformations: Translations, reflections, rotations, and dilations</li> <li>Solid Geometry: Surface area and volume of 3D shapes</li> </ul>"},{"location":"prompts/01-course-description/#who-should-take-this-course","title":"Who Should Take This Course?","text":"<p>This course is ideal for students who:</p> <ul> <li>Prefer a flexible learning environment.</li> <li>Enjoy visual and hands-on approaches to problem-solving.</li> <li>Are preparing for standardized tests or higher-level math courses.</li> </ul>"},{"location":"prompts/01-course-description/#technology-requirements","title":"Technology Requirements","text":"<p>Students will need access to a computer or tablet with internet connectivity to use the interactive tools and simulations included in the course.</p>"},{"location":"prompts/01-course-description/#assessment","title":"Assessment","text":"<p>Students will complete online quizzes, practice problems, and projects demonstrating their understanding of key concepts. A final exam or cumulative project will be required to earn course credit.</p> <p>Take this exciting journey into the world of Geometry and experience how mathematics can come alive with interactivity and exploration!</p> <p>4o</p>"},{"location":"prompts/02-concept-enumerations/","title":"Concept Enumerations","text":"<p>That is a perfect course description.  Now for our next step, use this course description to create an enumerated  list of the 150 core concepts taught in this course.  Return this list as a numbered list with only a short concept label in each list element.  Use short names and abbreviations when possible.</p>"},{"location":"prompts/02-concept-enumerations/#chatgpt-o1-preview-response","title":"ChatGPT o1-preview response","text":"<ol> <li>Point</li> <li>Line</li> <li>Plane</li> <li>Angle</li> <li>Segment</li> <li>Ray</li> <li>Collinear points</li> <li>Coplanar points</li> <li>Intersection</li> <li>Parallel lines</li> <li>Perpendicular lines</li> <li>Midpoint</li> <li>Bisector</li> <li>Angle bisector</li> <li>Perp bisector</li> <li>Acute angle</li> <li>Right angle</li> <li>Obtuse angle</li> <li>Straight angle</li> <li>Reflex angle</li> <li>Adjacent angles</li> <li>Vertical angles</li> <li>Complementary angles</li> <li>Supplementary angles</li> <li>Linear pair</li> <li>Transversal</li> <li>Corresponding angles</li> <li>Alt int angles</li> <li>Alt ext angles</li> <li>Same-side int angles</li> <li>Same-side ext angles</li> <li>Triangle</li> <li>Scalene triangle</li> <li>Isosceles triangle</li> <li>Equilateral triangle</li> <li>Acute triangle</li> <li>Right triangle</li> <li>Obtuse triangle</li> <li>Triangle sum theorem</li> <li>Ext angle theorem</li> <li>Congruent triangles</li> <li>SSS congruence</li> <li>SAS congruence</li> <li>ASA congruence</li> <li>AAS congruence</li> <li>HL congruence</li> <li>Triangle inequality</li> <li>Similar triangles</li> <li>AA similarity</li> <li>SSS similarity</li> <li>SAS similarity</li> <li>Proportional sides</li> <li>Pythagorean theorem</li> <li>45-45-90 triangle</li> <li>30-60-90 triangle</li> <li>Quadrilateral</li> <li>Parallelogram</li> <li>Rectangle</li> <li>Square</li> <li>Rhombus</li> <li>Trapezoid</li> <li>Isosceles trapezoid</li> <li>Kite</li> <li>Properties of parallelogram</li> <li>Properties of rectangle</li> <li>Properties of rhombus</li> <li>Properties of square</li> <li>Properties of trapezoid</li> <li>Midsegment theorem</li> <li>Polygon interior angles</li> <li>Polygon exterior angles</li> <li>Circle</li> <li>Radius</li> <li>Diameter</li> <li>Chord</li> <li>Tangent</li> <li>Secant</li> <li>Arc</li> <li>Central angle</li> <li>Inscribed angle</li> <li>Arc length</li> <li>Sector area</li> <li>Circumference</li> <li>Equation of circle</li> <li>Distance formula</li> <li>Midpoint formula</li> <li>Slope</li> <li>Slope-intercept form</li> <li>Point-slope form</li> <li>Standard form (line)</li> <li>Parallel lines (coord)</li> <li>Perpendicular lines (coord)</li> <li>Reflection</li> <li>Rotation</li> <li>Translation</li> <li>Dilation</li> <li>Transformation</li> <li>Rigid motion</li> <li>Isometry</li> <li>Symmetry</li> <li>Line symmetry</li> <li>Rotational symmetry</li> <li>Tessellation</li> <li>Glide reflection</li> <li>Composite transformations</li> <li>Preimage</li> <li>Image</li> <li>Vector</li> <li>Directed line segment</li> <li>Component form</li> <li>Solid geometry</li> <li>Prism</li> <li>Cylinder</li> <li>Pyramid</li> <li>Cone</li> <li>Sphere</li> <li>Surface area (SA)</li> <li>Volume (Vol)</li> <li>SA of prism</li> <li>SA of cylinder</li> <li>SA of pyramid</li> <li>SA of cone</li> <li>SA of sphere</li> <li>Vol of prism</li> <li>Vol of cylinder</li> <li>Vol of pyramid</li> <li>Vol of cone</li> <li>Vol of sphere</li> <li>Nets</li> <li>Cross section</li> <li>Euler's formula</li> <li>Congruent figures</li> <li>Similar figures</li> <li>Scale factor</li> <li>Inductive reasoning</li> <li>Deductive reasoning</li> <li>Conditional statement</li> <li>Converse</li> <li>Inverse</li> <li>Contrapositive</li> <li>Biconditional</li> <li>Proof</li> <li>Two-column proof</li> <li>Paragraph proof</li> <li>Flowchart proof</li> <li>Coordinate proof</li> <li>Geometric constructions</li> <li>Compass and straightedge</li> <li>Constructing bisectors</li> <li>Constructing parallels</li> </ol>"},{"location":"prompts/02-concept-enumerations/#workflow","title":"Workflow","text":"<p>Breaking down concepts</p> <p>I'm listing 150 core geometry concepts for a high-school course, using short names and abbreviations. The list is numbered, each concept clearly labeled.</p> <p>Unveiling core concepts</p> <p>I'm detailing fundamental geometry concepts, including points, lines, triangles, polygons, circles, coordinate geometry, transformations, and solid geometry. Each topic will be expanded to identify at least 150 individual concepts.</p> <p>Identifying geometric terms</p> <p>I'm working through various geometric concepts such as angles, triangles, and congruence through the exploration of terms like acute, obtuse, right, and straight angles, as well as different types of triangles and their properties.</p> <p>Examining geometric shapes</p> <p>I'm mapping out the study of various geometric forms, ranging from triangles like 45-45-90 and 30-60-90, to quadrilaterals such as parallelograms, rectangles, and trapezoids, each with their unique properties.</p> <p>Breaking down math insights</p> <p>I'm outlining a comprehensive list of 150 concepts in geometry, including various solids and their properties, geometric constructions, logical reasoning, proof types, and specific triangle properties.</p>"},{"location":"prompts/03-concept-dependency/","title":"Concept Dependency","text":""},{"location":"prompts/03-concept-dependency/#prompt","title":"Prompt","text":"<pre><code>That was very good.\nLet's call the number in front of each concept the ConceptID\nand the string after the number the \"ConceptLabel\".\n\nNow our next step is to create a precise concept learning dependency\ngraph.  For each concept, create a list of other concepts\nthat must be understood before that concept can be mastered.\n\nReturn a CSV file that has the following format:\n\n- Column 1 is the ConceptID from the list above\n- Column 2 is the ConceptLabel from the list above\n- Column 3 is the Dependencies.  It is a pipe-delimited list of the ConceptIDs that this concept depends on.\n\nFoundation concepts don't depend on any other concepts.  Their Dependencies is empty.  Some of  initial introductory concepts are foundation concepts.\nThere must be at least one concept that depends on a foundation concept.\nMake sure each concept is connected to the graph in some way.\n</code></pre>"},{"location":"prompts/03-concept-dependency/#sample-response","title":"Sample Response","text":"<pre><code>ConceptID,ConceptLabel,Dependencies\n1,Point,\n2,Line,\n3,Plane,\n4,Angle,6\n5,Segment,1|2\n6,Ray,1|2\n7,Collinear points,1|2\n8,Coplanar points,1|3\n9,Intersection,2|3\n10,Parallel lines,2\n11,Perpendicular lines,2\n12,Midpoint,5\n13,Bisector,5\n14,Angle bisector,4|13\n15,Perp bisector,5|11\n16,Acute angle,4\n17,Right angle,4\n18,Obtuse angle,4\n19,Straight angle,4\n20,Reflex angle,4\n21,Adjacent angles,4\n22,Vertical angles,4\n23,Complementary angles,4|16|17\n24,Supplementary angles,4|17|18\n25,Linear pair,4|21\n26,Transversal,2|10\n27,Corresponding angles,26|4\n28,Alt int angles,26|4\n29,Alt ext angles,26|4\n30,Same-side int angles,26|4\n31,Same-side ext angles,26|4\n32,Triangle,5\n33,Scalene triangle,32\n34,Isosceles triangle,32\n35,Equilateral triangle,32\n36,Acute triangle,32|16\n37,Right triangle,32|17\n38,Obtuse triangle,32|18\n39,Triangle sum theorem,32\n40,Ext angle theorem,32|39\n41,Congruent triangles,32\n42,SSS congruence,41|5\n43,SAS congruence,41|5|4\n44,ASA congruence,41|4\n45,AAS congruence,41|4\n46,HL congruence,41|37|11\n47,Triangle inequality,32|5\n48,Similar triangles,32\n49,AA similarity,48|4\n50,SSS similarity,48|5\n51,SAS similarity,48|5|4\n52,Proportional sides,5\n53,Pythagorean theorem,37|5\n54,45-45-90 triangle,37|53\n55,30-60-90 triangle,37|53\n56,Quadrilateral,5\n57,Parallelogram,56|10\n58,Rectangle,57|11\n59,Square,58|60\n60,Rhombus,57\n61,Trapezoid,56|10\n62,Isosceles trapezoid,61\n63,Kite,56\n64,Properties of parallelogram,57\n65,Properties of rectangle,58\n66,Properties of rhombus,60\n67,Properties of square,59\n68,Properties of trapezoid,61\n69,Midsegment theorem,32|12\n70,Polygon interior angles,5|56\n71,Polygon exterior angles,5|56\n72,Circle,1\n73,Radius,72\n74,Diameter,72|73\n75,Chord,72\n76,Tangent,72|2\n77,Secant,72|2\n78,Arc,72\n79,Central angle,72|4\n80,Inscribed angle,72|4\n81,Arc length,72|78\n82,Sector area,72|79\n83,Circumference,72\n84,Equation of circle,72|85\n85,Distance formula,1\n86,Midpoint formula,85\n87,Slope,85\n88,Slope-intercept form,87\n89,Point-slope form,87\n90,Standard form (line),87\n91,Parallel lines (coord),87|10\n92,Perpendicular lines (coord),87|11\n93,Reflection,97\n94,Rotation,97\n95,Translation,97\n96,Dilation,97\n97,Transformation,\n98,Rigid motion,97\n99,Isometry,98\n100,Symmetry,97\n101,Line symmetry,100|2\n102,Rotational symmetry,100|94\n103,Tessellation,97|5\n104,Glide reflection,93|95\n105,Composite transformations,97\n106,Preimage,97\n107,Image,97\n108,Vector,95\n109,Directed line segment,5|108\n110,Component form,108\n111,Solid geometry,2|3\n112,Prism,111\n113,Cylinder,111\n114,Pyramid,111\n115,Cone,111\n116,Sphere,111\n117,Surface area (SA),111\n118,Volume (Vol),111\n119,SA of prism,117|112\n120,SA of cylinder,117|113\n121,SA of pyramid,117|114\n122,SA of cone,117|115\n123,SA of sphere,117|116\n124,Vol of prism,118|112\n125,Vol of cylinder,118|113\n126,Vol of pyramid,118|114\n127,Vol of cone,118|115\n128,Vol of sphere,118|116\n129,Nets,111\n130,Cross section,111\n131,Euler's formula,112|114|129\n132,Congruent figures,41\n133,Similar figures,48\n134,Scale factor,133\n135,Inductive reasoning,\n136,Deductive reasoning,\n137,Conditional statement,\n138,Converse,137\n139,Inverse,137\n140,Contrapositive,137\n141,Biconditional,137\n142,Proof,135|136|137\n143,Two-column proof,142\n144,Paragraph proof,142\n145,Flowchart proof,142\n146,Coordinate proof,85|142\n147,Geometric constructions,2|5\n148,Compass and straightedge,147\n149,Constructing bisectors,148\n150,Constructing parallels,148\n</code></pre>"},{"location":"prompts/03-concept-dependency/#workflow","title":"Workflow","text":"<p>Crafting the CSV file</p> <p>I'm preparing to generate a CSV file with three crucial columns: ConceptID, ConceptLabel, and Dependencies. Foundation concepts have empty Dependencies, some initial concepts are foundations, and each concept links to the graph.</p> <p>Mapping dependencies</p> <p>I'm organizing 150 concepts into a CSV file, linking each concept to its ConceptID and listing dependencies using pipe-delimited ConceptIDs.</p> <p>Ensuring logical progression</p> <p>I'm making sure each cell in the CSV file aligns with geometric concepts. Dependencies must progress logically, forming a cohesive and connected graph.</p> <p>Categorizing concepts</p> <p>I'm mapping out the concepts and identifying how they link together. Next, I'll group them under broader topics for clarity and organization.</p> <p>Mapping geometric concepts</p> <p>I'm piecing together geometric terms like interior and exterior angles, triangles, congruence, similarity, polygon properties, and circle terms such as radius, diameter, chord, and tangent.</p> <p>Organizing geometry topics</p> <p>Deciphering foundation concepts</p> <p>I'm identifying foundational geometric concepts like point, line, plane, segment, ray, and collinear points. Understanding angles might require grasping rays first.</p> <p>I'm mapping out foundational concepts and their dependencies. Foundational concepts include Point, Line, and Plane. Segment and Ray might be foundational or dependent.</p> <p>Shaping the structure</p> <p>OK, let me see. I'm working through the CSV rows, pinpointing relationships and nurturing foundational concepts. Progress is steady, making it a rewarding journey.</p> <p>Understanding geometric relationships</p> <p>I'm mapping out how various geometric concepts depend on types of angles and lines. This exploration highlights the connections between angles, bisectors, and directional lines.</p> <p>Mapping connections</p> <p>Identifying dependencies</p> <p>I'm organizing various triangle types and geometric properties by pinpointing key dependencies, such as congruent triangles, segments, and angles, while tracking the progression towards specific geometric conclusions.</p> <p>Analyzing geometric relationships</p> <p>I'm examining various geometric shapes, including rectangles, squares, triangles, and quadrilaterals, and their relationships with parallel and perpendicular lines, focusing on properties and theorems.</p> <p>Mapping relationships</p> <p>I'm gathering info on how concepts like diameter and radius interact within circles, then linking them to elements such as chords, tangents, and secants.</p> <p>Connecting geometric concepts</p> <p>I'm linking the concepts of perpendicular lines, reflection, rotation, translation, dilation, and transformation to their respective formulas and symmetries, creating a cohesive understanding of geometric principles.</p> <p>Mapping concepts</p> <p>I'm piecing together how concepts like component form, solid geometry, and surface area or volume depend on each other and on prior concepts, creating a logical interconnected structure of knowledge.</p> <p>Incorporating foundational and specific concepts, the pyramid and cone volumes intrigue me, as do cross sections and Euler's formula. Properties of congruent and similar figures deepen the exploration of geometric principles.</p> <p>Compiling dependencies</p> <p>I'm working through organizing concepts in a CSV file, detailing each concept's dependencies with ConceptIDs. The goal is to create a structured, informative document for clarity and understanding.</p> <p>Synthesizing geometric terms</p> <p>Piecing together the geometric terms and concepts, I'm focusing on points, lines, planes, angles, and polygons. Each term is linked to corresponding properties and theorems, forming a comprehensive geometric glossary.</p> <p>Revisiting transformations</p> <p>I'm rethinking the role of Transformation as a foundational idea, given that it involves mapping figures to others, which requires prior knowledge.</p>"},{"location":"prompts/04-taxonomy/","title":"Taxonomy","text":""},{"location":"prompts/04-taxonomy/#sample-prompt","title":"Sample Prompt","text":"<pre><code>That was perfect.  Thank you for your excellent results.\nThis is going very well.\n\nNext, I would like you to create a 10-classification taxonomy system to classify each concept.  For example here are some suggestions\n\n1. Foundational Concepts\n2. Terms and Definitions\n3. Types of Polygons and Shapes\n4. Forumlas\n5. Steps in a proof\n6. Application of geometry\n...\n10. Miscellaneous\n\nPlease consider these as a starting point and list a taxonomy and return your suggestions for a full 10-item classification system.\n</code></pre> <p>Certainly! Based on the concepts covered in the course and your suggestions, here is a 10-classification taxonomy system:</p> <ol> <li>Foundational Concepts</li> <li>Lines and Angles</li> <li>Triangles</li> <li>Quadrilaterals and Polygons</li> <li>Circles</li> <li>Coordinate Geometry</li> <li>Transformations and Symmetry</li> <li>Solid Geometry</li> <li>Reasoning and Proof</li> <li>Constructions and Tools</li> </ol> <p>Descriptions:</p> <ol> <li> <p>Foundational Concepts: Basic elements and definitions that form the groundwork of geometry, such as points, lines, planes, and basic postulates.</p> </li> <li> <p>Lines and Angles: Concepts involving the properties and relationships of lines, segments, rays, and various types of angles.</p> </li> <li> <p>Triangles: Study of triangle properties, classifications, congruence, similarity, and key theorems like the Pythagorean theorem.</p> </li> <li> <p>Quadrilaterals and Polygons: Exploration of four-sided figures and multi-sided polygons, including their properties, classifications, and angle sums.</p> </li> <li> <p>Circles: Concepts related to circles, including chords, tangents, arcs, sectors, and circle theorems.</p> </li> <li> <p>Coordinate Geometry: Application of algebraic principles to geometric problems using the coordinate plane, including equations of lines and circles.</p> </li> <li> <p>Transformations and Symmetry: Movements of figures in the plane, such as translations, rotations, reflections, dilations, and concepts of symmetry and tessellations.</p> </li> <li> <p>Solid Geometry: Study of three-dimensional figures, including prisms, cylinders, pyramids, cones, spheres, and calculations of surface area and volume.</p> </li> <li> <p>Reasoning and Proof: Development of logical thinking through inductive and deductive reasoning, understanding conditional statements, and various proof techniques.</p> </li> <li> <p>Constructions and Tools: Geometric constructions using tools like compass and straightedge, including constructing angles, bisectors, and parallel lines.</p> </li> </ol> <p>I hope this classification system aligns well with the course content and your requirements!</p>"},{"location":"prompts/04-taxonomy/#workflow","title":"Workflow","text":"<p>Crafting a taxonomy</p> <p>I\u2019m creating a 10-classification taxonomy system for 150 concepts. Considering user suggestions and adding new ideas to ensure accuracy and policy compliance.</p> <p>Charting the course</p> <p>I\u2019m outlining a 10-classification taxonomy system to categorize concepts, starting with Foundations of Geometry, Lines and Angles, Triangles, and progressing to Three-Dimensional Figures and Constructions. This approach ensures a comprehensive framework.</p> <p>Mapping the classifications</p> <p>I'm drafting a 10-item classification system for geometry topics, including foundational concepts, shapes, formulas, proofs, and construction techniques. This ensures a comprehensive and systematic approach.</p> <p>Organizing geometric topics</p> <p>I\u2019m piecing together a 10-item classification system for geometry, focusing on foundational concepts, lines, angles, triangles, quadrilaterals, circles, coordinate geometry, transformations, solids, and logic.</p> <p>Organizing key themes</p> <p>I\u2019m mapping out a taxonomy for a geometry course, covering foundational concepts, lines and angles, triangles, quadrilaterals, polygons, and circles, with a brief overview of each category.</p>"},{"location":"prompts/04-taxonomy/#adding-the-taxonomyid-to-the-csv-file","title":"Adding the TaxonomyID to the CSV file","text":"<pre><code>Thank you.  That was perfect. Now please generate a new CSV file and add one new column called the TaxonomyID.\n\nThe new format is:\n\n- Column 1 is the ConceptID from the list above\n- Column 2 is the ConceptLabel from the list above\n- Column 3 is the Dependencies.  It is a pipe-delimited list of the ConceptIDs that this concept depends on.\n- Column 4 is the TaxonomyID.  It matches the number in the taxonomy you re\n</code></pre>"},{"location":"prompts/04-taxonomy/#key","title":"Key","text":""},{"location":"prompts/04-taxonomy/#key-prompt","title":"Key Prompt","text":"<pre><code>please create an HTML table that has the key in it.  Use the following format:\n\n&lt;table&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Foundation&lt;/td&gt;\n                &lt;td style=\"background-color: red; color: white;\"&gt;Red&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Lines and Angles&lt;/td&gt;\n                &lt;td style=\"background-color: orange;\"&gt;Orange&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Triangles&lt;/td&gt;\n                &lt;td style=\"background-color: yellow;\"&gt;Yellow&lt;/td&gt;\n            &lt;/tr&gt;\n</code></pre>"},{"location":"prompts/04-taxonomy/#chatgpt-response","title":"ChatGPT Response","text":"<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Foundational Concepts&lt;/td&gt;\n        &lt;td style=\"background-color: red; color: white;\"&gt;Red&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Lines and Angles&lt;/td&gt;\n        &lt;td style=\"background-color: orange; color: black;\"&gt;Orange&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Triangles&lt;/td&gt;\n        &lt;td style=\"background-color: yellow; color: black;\"&gt;Yellow&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Quadrilaterals and Polygons&lt;/td&gt;\n        &lt;td style=\"background-color: green; color: white;\"&gt;Green&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Circles&lt;/td&gt;\n        &lt;td style=\"background-color: blue; color: white;\"&gt;Blue&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Coordinate Geometry&lt;/td&gt;\n        &lt;td style=\"background-color: indigo; color: white;\"&gt;Indigo&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Transformations and Symmetry&lt;/td&gt;\n        &lt;td style=\"background-color: violet; color: white;\"&gt;Violet&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Solid Geometry&lt;/td&gt;\n        &lt;td style=\"background-color: brown; color: white;\"&gt;Brown&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Reasoning and Proof&lt;/td&gt;\n        &lt;td style=\"background-color: gray; color: white;\"&gt;Gray&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Constructions and Tools&lt;/td&gt;\n        &lt;td style=\"background-color: black; color: white;\"&gt;Black&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>"},{"location":"prompts/05-glossary/","title":"Generating a Glossary of Terms","text":"<p>See the actual glossary of terms here: Glossary</p>"},{"location":"prompts/05-glossary/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Now for each concept in this course, please create an\nentry to a glossary of terms.  The label for the concept\nshould be placed in a level four markdown header.  A precise\nand concise definition should be placed in the body of the markdown.\n\nReturn the entire glossary of terms in alphabetical order.\n</code></pre>"},{"location":"prompts/05-glossary/#sample-response","title":"Sample Response","text":"<p>Title Glossary of Terms for a Geometry Course</p>"},{"location":"prompts/05-glossary/#45-45-90-triangle","title":"45-45-90 triangle","text":"<p>A special type of right triangle where the two legs are congruent, and the angles measure 45\u00b0, 45\u00b0, and 90\u00b0.</p>"},{"location":"prompts/05-glossary/#30-60-90-triangle","title":"30-60-90 triangle","text":"<p>A special type of right triangle with angles measuring 30\u00b0, 60\u00b0, and 90\u00b0, and the sides in the ratio 1:\u221a3:2.</p>"},{"location":"prompts/05-glossary/#aa-similarity","title":"AA similarity","text":"<p>A rule stating that two triangles are similar if two corresponding angles are congruent.</p>"},{"location":"prompts/05-glossary/#acute-angle","title":"Acute angle","text":"<p>An angle that measures less than 90\u00b0.</p>"},{"location":"prompts/05-glossary/#acute-triangle","title":"Acute triangle","text":"<p>A triangle where all three angles are acute (less than 90\u00b0).</p>"},{"location":"prompts/05-glossary/#adjacent-angles","title":"Adjacent angles","text":"<p>Two angles that share a common side and a common vertex.</p>"},{"location":"prompts/05-glossary/#alt-int-angles","title":"Alt int angles","text":"<p>Angles located on opposite sides of a transversal and inside the two lines it intersects.</p>"},{"location":"prompts/05-glossary/#alt-ext-angles","title":"Alt ext angles","text":"<p>Angles located on opposite sides of a transversal and outside the two lines it intersects.</p>"},{"location":"prompts/05-glossary/#angle","title":"Angle","text":"<p>A figure formed by two rays sharing a common endpoint called the vertex.</p>"},{"location":"prompts/05-glossary/#angle-bisector","title":"Angle bisector","text":"<p>A ray that divides an angle into two congruent angles.</p>"},{"location":"prompts/05-glossary/#arc","title":"Arc","text":"<p>A continuous portion of a circle.</p>"},{"location":"prompts/05-glossary/#arc-length","title":"Arc length","text":"<p>The distance along a circular arc, calculated as a portion of the circumference.</p>"},{"location":"prompts/05-glossary/#asa-congruence","title":"ASA congruence","text":"<p>A rule stating that two triangles are congruent if two angles and the included side are equal.</p>"},{"location":"prompts/05-glossary/#aas-congruence","title":"AAS congruence","text":"<p>A rule stating that two triangles are congruent if two angles and a non-included side are equal.</p>"},{"location":"prompts/05-glossary/#biconditional","title":"Biconditional","text":"<p>A logical statement where both the original statement and its converse are true.</p>"},{"location":"prompts/05-glossary/#bisector","title":"Bisector","text":"<p>A line, segment, or ray that divides a figure into two congruent parts.</p>"},{"location":"prompts/05-glossary/#central-angle","title":"Central angle","text":"<p>An angle whose vertex is at the center of a circle and whose sides are radii.</p>"},{"location":"prompts/05-glossary/#chord","title":"Chord","text":"<p>A segment whose endpoints lie on a circle.</p>"},{"location":"prompts/05-glossary/#collinear-points","title":"Collinear points","text":"<p>Points that lie on the same straight line.</p>"},{"location":"prompts/05-glossary/#compass-and-straightedge","title":"Compass and straightedge","text":"<p>Tools used in classical geometry for constructing figures and performing geometric tasks.</p>"},{"location":"prompts/05-glossary/#complementary-angles","title":"Complementary angles","text":"<p>Two angles whose measures add up to 90\u00b0.</p>"},{"location":"prompts/05-glossary/#composite-transformations","title":"Composite transformations","text":"<p>A combination of two or more geometric transformations.</p>"},{"location":"prompts/05-glossary/#conditional-statement","title":"Conditional statement","text":"<p>A logical statement that has two parts: a hypothesis and a conclusion, often written in \"if-then\" form.</p>"},{"location":"prompts/05-glossary/#congruent-figures","title":"Congruent figures","text":"<p>Figures that have the same size and shape.</p>"},{"location":"prompts/05-glossary/#congruent-triangles","title":"Congruent triangles","text":"<p>Triangles that are identical in size and shape, with corresponding sides and angles equal.</p>"},{"location":"prompts/05-glossary/#converse","title":"Converse","text":"<p>The statement formed by reversing the hypothesis and conclusion of a conditional statement.</p>"},{"location":"prompts/05-glossary/#coplanar-points","title":"Coplanar points","text":"<p>Points that lie on the same plane.</p>"},{"location":"prompts/05-glossary/#cross-section","title":"Cross section","text":"<p>A two-dimensional shape obtained by slicing a three-dimensional figure.</p>"},{"location":"prompts/05-glossary/#cylinder","title":"Cylinder","text":"<p>A three-dimensional figure with two congruent circular bases connected by a curved surface.</p>"},{"location":"prompts/05-glossary/#deductive-reasoning","title":"Deductive reasoning","text":"<p>A logical process in which a conclusion follows necessarily from the given premises.</p>"},{"location":"prompts/05-glossary/#diameter","title":"Diameter","text":"<p>A chord that passes through the center of a circle.</p>"},{"location":"prompts/05-glossary/#dilation","title":"Dilation","text":"<p>A transformation that changes the size of a figure but preserves its shape.</p>"},{"location":"prompts/05-glossary/#distance-formula","title":"Distance formula","text":"<p>A formula used to calculate the distance between two points in a plane.</p>"},{"location":"prompts/05-glossary/#directed-line-segment","title":"Directed line segment","text":"<p>A segment with a specific direction, defined by an initial point and a terminal point.</p>"},{"location":"prompts/05-glossary/#eulers-formula","title":"Euler's formula","text":"<p>A formula relating the vertices (V), edges (E), and faces (F) of a polyhedron: \\( V - E + F = 2 \\).</p>"},{"location":"prompts/05-glossary/#equation-of-circle","title":"Equation of circle","text":"<p>The formula \\( (x-h)^2 + (y-k)^2 = r^2 \\), representing a circle with center \\((h, k)\\) and radius \\(r\\).</p>"},{"location":"prompts/05-glossary/#exterior-angle-theorem","title":"Exterior angle theorem","text":"<p>A theorem stating that the measure of an exterior angle of a triangle is equal to the sum of the measures of the two non-adjacent interior angles.</p>"},{"location":"prompts/05-glossary/#flowchart-proof","title":"Flowchart proof","text":"<p>A proof presented as a diagram showing a logical sequence of steps with arrows connecting them.</p>"},{"location":"prompts/05-glossary/#glide-reflection","title":"Glide reflection","text":"<p>A transformation combining a reflection and a translation along the line of reflection.</p>"},{"location":"prompts/05-glossary/#image","title":"Image","text":"<p>The result of applying a transformation to a figure.</p>"},{"location":"prompts/05-glossary/#inductive-reasoning","title":"Inductive reasoning","text":"<p>A logical process of forming a generalization based on specific observations or examples.</p>"},{"location":"prompts/05-glossary/#isometry","title":"Isometry","text":"<p>A transformation that preserves distances, resulting in congruent figures.</p>"},{"location":"prompts/05-glossary/#kite","title":"Kite","text":"<p>A quadrilateral with two pairs of adjacent sides congruent and one pair of opposite angles congruent.</p>"},{"location":"prompts/05-glossary/#linear-pair","title":"Linear pair","text":"<p>A pair of adjacent angles whose non-common sides form a straight line.</p>"},{"location":"prompts/05-glossary/#line-symmetry","title":"Line symmetry","text":"<p>A property where a figure can be divided into two mirror-image halves by a line.</p>"},{"location":"prompts/05-glossary/#midpoint","title":"Midpoint","text":"<p>The point that divides a segment into two equal parts.</p>"},{"location":"prompts/05-glossary/#parallel-lines","title":"Parallel lines","text":"<p>Two lines in the same plane that never intersect.</p>"},{"location":"prompts/05-glossary/#perpendicular-bisector","title":"Perpendicular bisector","text":"<p>A line, segment, or ray that is perpendicular to a segment at its midpoint.</p>"},{"location":"prompts/05-glossary/#perpendicular-lines","title":"Perpendicular lines","text":"<p>Two lines that intersect to form a right angle.</p>"},{"location":"prompts/05-glossary/#point","title":"Point","text":"<p>A location in space with no size or dimension.</p>"},{"location":"prompts/05-glossary/#polygon-interior-angles","title":"Polygon interior angles","text":"<p>The angles inside a polygon, with the sum determined by \\((n-2) \\times 180^\\circ\\), where \\(n\\) is the number of sides.</p>"},{"location":"prompts/05-glossary/#proportional-sides","title":"Proportional sides","text":"<p>Corresponding sides of similar figures that have the same ratio.</p>"},{"location":"prompts/05-glossary/#pythagorean-theorem","title":"Pythagorean theorem","text":"<p>A theorem stating that in a right triangle, the square of the hypotenuse is equal to the sum of the squares of the other two sides.</p>"},{"location":"prompts/05-glossary/#radius","title":"Radius","text":"<p>A segment from the center of a circle to any point on the circle.</p>"},{"location":"prompts/05-glossary/#ray","title":"Ray","text":"<p>A part of a line that starts at a point and extends infinitely in one direction.</p>"},{"location":"prompts/05-glossary/#reflex-angle","title":"Reflex angle","text":"<p>An angle that measures more than 180\u00b0 but less than 360\u00b0.</p>"},{"location":"prompts/05-glossary/#right-angle","title":"Right angle","text":"<p>An angle that measures exactly 90\u00b0.</p>"},{"location":"prompts/05-glossary/#rotational-symmetry","title":"Rotational symmetry","text":"<p>A property of a figure that can be rotated about a point by a certain angle and still look the same.</p>"},{"location":"prompts/05-glossary/#scalene-triangle","title":"Scalene triangle","text":"<p>A triangle with no congruent sides.</p>"},{"location":"prompts/05-glossary/#slope","title":"Slope","text":"<p>A measure of the steepness of a line, calculated as the ratio of the vertical change to the horizontal change.</p>"},{"location":"prompts/05-glossary/#sss-congruence","title":"SSS congruence","text":"<p>A rule stating that two triangles are congruent if all three pairs of corresponding sides are equal.</p>"},{"location":"prompts/05-glossary/#sss-similarity","title":"SSS similarity","text":"<p>A rule stating that two triangles are similar if their corresponding sides are proportional.</p>"},{"location":"prompts/05-glossary/#tangent","title":"Tangent","text":"<p>A line that touches a circle at exactly one point.</p>"},{"location":"prompts/05-glossary/#tessellation","title":"Tessellation","text":"<p>A pattern of shapes that fit together without gaps or overlaps.</p>"},{"location":"prompts/05-glossary/#transformation","title":"Transformation","text":"<p>A change in the position, size, or shape of a figure.</p>"},{"location":"prompts/05-glossary/#transversal","title":"Transversal","text":"<p>A line that intersects two or more lines at distinct points.</p>"},{"location":"prompts/05-glossary/#triangle-inequality","title":"Triangle inequality","text":"<p>A rule stating that the sum of the lengths of any two sides of a triangle is greater than the length of the third side.</p>"},{"location":"prompts/05-glossary/#vertex","title":"Vertex","text":"<p>The common endpoint of two rays or segments in an angle, polygon, or polyhedron.</p>"},{"location":"prompts/05-glossary/#vertical-angles","title":"Vertical angles","text":"<p>Two angles formed by intersecting lines, sharing a common vertex but not a common side.</p>"},{"location":"prompts/06-word-cloud/","title":"Word Cloud Prompt","text":""},{"location":"prompts/06-word-cloud/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Create a JavaScript program within an HTML file\nusing wordcloud2 JavaScript \nlibrary that generates a word cloud diagram for the \nmost 50 most important concepts in a geometry textbook.\nRank the terms on a scale from 30 to 70 with the\nmost commonly referenced terms getting a score of 70\nand the least commonly referenced term getting a 30.\n\nGenerate a single HTML file that has the terms in the body \nof the JavaScript.\n</code></pre>"},{"location":"prompts/06-word-cloud/#sample-response","title":"Sample Response","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Geometry Word Cloud&lt;/title&gt;\n    &lt;!-- Load the WordCloud2.js library --&gt;\n    &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/wordcloud2.js/1.1.0/wordcloud2.min.js\"&gt;&lt;/script&gt;\n    &lt;style&gt;\n        #word-cloud {\n            width: 100%;\n            height: 600px;\n            border: 1px solid #ccc;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1 style=\"text-align: center;\"&gt;Geometry Word Cloud&lt;/h1&gt;\n    &lt;div id=\"word-cloud\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n        // Data for the top 50 geometry concepts with importance scores\n        const geometryConcepts = [\n            [\"Triangle\", 70],\n            [\"Circle\", 68],\n            [\"Angle\", 67],\n            [\"Line\", 65],\n            [\"Quadrilateral\", 63],\n            [\"Polygon\", 62],\n            [\"Congruence\", 61],\n            [\"Similarity\", 60],\n            [\"Right Triangle\", 59],\n            [\"Pythagorean Theorem\", 58],\n            [\"Parallel Lines\", 57],\n            [\"Perpendicular Lines\", 56],\n            [\"Transformations\", 55],\n            [\"Symmetry\", 54],\n            [\"Coordinate Geometry\", 53],\n            [\"Tangent\", 52],\n            [\"Chord\", 51],\n            [\"Radius\", 50],\n            [\"Diameter\", 49],\n            [\"Arc\", 48],\n            [\"Sector\", 47],\n            [\"Surface Area\", 46],\n            [\"Volume\", 45],\n            [\"Midpoint\", 44],\n            [\"Bisector\", 43],\n            [\"Angle Bisector\", 42],\n            [\"Complementary Angles\", 41],\n            [\"Supplementary Angles\", 40],\n            [\"Vertical Angles\", 39],\n            [\"Adjacent Angles\", 38],\n            [\"Linear Pair\", 37],\n            [\"Transversal\", 36],\n            [\"Alternate Interior Angles\", 35],\n            [\"Alternate Exterior Angles\", 34],\n            [\"Same-Side Interior Angles\", 33],\n            [\"Reflection\", 32],\n            [\"Rotation\", 31],\n            [\"Translation\", 30],\n            [\"Dilation\", 30],\n            [\"Congruent Figures\", 30],\n            [\"Similar Figures\", 30],\n            [\"Scalene Triangle\", 30],\n            [\"Isosceles Triangle\", 30],\n            [\"Equilateral Triangle\", 30],\n            [\"Acute Angle\", 30],\n            [\"Right Angle\", 30],\n            [\"Obtuse Angle\", 30],\n            [\"Straight Angle\", 30],\n            [\"Reflex Angle\", 30]\n        ];\n\n        // Ensure the canvas is properly sized\n        const wordCloudElement = document.getElementById(\"word-cloud\");\n        wordCloudElement.style.width = \"100%\";\n        wordCloudElement.style.height = \"600px\";\n\n        // Generate the word cloud\n        WordCloud(wordCloudElement, {\n            list: geometryConcepts,\n            gridSize: Math.round(16 * wordCloudElement.offsetWidth / 1024),\n            weightFactor: function (size) {\n                return size * 0.3;\n            },\n            fontFamily: \"Arial, Helvetica\",\n            color: function () {\n                return '#' + Math.floor(Math.random() * 16777215).toString(16);\n            },\n            rotateRatio: 0.5,\n            rotationSteps: 2,\n            backgroundColor: \"#ffffff\"\n        });\n\n        // Debugging: Check if the library loaded correctly\n        console.log(\"WordCloud initialized:\", typeof WordCloud !== \"undefined\");\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"prompts/06-word-cloud/#changing-the-layout","title":"Changing the Layout","text":""},{"location":"prompts/06-word-cloud/#prompt","title":"Prompt","text":"<pre><code>Can you give me some tips on how to change the layout?\n</code></pre>"},{"location":"prompts/06-word-cloud/#response","title":"Response","text":"<p>Certainly! Changing the layout of your word cloud can greatly enhance its visual appeal and make it better fit your needs or preferences. Here are some suggestions on how you can modify various aspects of the layout:</p>"},{"location":"prompts/06-word-cloud/#1-adjust-the-shape-of-the-word-cloud","title":"1. Adjust the Shape of the Word Cloud","text":"<p>By default, the word cloud fills the available rectangular space. You can change the shape to a circle, heart, star, or any custom shape using a mask image.</p> <p>Using a Predefined Shape:</p> <pre><code>WordCloud(wordCloudElement, {\n    // ... other options ...\n    shape: 'circle', // Options include 'circle', 'cardioid', 'diamond', 'square', 'triangle-forward', etc.\n});\n</code></pre> <p>Using a Custom Mask Image:</p> <ol> <li> <p>Add a Mask Image to Your HTML:</p> <pre><code>html\nCopy code\n\n`&lt;img id=\"mask-image\" src=\"path-to-your-mask-image.png\" style=\"display: none;\"&gt;\n`\n</code></pre> </li> <li> <p>Modify the WordCloud Options:</p> <pre><code>javascript\nCopy code\n\n`WordCloud(wordCloudElement, {\n    // ... other options ...\n    maskImage: document.getElementById('mask-image'),\n});\n`\n</code></pre> </li> </ol> <p>Note: The mask image should be a transparent PNG where the non-transparent areas define the shape.</p>"},{"location":"prompts/06-word-cloud/#2-change-the-font-and-styling","title":"2. Change the Font and Styling","text":"<p>Change Font Family and Weight:</p> <pre><code>fontFamily: 'Arial, sans-serif',\nfontWeight: 'bold', // Options: 'normal', 'bold', 'bolder', 'lighter', or numeric value (100-900)\n</code></pre> <p>Use a Custom Font from Google Fonts:</p> <ol> <li> <p>Include the Font in Your HTML <code>&lt;head&gt;</code>:</p> <pre><code>html\nCopy code\n\n`&lt;link href=\"https://fonts.googleapis.com/css?family=Roboto\" rel=\"stylesheet\"&gt;\n`\n</code></pre> </li> <li> <p>Specify It in the WordCloud Options:</p> <pre><code>javascript\nCopy code\n\n`fontFamily: 'Roboto, sans-serif',\n`\n</code></pre> </li> </ol>"},{"location":"prompts/06-word-cloud/#3-customize-colors","title":"3. Customize Colors","text":"<p>Use a Fixed Color Palette:</p> <pre><code>const colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231'];\ncolor: function (word, weight) {\n    return colors[Math.floor(Math.random() * colors.length)];\n},\n</code></pre> <p>Color Based on Word Frequency (Weight):</p> <pre><code>color: function (word, weight) {\n    return weight &gt; 50 ? '#ff0000' : '#0000ff'; // Red for high weights, blue for lower\n},\n</code></pre> <p>Random Colors:</p> <pre><code>color: function () {\n    return 'rgb(' + Math.floor(Math.random() * 255) + ',' +\n                     Math.floor(Math.random() * 255) + ',' +\n                     Math.floor(Math.random() * 255) + ')';\n},\n</code></pre>"},{"location":"prompts/06-word-cloud/#4-adjust-word-orientation","title":"4. Adjust Word Orientation","text":"<p>Set Rotation Angles:</p> <pre><code>rotateRatio: 0.5, // 0 to 1, the probability the word will be rotated\nrotationSteps: 2, // Number of different rotation angles between minRotation and maxRotation\nminRotation: -Math.PI / 4,\nmaxRotation: Math.PI / 4,\n</code></pre> <p>Fix Words to Horizontal or Vertical Only:</p> <pre><code>rotateRatio: 0.5,\nrotationSteps: 2,\nminRotation: 0,\nmaxRotation: Math.PI / 2,\n</code></pre>"},{"location":"prompts/06-word-cloud/#5-modify-the-grid-size-and-spacing","title":"5. Modify the Grid Size and Spacing","text":"<p>Adjust Grid Size:</p> <p>Smaller grid sizes allow more precise placement but may increase rendering time.</p> <pre><code>gridSize: 12, // Default is 8\n</code></pre> <p>Adjust Ellipticity (Shape Stretching):</p> <pre><code>ellipticity: 0.8, // 0.1 (very tall) to 2 (very wide)\n</code></pre>"},{"location":"prompts/06-word-cloud/#6-set-the-background-color","title":"6. Set the Background Color","text":"<pre><code>backgroundColor: '#f0f0f0', // Light gray background\n</code></pre>"},{"location":"prompts/06-word-cloud/#7-implement-interactive-features","title":"7. Implement Interactive Features","text":"<p>Add Tooltips on Hover:</p> <ol> <li> <p>Add a Tooltip Element to Your HTML:</p> <pre><code>html\nCopy code\n\n`&lt;div id=\"tooltip\" style=\"position: absolute; display: none; background: #333; color: #fff; padding: 5px; border-radius: 3px; pointer-events: none;\"&gt;&lt;/div&gt;\n`\n</code></pre> </li> <li> <p>Update the WordCloud Options:</p> <pre><code>javascript\nCopy code\n\n`hover: function (item, dimension, event) {\n    if (item) {\n        tooltip.style.left = event.pageX + 10 + 'px';\n        tooltip.style.top = event.pageY + 10 + 'px';\n        tooltip.style.display = 'block';\n        tooltip.textContent = `${item[0]} (${item[1]})`;\n    } else {\n        tooltip.style.display = 'none';\n    }\n},\n`\n</code></pre> </li> </ol>"},{"location":"prompts/06-word-cloud/#8-limit-the-number-of-words-displayed","title":"8. Limit the Number of Words Displayed","text":"<p>If you want to focus on the most important concepts:</p> <pre><code>const topConcepts = geometryConcepts.slice(0, 30); // Adjust the number as needed\nWordCloud(wordCloudElement, {\n    list: topConcepts,\n    // ... other options ...\n});\n</code></pre>"},{"location":"prompts/06-word-cloud/#9-adjust-the-weight-factor","title":"9. Adjust the Weight Factor","text":"<p>Fine-tune how word weights affect their sizes.</p> <pre><code>weightFactor: function (size) {\n    return size * 2; // Increase the multiplier to make words larger\n},\n</code></pre>"},{"location":"prompts/06-word-cloud/#10-change-the-canvas-size","title":"10. Change the Canvas Size","text":"<p>Adjust the size of the container div to change the overall size of the word cloud.</p> <pre><code>html\nCopy code\n\n`&lt;div id=\"word-cloud\" style=\"width: 1000px; height: 500px;\"&gt;&lt;/div&gt;\n</code></pre>"},{"location":"prompts/06-word-cloud/#example-implementation-with-changes","title":"Example Implementation with Changes","text":"<p>Here is a revised version of your HTML file incorporating some of these suggestions:</p> <pre><code>html\nCopy code\n\n`&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Geometry Word Cloud&lt;/title&gt;\n    &lt;style&gt;\n        #word-cloud {\n            width: 1000px;\n            height: 500px;\n            margin: 0 auto;\n            position: relative;\n            background-color: #f0f0f0;\n        }\n        #tooltip {\n            position: absolute;\n            display: none;\n            background: rgba(0, 0, 0, 0.7);\n            color: #fff;\n            padding: 5px 10px;\n            border-radius: 4px;\n            pointer-events: none;\n            font-size: 14px;\n            z-index: 1000;\n        }\n    &lt;/style&gt;\n\n    &lt;link href=\"https://fonts.googleapis.com/css?family=Montserrat:400,700\" rel=\"stylesheet\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1 style=\"text-align: center;\"&gt;Geometry Word Cloud&lt;/h1&gt;\n    &lt;div id=\"word-cloud\"&gt;&lt;/div&gt;\n    &lt;div id=\"tooltip\"&gt;&lt;/div&gt;\n\n\n    &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/wordcloud2.js/1.1.0/wordcloud2.min.js\"&gt;&lt;/script&gt;\n\n\n    &lt;script&gt;\n        window.onload = function() {\n            const geometryConcepts = [\n                [\"Triangle\", 70],\n                [\"Circle\", 68],\n                [\"Angle\", 67],\n                [\"Line\", 65],\n                [\"Quadrilateral\", 63],\n                // ... rest of your data ...\n            ];\n\n            const wordCloudElement = document.getElementById(\"word-cloud\");\n            const tooltip = document.getElementById('tooltip');\n\n            WordCloud(wordCloudElement, {\n                list: geometryConcepts,\n                gridSize: 12,\n                weightFactor: function (size) {\n                    return (size / 70) * 80; // Adjust the 80 to scale overall word sizes\n                },\n                fontFamily: 'Montserrat, sans-serif',\n                fontWeight: 'bold',\n                color: function (word, weight) {\n                    // Gradient from blue to red based on weight\n                    const maxWeight = 70;\n                    const minWeight = 30;\n                    const weightRatio = (weight - minWeight) / (maxWeight - minWeight);\n                    const r = Math.floor(255 * weightRatio);\n                    const b = Math.floor(255 * (1 - weightRatio));\n                    return `rgb(${r},0,${b})`;\n                },\n                rotateRatio: 0.5,\n                rotationSteps: 3,\n                minRotation: -Math.PI / 6,\n                maxRotation: Math.PI / 6,\n                backgroundColor: \"#f0f0f0\",\n                shuffle: true,\n                minSize: 14,\n                ellipticity: 0.8,\n                hover: function(item, dimension, event) {\n                    if (item) {\n                        tooltip.style.left = event.pageX + 10 + 'px';\n                        tooltip.style.top = event.pageY + 10 + 'px';\n                        tooltip.style.display = 'block';\n                        tooltip.textContent = `${item[0]} (${item[1]})`;\n                    } else {\n                        tooltip.style.display = 'none';\n                    }\n                },\n            });\n        };\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"prompts/06-word-cloud/#explanation-of-modifications","title":"Explanation of Modifications","text":"<ul> <li>Container Size: Increased the <code>#word-cloud</code> div to 1000px by 500px for a wider layout.</li> <li>Custom Font: Used 'Montserrat' from Google Fonts for a modern look.</li> <li>Font Weight: Set to 'bold' to make words stand out.</li> <li>Color Function: Implemented a gradient from blue to red based on the weight of each word.</li> <li>Rotation Angles: Limited rotation to -30\u00b0 to +30\u00b0 for better readability.</li> <li>Grid Size and Weight Factor: Adjusted to fine-tune word placement and size.</li> <li>Ellipticity: Set to 0.8 to make the word cloud slightly wider than tall.</li> <li>Minimum Word Size: Increased to 14 pixels to ensure all words are legible.</li> <li>Tooltips: Enhanced tooltips to show when hovering over words, displaying the concept and its weight.</li> </ul>"},{"location":"prompts/06-word-cloud/#additional-tips","title":"Additional Tips","text":"<ul> <li>Experiment with Different Fonts: Try different fonts to match the style you're aiming for. Google Fonts offers a wide variety of options.</li> <li>Use High-Quality Mask Images: If you decide to use a mask image for a custom shape, ensure it's a high-contrast, black-and-white image for best results.</li> <li>Optimize for Performance: Be cautious with grid sizes and the number of words. Smaller grid sizes and more words increase rendering time.</li> <li>Test Across Browsers: Check how the word cloud displays in different browsers and devices to ensure compatibility.</li> <li>Consider Accessibility: Ensure that the color contrasts are sufficient for readability, especially for users with visual impairments.</li> </ul>"},{"location":"prompts/06-word-cloud/#resources","title":"Resources","text":"<ul> <li>WordCloud2.js Documentation: GitHub Repository</li> <li>Color Gradient Generators: Tools like ColorBrewer can help you choose color schemes.</li> <li>Google Fonts: fonts.google.com for a variety of font choices.</li> </ul>"},{"location":"prompts/07-equations/","title":"Geometry Equations","text":""},{"location":"prompts/07-equations/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Create a list of the 25 most commonly used\nequations in a high school geometry course.\n\nFor each equation, return the following:\n\n1. The name of the equation in markdown level 4.\n2. Within the body, return the equation in LaTeX format\n3. Surround the equation with dollar signs\n4. For each variable in the equation, add a \"where:\" that defines each variable\n5. Put blank lines around the list of variables\n6. Wrap the variables names in dollar signs\n\nExamples:\n\n#### Slope and Intercept\n$y = m * x + b$\n\nwhere:\n\n- $y$ is the vertical axis\n- $x$ is the horizontal axis\n- $m$ is the slope\n- $b$ is the intercept\n\n#### Area of a Circle\n$A = 2\\pi r^2$\nwhere:\n\n- $A$ is the area of the circle\n- $r$ is the radius\n</code></pre>"},{"location":"prompts/07-equations/#sample-response-from-chatgpt","title":"Sample Response from ChatGPT","text":"<p>Note</p> <p>We had to do extensive filtering on this because the Markdown Paste does not work correctly on LaTeX equations in VSCode.  See the src/latex-cleanup code for details on the Python filter we had ChatGPT create to clean up the formatting.</p>"},{"location":"prompts/07-equations/#1-area-of-a-triangle","title":"1. Area of a Triangle","text":"<p>\\(A = \\frac{1}{2} b h\\)</p> <p>where:</p> <ul> <li>A is the area of the triangle</li> <li>b is the base of the triangle</li> <li>h is the height of the triangle</li> </ul>"},{"location":"prompts/07-equations/#2-pythagorean-theorem","title":"2. Pythagorean Theorem","text":"<p>\\(c^2 = a^2 + b^2\\)</p> <p>where:</p> <ul> <li>\\(c\\) is the hypotenuse of the right triangle</li> <li>\\(a\\) and \\(b\\) are the other two sides</li> </ul>"},{"location":"prompts/07-equations/#3-area-of-a-circle","title":"3. Area of a Circle","text":"<p>\\(A = 2\\pi r^2\\)</p> <p>where:</p> <ul> <li>\\(A\\) is the area of the circle</li> <li>\\(r\\) is the radius</li> </ul>"},{"location":"prompts/07-equations/#4-circumference-of-a-circle","title":"4. Circumference of a Circle","text":"<p>\\(C = 2 \\pi r\\)</p> <p>where:</p> <ul> <li>\\(C\\) is the circumference</li> <li>\\(r\\) is the radius</li> </ul>"},{"location":"prompts/07-equations/#5-distance-formula","title":"5. Distance Formula","text":"<p>\\(d = \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2}\\)</p> <p>where:</p> <ul> <li>\\(d\\) is the distance between two points</li> <li>\\((x_1,y_1)\\) and \\((x_2,y_2)\\) are the coordinates of the two points</li> </ul>"},{"location":"prompts/07-equations/#6-midpoint-formula","title":"6. Midpoint Formula","text":"<p>\\(M = \\left( \\frac{x_1 + x_2}{2}, \\frac{y_1 + y_2}{2} \\right)\\)</p> <p>where:</p> <ul> <li>M is the midpoint of the segment</li> <li>\\((x_1,y_1)\\) and \\((x_2,y_2)\\) are the endpoints</li> </ul>"},{"location":"prompts/07-equations/#7-slope-formula","title":"7. Slope Formula","text":"<p>\\(m = \\frac{y_2 - y_1}{x_2 - x_1}\\)</p> <p>where:</p> <ul> <li>\\(m\\) is the slope</li> <li>\\((x_1,y_1)\\) and \\((x_2,y_2)\\) are the points</li> </ul>"},{"location":"prompts/07-equations/#8-area-of-a-rectangle","title":"8. Area of a Rectangle","text":"<p>\\(A = l \\cdot w\\) where:</p> <ul> <li>\\(A\\) is the area</li> <li>\\(l\\) is the length</li> <li>\\(w\\) is the width</li> </ul>"},{"location":"prompts/07-equations/#9-perimeter-of-a-rectangle","title":"9. Perimeter of a Rectangle","text":"<p>\\(P = 2l + 2w\\)</p> <p>where:</p> <ul> <li>\\(P\\) is the perimeter</li> <li>\\(l\\) is the length</li> <li>\\(w\\) is the width</li> </ul>"},{"location":"prompts/07-equations/#10-area-of-a-parallelogram","title":"10. Area of a Parallelogram","text":"<p>\\(A = b h\\)</p> <p>where:</p> <ul> <li>\\(A\\) is the area</li> <li>\\(b\\) is the base</li> <li>\\(h\\) is the height</li> </ul>"},{"location":"prompts/07-equations/#11-area-of-a-trapezoid","title":"11. Area of a Trapezoid","text":"<p>\\(A = \\frac{1}{2} (b_1 + b_2) h\\)</p> <p>where:</p> <ul> <li>\\(A\\) is the area</li> <li>\\(b_1\\)\u200b and \\(b_2\\) are the bases</li> <li>\\(h\\) is the height</li> </ul>"},{"location":"prompts/07-equations/#12-volume-of-a-rectangular-prism","title":"12. Volume of a Rectangular Prism","text":"<p>\\(V = l \\cdot w \\cdot h\\)</p> <p>where:</p> <ul> <li>\\(V\\) is the volume</li> <li>\\(l\\) is the length</li> <li>\\(w\\) is the width</li> <li>\\(h\\) is the height</li> </ul>"},{"location":"prompts/07-equations/#13-surface-area-of-a-rectangular-prism","title":"13. Surface Area of a Rectangular Prism","text":"<p>\\(SA = 2lw + 2lh + 2wh\\) where:</p> <ul> <li>\\(SA\\) is the surface area</li> <li>\\(l\\) is the length</li> <li>\\(w\\) is the width</li> <li>\\(h\\) is the height</li> </ul>"},{"location":"prompts/07-equations/#14-volume-of-a-sphere","title":"14. Volume of a Sphere","text":"<p>\\(V = \\frac{4}{3} \\pi r^3\\)</p> <p>where:</p> <ul> <li>\\(V\\) is the volume</li> <li>\\(r\\) is the radius</li> </ul>"},{"location":"prompts/07-equations/#15-surface-area-of-a-sphere","title":"15. Surface Area of a Sphere","text":"<p>\\(SA = 4 \\pi r^2\\) where:</p> <ul> <li>\\(SA\\) is the surface area</li> <li>\\(r\\) is the radius</li> </ul>"},{"location":"prompts/07-equations/#16-volume-of-a-cylinder","title":"16. Volume of a Cylinder","text":"<p>\\(V = \\pi r^2 h\\)</p> <p>where:</p> <ul> <li>\\(V\\) is the volume</li> <li>\\(r\\) is the radius</li> <li>\\(h\\) is the height</li> </ul>"},{"location":"prompts/07-equations/#17-surface-area-of-a-cylinder","title":"17. Surface Area of a Cylinder","text":"<p>\\(SA = 2\\pi r^2 + 2\\pi r h\\)</p> <p>where:</p> <ul> <li>\\(SA\\) is the surface area</li> <li>\\(r\\) is the radius</li> <li>\\(h\\) is the height</li> </ul>"},{"location":"prompts/07-equations/#18-volume-of-a-cone","title":"18. Volume of a Cone","text":"<p>\\(V = \\frac{1}{3} \\pi r^2 h\\)</p> <p>where:</p> <ul> <li>\\(V\\) is the volume</li> <li>\\(r\\) is the radius</li> <li>\\(h\\) is the height</li> </ul>"},{"location":"prompts/07-equations/#19-surface-area-of-a-cone","title":"19. Surface Area of a Cone","text":"<p>\\(SA = \\pi r (r + l)\\)</p> <p>where:</p> <ul> <li>\\(SA\\) is the surface area</li> <li>\\(r\\) is the radius</li> <li>\\(l\\) is the slant height</li> </ul>"},{"location":"prompts/07-equations/#20-area-of-a-regular-polygon","title":"20. Area of a Regular Polygon","text":"<p>\\(A = \\frac{1}{2} a P\\)</p> <p>where:</p> <ul> <li>\\(A\\) is the area</li> <li>\\(a\\) is the apothem</li> <li>\\(P\\) is the perimeter</li> </ul>"},{"location":"prompts/07-equations/#21-sum-of-interior-angles-of-a-polygon","title":"21. Sum of Interior Angles of a Polygon","text":"<p>\\(S = 180(n - 2)\\)</p> <p>where:</p> <ul> <li>\\(S\\) is the sum of the interior angles</li> <li>\\(n\\) is the number of sides</li> </ul>"},{"location":"prompts/07-equations/#22-measure-of-each-interior-angle-of-a-regular-polygon","title":"22. Measure of Each Interior Angle of a Regular Polygon","text":"<p>\\(Angle = \\frac{180(n - 2)}{n}\\)</p> <p>where:</p> <ul> <li>\\(Angle\\) is the measure of each interior angle</li> <li>\\(n\\) is the number of sides</li> </ul>"},{"location":"prompts/07-equations/#23-law-of-sines","title":"23. Law of Sines","text":"<p>\\(\\frac{a}{\\sin \u2061A} = \\frac{b}{\\sin B} = \\frac{c}{\\sin C}\\)</p> <p>where:</p> <ul> <li>\\(a,b,c\\) are the sides of the triangle</li> <li>\\(A,B,C\\) are the angles opposite those sides</li> </ul>"},{"location":"prompts/07-equations/#24-law-of-cosines","title":"24. Law of Cosines","text":"<p>\\(c^2 = a^2 + b^2 - 2ab\\cos C\\)</p> <p>where:</p> <ul> <li>\\(c\\) is the side opposite angle C</li> <li>\\(a\\) and b are the other sides</li> <li>\\(C\\) is the included angle</li> </ul>"},{"location":"prompts/07-equations/#25-equation-of-a-circle","title":"25. Equation of a Circle","text":"<p>\\((x-h)2+(y-k)2 = r^2\\)</p> <p>where:</p> <ul> <li>\\((h,k)\\) is the center of the circle</li> <li>\\(r\\) is the radius</li> </ul>"},{"location":"prompts/08-microsims/","title":"MicroSim Ideas","text":""},{"location":"prompts/08-microsims/#sample-prompt-for-generating-ideas-for-microsims","title":"Sample Prompt for Generating Ideas for MicroSims","text":"<pre><code>I am a high-school geometry teacher that has just taken a course in creating simulations and animations using p5.js.  What are some fun interactive animations (MicroSim)I can create to teach my students various topics in geometry.  I want to create a small animation or simulation that has controls such as buttons and sliders.  As the student change the controls they should see some geometry on the screen change.  For each MicroSim please provide:\n\n1. The name of the simulation in a level 4 markdown header.\n2. The topic or subjects that the students would learn.\n3. The list of. controls on the screen and their type (button, slider etc.).\n4. What they might learn from using the simulation.\n5. The level of difficulty (beginner, intermediate, advanced)\n</code></pre>"},{"location":"prompts/08-microsims/#transformation-explorer","title":"Transformation Explorer","text":"<p>Topic or Subjects</p> <ul> <li>Geometric transformations: translation, rotation, scaling, and reflection.</li> <li>Understanding how transformations affect shapes on the coordinate plane.</li> </ul> <p>Controls</p> <ul> <li>Translation Sliders<ul> <li>Horizontal Translation (<code>x</code>): Slider</li> <li>Vertical Translation (<code>y</code>): Slider</li> </ul> </li> <li>Rotation Slider<ul> <li>Rotation Angle (0\u00b0 to 360\u00b0): Slider</li> </ul> </li> <li>Scaling Sliders<ul> <li>Horizontal Scaling Factor: Slider</li> <li>Vertical Scaling Factor: Slider</li> </ul> </li> <li>Reflection Buttons<ul> <li>Reflect over X-axis: Button</li> <li>Reflect over Y-axis: Button</li> </ul> </li> <li>Reset Button<ul> <li>Resets the shape to its original state: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How each type of transformation alters a shape's position, size, and orientation.</li> <li>The effects of combining multiple transformations.</li> <li>The difference between rigid motions (translations, rotations, reflections) and non-rigid transformations (scaling).</li> </ul> <p>Level of Difficulty</p> <ul> <li>Intermediate</li> </ul>"},{"location":"prompts/08-microsims/#unit-circle-explorer","title":"Unit Circle Explorer","text":"<p>Topic or Subjects</p> <ul> <li>Trigonometric functions and their relationship to the unit circle.</li> <li>Understanding sine, cosine, and tangent in terms of circle coordinates.</li> </ul> <p>Controls</p> <ul> <li>Angle Slider<ul> <li>Adjusts the angle from 0\u00b0 to 360\u00b0: Slider</li> </ul> </li> <li>Function Toggle Buttons<ul> <li>Show/Hide Sine Value (opposite side length): Button</li> <li>Show/Hide Cosine Value (adjacent side length): Button</li> <li>Show/Hide Tangent Line (slope): Button</li> </ul> </li> <li>Animation Button<ul> <li>Starts/Stops automatic rotation around the circle: Button</li> </ul> </li> <li>Reset Button<ul> <li>Resets the angle to 0\u00b0: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How the sine and cosine values correspond to the y and x coordinates on the unit circle.</li> <li>The periodic nature of trigonometric functions.</li> <li>Visualizing how tangent relates to the slope of the angle line.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Intermediate</li> </ul>"},{"location":"prompts/08-microsims/#pythagorean-theorem-visualizer","title":"Pythagorean Theorem Visualizer","text":"<p>Topic or Subjects</p> <ul> <li>The Pythagorean theorem and right-angled triangles.</li> <li>Relationship between the lengths of sides in right triangles.</li> </ul> <p>Controls</p> <ul> <li>Side Length Sliders<ul> <li>Adjust Length of Side <code>a</code> (base): Slider</li> <li>Adjust Length of Side <code>b</code> (height): Slider</li> </ul> </li> <li>Show Squares Button<ul> <li>Toggle display of squares on each side: Button</li> </ul> </li> <li>Calculate Hypotenuse Button<ul> <li>Computes and displays the length of the hypotenuse <code>c</code>: Button</li> </ul> </li> <li>Reset Button<ul> <li>Resets side lengths to default values: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How changing side lengths affects the hypotenuse.</li> <li>Visual proof of a2+b2\\=c2a^2 + b^2 = c^2a2+b2\\=c2 through area comparison.</li> <li>Reinforcement of the relationship between side lengths in right triangles.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#triangle-similarity-simulator","title":"Triangle Similarity Simulator","text":"<p>Topic or Subjects</p> <ul> <li>Criteria for triangle similarity (AA, SAS, SSS).</li> <li>Proportional relationships in similar triangles.</li> </ul> <p>Controls</p> <ul> <li>Triangle Size Slider<ul> <li>Scales one triangle while keeping its shape: Slider</li> </ul> </li> <li>Angle Adjustment Slider<ul> <li>Changes a specific angle to explore AA similarity: Slider</li> </ul> </li> <li>Side Length Sliders<ul> <li>Adjust lengths to explore SAS and SSS criteria: Sliders</li> </ul> </li> <li>Overlay Toggle Button<ul> <li>Overlays triangles to compare corresponding parts: Button</li> </ul> </li> <li>Show Ratios Button<ul> <li>Displays ratios of corresponding sides: Button</li> </ul> </li> <li>Reset Button<ul> <li>Restores default triangle configurations: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How altering angles and sides can create similar or non-similar triangles.</li> <li>The importance of proportionality in determining similarity.</li> <li>Application of similarity criteria in problem-solving.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Intermediate</li> </ul>"},{"location":"prompts/08-microsims/#circle-properties-simulator","title":"Circle Properties Simulator","text":"<p>Topic or Subjects</p> <ul> <li>Properties of circles, including central and inscribed angles.</li> <li>Relationships between arcs, chords, and angles.</li> </ul> <p>Controls</p> <ul> <li>Point Movement Slider<ul> <li>Moves a point along the circumference to change angles: Slider</li> </ul> </li> <li>Radius Slider<ul> <li>Adjusts the size of the circle: Slider</li> </ul> </li> <li>Toggle Display Buttons<ul> <li>Show/Hide Central Angle: Button</li> <li>Show/Hide Inscribed Angle: Button</li> <li>Show/Hide Chord: Button</li> </ul> </li> <li>Arc Length Display Button<ul> <li>Calculates and shows arc lengths: Button</li> </ul> </li> <li>Reset Button<ul> <li>Resets the circle to its original state: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How central angles relate to their intercepted arcs.</li> <li>The relationship between inscribed angles and their intercepted arcs.</li> <li>Properties of chords and how they change with circle size and angle positions.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Advanced</li> </ul>"},{"location":"prompts/08-microsims/#prompt","title":"Prompt","text":"<pre><code>How about some very basic MicroSims for beginners?\nFor example, how to find the area of a circle?\nA slider might change the radius and the student\nwould see the area change and see a plot of the\narea as the radius changes.\n</code></pre>"},{"location":"prompts/08-microsims/#response","title":"Response","text":""},{"location":"prompts/08-microsims/#circle-area-explorer","title":"Circle Area Explorer","text":"<p>Topic or Subjects</p> <ul> <li>Calculating the area of a circle.</li> <li>Understanding the relationship between radius and area.</li> </ul> <p>Controls</p> <ul> <li>Radius Slider<ul> <li>Adjusts the radius of the circle: Slider</li> </ul> </li> <li>Area Display<ul> <li>Shows the calculated area as the radius changes: Readout</li> </ul> </li> <li>Plot Toggle Button<ul> <li>Shows/Hides a graph plotting radius versus area: Button</li> </ul> </li> <li>Reset Button<ul> <li>Resets the radius to its default value: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How the area of a circle changes with varying radius.</li> <li>The mathematical relationship A\\=\u03c0r2A = \\pi r^2A\\=\u03c0r2.</li> <li>That the area increases quadratically as the radius increases linearly.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#rectangle-area-visualizer","title":"Rectangle Area Visualizer","text":"<p>Topic or Subjects</p> <ul> <li>Calculating the area of a rectangle.</li> <li>Understanding the relationship between length, width, and area.</li> </ul> <p>Controls</p> <ul> <li>Length Slider<ul> <li>Adjusts the length of the rectangle: Slider</li> </ul> </li> <li>Width Slider<ul> <li>Adjusts the width of the rectangle: Slider</li> </ul> </li> <li>Area Display<ul> <li>Shows the calculated area: Readout</li> </ul> </li> <li>Reset Button<ul> <li>Resets length and width to default values: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How changing length and width affects the area.</li> <li>The formula A\\=length\u00d7widthA = \\text{length} \\times \\text{width}A\\=length\u00d7width.</li> <li>The concept of area as a measure of two-dimensional space.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#triangle-area-explorer","title":"Triangle Area Explorer","text":"<p>Topic or Subjects</p> <ul> <li>Calculating the area of a triangle.</li> <li>Understanding base and height in relation to area.</li> </ul> <p>Controls</p> <ul> <li>Base Slider<ul> <li>Adjusts the base length of the triangle: Slider</li> </ul> </li> <li>Height Slider<ul> <li>Adjusts the height of the triangle: Slider</li> </ul> </li> <li>Area Display<ul> <li>Shows the calculated area: Readout</li> </ul> </li> <li>Reset Button<ul> <li>Resets base and height to default values: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How the area depends on both base and height.</li> <li>The formula A\\=12\u00d7base\u00d7heightA = \\frac{1}{2} \\times \\text{base} \\times \\text{height}A\\=21\u200b\u00d7base\u00d7height.</li> <li>Visual understanding of how area changes with base and height.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#perimeter-vs-area-simulator","title":"Perimeter vs. Area Simulator","text":"<p>Topic or Subjects</p> <ul> <li>Difference between perimeter and area.</li> <li>How changing dimensions affects perimeter and area differently.</li> </ul> <p>Controls</p> <ul> <li>Shape Selector<ul> <li>Choose between square and rectangle: Dropdown Menu</li> </ul> </li> <li>Dimension Sliders<ul> <li>Adjust side lengths (for square) or length and width (for rectangle): Sliders</li> </ul> </li> <li>Perimeter and Area Display<ul> <li>Shows calculated perimeter and area: Readouts</li> </ul> </li> <li>Reset Button<ul> <li>Resets dimensions to default values: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>The formulas for calculating perimeter and area.</li> <li>That increasing dimensions affects area more significantly than perimeter.</li> <li>The concept that perimeter is linear while area is two-dimensional.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#angle-identifier","title":"Angle Identifier","text":"<p>Topic or Subjects</p> <ul> <li>Types of angles: acute, right, obtuse, straight, and reflex angles.</li> <li>Measuring angles in degrees.</li> </ul> <p>Controls</p> <ul> <li>Angle Slider<ul> <li>Adjusts the measure of the angle from 0\u00b0 to 360\u00b0: Slider</li> </ul> </li> <li>Angle Display<ul> <li>Shows the current angle measurement: Readout</li> </ul> </li> <li>Type Display<ul> <li>Identifies the type of angle based on its measurement: Readout</li> </ul> </li> <li>Reset Button<ul> <li>Resets the angle to default value (e.g., 90\u00b0): Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How to classify angles based on their measurements.</li> <li>Visual representation of different types of angles.</li> <li>Familiarity with degree measurements in a circle.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#fraction-circle-explorer","title":"Fraction Circle Explorer","text":"<p>Topic or Subjects</p> <ul> <li>Understanding fractions as parts of a whole.</li> <li>Visualizing fractions using a circle (pie chart).</li> </ul> <p>Controls</p> <ul> <li>Fraction Slider<ul> <li>Adjusts the numerator and denominator to change the fraction: Two Sliders</li> </ul> </li> <li>Circle Display<ul> <li>Shows the circle divided according to the selected fraction: Visual</li> </ul> </li> <li>Equivalent Fraction Button<ul> <li>Displays equivalent fractions for the selected value: Button</li> </ul> </li> <li>Reset Button<ul> <li>Resets numerator and denominator to default values: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How fractions represent parts of a whole.</li> <li>The concept of equivalent fractions.</li> <li>Visual understanding of fraction sizes.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#polygon-shape-builder","title":"Polygon Shape Builder","text":"<p>Topic or Subjects</p> <ul> <li>Identifying basic polygons: triangles, quadrilaterals, pentagons, etc.</li> <li>Understanding properties like the number of sides and angles.</li> </ul> <p>Controls</p> <ul> <li>Sides Slider<ul> <li>Adjusts the number of sides from 3 to 10: Slider</li> </ul> </li> <li>Regular/Irregular Toggle<ul> <li>Switches between regular and irregular polygons: Button</li> </ul> </li> <li>Angle Display<ul> <li>Shows internal angle measurements: Readout</li> </ul> </li> <li>Reset Button<ul> <li>Resets to the default polygon (e.g., triangle): Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>Different types of polygons based on the number of sides.</li> <li>Properties of regular polygons (equal sides and angles).</li> <li>How internal angles change with the number of sides.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#symmetry-explorer","title":"Symmetry Explorer","text":"<p>Topic or Subjects</p> <ul> <li>Understanding lines of symmetry.</li> <li>Identifying symmetrical shapes.</li> </ul> <p>Controls</p> <ul> <li>Shape Selector<ul> <li>Choose from various shapes (circle, square, rectangle, etc.): Dropdown Menu</li> </ul> </li> <li>Symmetry Line Toggle<ul> <li>Show/Hide lines of symmetry: Button</li> </ul> </li> <li>Rotate Shape Slider<ul> <li>Rotates the shape to see symmetry from different angles: Slider</li> </ul> </li> <li>Reset Button<ul> <li>Resets the shape and orientation: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>What symmetry means in geometry.</li> <li>How to identify lines of symmetry in different shapes.</li> <li>The difference between symmetrical and asymmetrical shapes.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#coordinate-plane-navigator","title":"Coordinate Plane Navigator","text":"<p>Topic or Subjects</p> <ul> <li>Plotting points on the Cartesian coordinate system.</li> <li>Understanding the x and y axes.</li> </ul> <p>Controls</p> <ul> <li>X-Coordinate Slider<ul> <li>Adjusts the x-value of a point: Slider</li> </ul> </li> <li>Y-Coordinate Slider<ul> <li>Adjusts the y-value of a point: Slider</li> </ul> </li> <li>Quadrant Display<ul> <li>Indicates which quadrant the point is in: Readout</li> </ul> </li> <li>Reset Button<ul> <li>Resets coordinates to (0,0): Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>How to plot and locate points on the coordinate plane.</li> <li>The significance of positive and negative values on axes.</li> <li>The concept of quadrants in the coordinate system.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul>"},{"location":"prompts/08-microsims/#volume-of-a-rectangular-prism","title":"Volume of a Rectangular Prism","text":"<p>Topic or Subjects</p> <ul> <li>Calculating the volume of a rectangular prism.</li> <li>Understanding length, width, and height in three dimensions.</li> </ul> <p>Controls</p> <ul> <li>Length Slider<ul> <li>Adjusts the length of the prism: Slider</li> </ul> </li> <li>Width Slider<ul> <li>Adjusts the width of the prism: Slider</li> </ul> </li> <li>Height Slider<ul> <li>Adjusts the height of the prism: Slider</li> </ul> </li> <li>Volume Display<ul> <li>Shows the calculated volume: Readout</li> </ul> </li> <li>Reset Button<ul> <li>Resets dimensions to default values: Button</li> </ul> </li> </ul> <p>What They Might Learn</p> <ul> <li>The formula V\\=length\u00d7width\u00d7heightV = \\text{length} \\times \\text{width} \\times \\text{height}V\\=length\u00d7width\u00d7height.</li> <li>How changing each dimension affects the overall volume.</li> <li>Visualization of three-dimensional space.</li> </ul> <p>Level of Difficulty</p> <ul> <li>Beginner</li> </ul> <p>These MicroSims are designed to introduce fundamental geometry concepts through interactive visualizations. They allow students to manipulate variables and observe real-time changes, reinforcing their understanding of basic geometric principles.</p> <p>o1</p>"},{"location":"prompts/09-individual-microsim/","title":"Generative AI Prompt for Generating and Individual MicroSim","text":"<pre><code>Prompt Name: {$MICROSIM_NAME} p5.js\n\nYou are a expert at generating interactive p5.js sketches to help\nstudents learn basic high-school level geometry.\nThis p5.js sketch is part of a geometry course is offered to\nstudents in the 9th through 12th grade.\nStudents have taken basic algebra courses and they\nunderstand equations. \nYou are helping geometry teachers explain concepts in geometry.\n\nThe topic this week is {$TOPIC}.\n\nCreate a p5.js sketch that will {$DESCRIPTION}\nUse a slider placed in the bottom control area to adjust the {$VARIABLE}.\nHave the name of the type of angle change as the angle moves.\n\nUse the following p5.js template: {$MICROSIM_TEMPLATE}\n</code></pre>"},{"location":"prompts/10-chapter-design/","title":"Chapter Design","text":"<pre><code>You are an expert at designing interactive textbooks for high-school students.\nYour assignment is to create a 12-chapter book on high-school geometry.\nFor each chapter, return the name of the chapter in a level 2 markdown header.\nDo not place dividers \nThen return a short paragraph describing that chapter.  List any interactive geometry\nsimulations (MicroSims) in that chapter that can be run using p5.js in your browser.\n</code></pre>"},{"location":"prompts/10-chapter-design/#response","title":"Response","text":""},{"location":"prompts/10-chapter-design/#reasoning-process","title":"Reasoning Process","text":"<p>ChatGPT Thought for 31 Seconds</p>"},{"location":"prompts/10-chapter-design/#crafting-a-structured-guide","title":"Crafting a structured guide","text":"<p>I'm mapping out a 12-chapter high-school geometry textbook, each featuring a chapter title, concise paragraph, and interactive p5.js simulations.</p>"},{"location":"prompts/10-chapter-design/#breaking-down-geometry","title":"Breaking down geometry","text":"<p>I'm compiling a list of high-school geometry topics, each with a chapter title, description, and interactive MicroSims using p5.js, covering areas like points, lines, angles, triangles, quadrilaterals, circles, area, perimeter, surface area, volume, similarity, and transformations.</p>"},{"location":"prompts/10-chapter-design/#unraveling-geometry","title":"Unraveling geometry","text":"<p>I'm envisioning simulations to explore geometry: plotting points on a coordinate plane, forming angles, and constructing geometric proofs. Each activity enriches understanding of geometric concepts.</p>"},{"location":"prompts/10-chapter-design/#analyzing-relationships","title":"Analyzing relationships","text":"<p>I'm examining angle relationships formed by lines, focusing on parallel lines with transversals and perpendicular lines. This approach uncovers intriguing angle interactions.</p>"},{"location":"prompts/10-chapter-design/#investigating-congruence","title":"Investigating congruence","text":"<p>I'm diving into triangle congruence, using criteria like SSS, SAS, ASA, AAS, and HL. MicroSims help construct and adjust triangles to verify congruence.</p>"},{"location":"prompts/10-chapter-design/#mapping-triangle-properties","title":"Mapping triangle properties","text":"<p>I'm pulling together the study of medians, altitudes, angle bisectors, and special segments. Exploring triangle centers and their geometric significance to uncover underlying patterns and relationships.</p>"},{"location":"prompts/10-chapter-design/#analyzing-polygon-traits","title":"Analyzing polygon traits","text":"<p>I'm working through classifying polygons by sides and angles while understanding their interior angle sums. Interactive tools aid visualization.</p>"},{"location":"prompts/10-chapter-design/#grasping-triangle-similarity","title":"Grasping triangle similarity","text":"<p>I'm mapping out similar triangles through proportional reasoning and transformations. Interactive simulations highlight the concept of similarity effectively.</p>"},{"location":"prompts/10-chapter-design/#understanding-trigonometric-relationships","title":"Understanding trigonometric relationships","text":"<p>I'm exploring right triangle properties and trigonometric ratios.  Interactive tools showcase sine, cosine, and tangent changes with angle adjustments.</p>"},{"location":"prompts/10-chapter-design/#digging-into-circle-properties","title":"Digging into circle properties","text":"<p>Researching circles involves arcs, chords, tangents, and sector areas.  Interactive simulations reveal these properties engagingly and clearly.</p>"},{"location":"prompts/10-chapter-design/#engaging-with-transformations","title":"Engaging with transformations","text":"<p>I'm exploring geometric transformations such as translations, rotations, and reflections.  Observing how these changes affect shapes on the coordinate plane reveals the dynamic interplay of spatial relationships.</p>"},{"location":"prompts/10-chapter-design/#content-response","title":"Content Response.","text":""},{"location":"prompts/10-chapter-design/#chapter-1-introduction-to-geometry","title":"Chapter 1: Introduction to Geometry","text":"<p>This chapter introduces the fundamental elements of geometry, including points, lines, planes, and angles.  Students will learn basic definitions and postulates that form the foundation for all geometric concepts.</p> <p>MicroSims:</p> <ul> <li>Point-Line-Plane Explorer: Interactively plot points, lines, and planes to see how they relate.</li> <li>Angle Creator: Adjust rays to form different angles and measure them dynamically.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-2-reasoning-and-proof","title":"Chapter 2: Reasoning and Proof","text":"<p>Dive into the principles of logical reasoning, including inductive and deductive reasoning. Learn how to construct formal geometric proofs using definitions, postulates, and theorems.</p> <p>MicroSims:</p> <ul> <li>Logic Puzzle Solver: Practice reasoning skills with interactive puzzles.</li> <li>Proof Builder: Step through the process of creating geometric proofs.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-3-parallel-and-perpendicular-lines","title":"Chapter 3: Parallel and Perpendicular Lines","text":"<p>Explore the properties of parallel and perpendicular lines and the angles formed when they are intersected by a transversal. Understand corresponding, alternate interior, and alternate exterior angles.</p> <p>MicroSims:</p> <ul> <li>Parallel Lines with Transversal: Manipulate lines to observe angle relationships.</li> <li>Perpendicular Line Constructor: Create perpendicular lines and examine right angles.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-4-congruent-triangles","title":"Chapter 4: Congruent Triangles","text":"<p>Learn the criteria for triangle congruence, such as SSS, SAS, ASA, AAS, and HL. Apply these criteria to prove triangles are congruent in various geometric scenarios.</p> <p>MicroSims:</p> <ul> <li>Triangle Congruence Tester: Adjust side lengths and angles to test for congruence.</li> <li>SSS and SAS Simulator: Visualize how different congruence postulates work.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-5-properties-of-triangles","title":"Chapter 5: Properties of Triangles","text":"<p>Investigate special segments in triangles, including medians, altitudes, and angle bisectors. Discover points of concurrency like the centroid, orthocenter, circumcenter, and incenter.</p> <p>MicroSims:</p> <ul> <li>Triangle Centers Explorer: Locate and explore different centers within a triangle.</li> <li>Median and Altitude Interactive: Visualize how medians and altitudes intersect.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-6-quadrilaterals-and-polygons","title":"Chapter 6: Quadrilaterals and Polygons","text":"<p>Examine the properties of various quadrilaterals such as parallelograms,  rectangles, squares, rhombuses, and trapezoids. Extend these concepts to other polygons and understand their angle sums.</p> <p>MicroSims:</p> <ul> <li>Quadrilateral Manipulator: Change side lengths and angles to see how properties vary.</li> <li>Polygon Angle Sum Calculator: Observe how interior angles add up in different polygons.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-7-similarity","title":"Chapter 7: Similarity","text":"<p>Understand the concept of similar figures and the criteria for triangle similarity, including AA, SSS, and SAS. Learn to apply proportions and scale factors in problem-solving.</p> <p>MicroSims:</p> <ul> <li>Similarity Transformer: Apply dilations to shapes to explore similarity.</li> <li>Proportionality Simulator: Visualize and manipulate proportional segments.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-8-right-triangles-and-trigonometry","title":"Chapter 8: Right Triangles and Trigonometry","text":"<p>Introduce the properties of right triangles and the basics of trigonometry. Learn about sine, cosine, and tangent ratios and how to apply them to find missing sides and angles.</p> <p>MicroSims:</p> <ul> <li>Trigonometric Ratio Explorer: Adjust triangle sides to see changes in trig ratios.</li> <li>Right Triangle Solver: Input known values to calculate unknown sides or angles.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-9-circles","title":"Chapter 9: Circles","text":"<p>Study the properties of circles, including chords, tangents, arcs, and sectors. Understand theorems related to angles and segments within and around circles.</p> <p>MicroSims:</p> <ul> <li>Circle Anatomy Interactive: Explore different parts of a circle by moving points.</li> <li>Arc Length and Sector Area Calculator: See how changes in radius and angle affect measurements.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-10-area-and-perimeter","title":"Chapter 10: Area and Perimeter","text":"<p>Learn how to calculate the area and perimeter of various two-dimensional figures, including composite shapes. Apply formulas to solve real-world and mathematical problems.</p> <p>MicroSims:</p> <ul> <li>Shape Area Calculator: Modify dimensions to see real-time area and perimeter calculations.</li> <li>Composite Figure Builder: Combine shapes to understand how total area is determined.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-11-surface-area-and-volume","title":"Chapter 11: Surface Area and Volume","text":"<p>Expand your knowledge to three-dimensional figures by calculating surface area and volume. Explore prisms, cylinders, pyramids, cones, and spheres.</p> <p>MicroSims:</p> <ul> <li>3D Solid Visualizer: Rotate and manipulate solids to understand their properties.</li> <li>Surface Area and Volume Simulator: Change dimensions to see effects on measurements.</li> </ul>"},{"location":"prompts/10-chapter-design/#chapter-12-transformations","title":"Chapter 12: Transformations","text":"<p>Investigate geometric transformations, including translations, reflections, rotations, and dilations. Understand how transformations affect figures on the coordinate plane.</p> <p>MicroSims:</p> <ul> <li>Transformation Playground: Apply different transformations to shapes and observe outcomes.</li> <li>Coordinate Mapping Tool: See how points move under various transformations.</li> </ul>"},{"location":"prompts/10-chapter-design/#references","title":"References","text":"<p>ChatGPT Transcript</p>"},{"location":"prompts/11-sims-gallery/","title":"MicroSims Gallery","text":"<p>```linenums=\"0\" Please create a new Python program that generates a gallery page for a website.  I have a set of directory at the following relative path:</p> <p>ls ../../docs/sims/*</p> <p>Each directory has a name, which we will call DIRNAME. For each directory do the following:</p> <p>Create a </p>"},{"location":"sims/","title":"MicroSims for Geometry","text":""},{"location":"sims/#concept-graph-viewer","title":"Concept Graph Viewer","text":""},{"location":"sims/angle-explorer/","title":"Angle Explorer MicroSim","text":"<p>Run the MicroSim Template Edit this MicroSim</p>"},{"location":"sims/angle-explorer/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Prompt Name: Angle Explorer in p5.js \n\nYou are a expert at generating p5.js sketches to help students learn \nbasic high-school level geometry. This p5.js sketch is part of a \ngeometry course is offered to students in the 9th through 12th grade. \nStudents have taken basic algebra courses and they understand equations. \nYou are helping geometry teachers explain concepts in geometry. \nThe topic this week is angles. Create a p5.js sketch that will\nadjust rays to form different angles and measure them dynamically.\nUse a slider placed in the bottom control area to adjust the angle.\nHave the name of the type of angle change as the angle moves.\n</code></pre> <p>MicroSim Template for 2D Geometry</p>"},{"location":"sims/angle-explorer/#sample-response","title":"Sample Response","text":""},{"location":"sims/angle-explorer/#workflow","title":"Workflow","text":"<p>Navigating class insights</p> <p>Crafting a lesson plan</p> <p>I'm tasked with developing a lesson plan for high school students using a MicroSim. It should encompass objectives, key concepts, activities, and questions, ensuring factual accuracy and no disallowed content.</p> <p>Integrating education</p> <p>I'm combining elements for a lesson: objectives, key concepts, and interactive activities using MicroSim to engage students in understanding angles effectively.</p> <p>Understanding angle variations</p> <p>I aim to help students identify different angles, measure them, and use the Angle Explorer MicroSim to rotate rays and form various angles. This approach fosters an intuitive grasp of angle transformations.</p> <p>Engaging students</p> <p>I'm pulling together an introduction to angles, spotlighting their types and real-world instances. Then, I'll introduce the Angle Explorer MicroSim, guiding students to manipulate angles and identify acute and right angles.</p> <p>Setting angles</p> <p>I'm setting and exploring different angles, noting the transition from acute to obtuse at 90\u00b0. Observing how rays align and identifying real-life examples.</p> <p>Navigating class insights</p> <p>I'm pulling together the key findings from the independent practice to spark a class discussion. This will encourage students to share intriguing angles and real-world examples they've discovered.</p>"},{"location":"sims/angle-explorer/#reflecting-and-reinforcing-concepts","title":"Reflecting and reinforcing concepts","text":"<p>Taking a moment to summarize key angles concepts and connecting angle measure to type.</p>"},{"location":"sims/circle-area-explorer/","title":"Circle Area Explorer","text":"<p>Run the Circle Area Explorer MicroSim</p> <p>Run the Circle Area Explorer MicroSim V1</p> <p>Edit theCircle Area Explorer MicroSim with the p5.js Editor</p>"},{"location":"sims/circle-area-explorer/#features","title":"Features:","text":"<ol> <li> <p>Interactive Radius Slider:</p> </li> <li> <p>Adjusts the circle radius dynamically.</p> </li> <li> <p>Updates the area calculation and display.</p> </li> <li> <p>Toggle Graph Button:</p> </li> </ol> <p>Toggles the visibility of the graph plotting the relationship between radius and area.4.  Graph:</p> <p>Illustrates how the area of the circle grows quadratically with increasing radius.</p>"},{"location":"sims/circle-area-explorer/#learning-outcomes","title":"Learning Outcomes:","text":"<ul> <li>Students visualize the quadratic relationship \\(A = \\pi r^2\\)</li> <li>Observe that area increases faster than the radius due to the quadratic term.</li> </ul>"},{"location":"sims/comp-and-sup-angles/","title":"Complementary and Supplementary Angles","text":"<p>Run the Complementary and Supplementary MicroSim</p> <p>Edit the MicroSim on the p5.js editor website</p> <p>Run the Complementary and Supplementary MicroSim V1</p>"},{"location":"sims/comp-and-sup-angles/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Prompt Name: Complementary and Supplementary Angles in p5.js \n\nYou are a expert at generating p5.js sketches to help students learn \nbasic high-school level geometry. This p5.js sketch is part of a \ngeometry course is offered to students in the 9th through 12th grade. \nStudents have taken basic algebra courses and they understand equations. \nYou are helping geometry teachers explain concepts in geometry. \nThe topic this week is Complementary and Supplementary Angles.\n\nCreate a p5.js sketch that will\nadjust the angle of a ray to and illustrate the idea of\nComplementary and Supplementary Angles.\n\nUse a slider placed in the bottom control area to adjust the angle.\nHave the name of the angles change as the angle moves.\n\nUse the following p5.js template\n</code></pre> <p>MicroSim Template for 2D Geometry</p>"},{"location":"sims/comp-and-sup-angles/#response","title":"Response","text":"<pre><code>// Complementary and Supplementary Angles\n\n// MicroSim Template for 2D geometry with region drawing parameters\n// Use for an instructor standing in front of a \"smart white board\" with controls on the bottom\n// Author: Dan McCreary\n// Version geometry-1\n// This template puts a control region below the active drawing region of the canvas\n// the width of the entire canvas\n// No HTML should be placed above the drawing region so the MicroSim can be placed on a page with an iFrame\nlet canvasWidth = 663;\n// The top drawing region above the interactive controls\nlet drawWidth = canvasWidth;\nlet drawHeight = 300;\n// the control region is where we place sliders and buttons\n// height of the region that contains all the controls\nlet controlHeight = 40;\n// The total height of both the drawing region height + the control region height\nlet canvasHeight = drawHeight + controlHeight;\n// margin around the active plotting region\nlet margin = 25;\n// the left margin area needs to hold the width of the text label and value\nlet sliderLeftMargin = 100;\n// larger text so students in the back of the room can read the labels\nlet defaultTextSize = 16;\n\nlet mySlider;\n\nfunction setup() {\n    const canvas = createCanvas(canvasWidth, canvasHeight);\n    var mainElement = document.querySelector('main');\n    canvas.parent(mainElement);\n    textSize(defaultTextSize);\n\n    // create a new slider at the bottom of the canvas in the control region\n    mySlider = createSlider(0, 180, 45, 1);\n    // position the slider below the drawing region\n    mySlider.position(sliderLeftMargin, drawHeight + 17);\n    // make the slider width fill the area to the right of the label and value of the slider\n    mySlider.size(canvasWidth - sliderLeftMargin - 15);\n}\n\nfunction draw() {\n    // make the background drawing region a very light blue\n    fill('aliceblue');\n    // draw a thin light gray outline for the region borders\n    stroke('silver');\n    rect(0, 0, canvasWidth, drawHeight);\n    // make the background of the controls area white\n    fill('white');\n    rect(0, drawHeight, canvasWidth, controlHeight);\n    noStroke();\n\n    // get the updated slider value\n    let mySliderValue = mySlider.value();\n\n    // Define center and ray length\n    let cx = canvasWidth / 2;\n    let cy = drawHeight - 50;\n    let rayLength = 180;\n\n    // Compute angle in radians\n    let theta = radians(mySliderValue);\n\n    // Compute end point of moving ray\n    let x_end = cx + rayLength * cos(theta);\n    let y_end = cy - rayLength * sin(theta);\n\n    // Draw fixed ray along x-axis\n    stroke('black');\n    strokeWeight(2);\n    line(cx, cy, cx + rayLength, cy);\n\n    // Draw moving ray\n    line(cx, cy, x_end, y_end);\n    fill('orange');\n    circle(x_end, y_end, 7);\n\n    // Draw primary angle arc in red from 0 to theta\n    noFill();\n    stroke('red');\n    strokeWeight(4);\n    // 0 to theta\n    arc(cx, cy, 100, 100, -theta, 0, OPEN);\n\n    // Draw complementary angle arc in green if applicable\n    //.Go from theta to 90\n    if (mySliderValue &lt; 90) {\n        stroke('green');\n        arc(cx, cy, 190, 190, -PI/2, -theta, OPEN);\n    }\n\n    // Draw supplementary angle arc in purple if applicable\n    // draw from theta to 180\n    if (mySliderValue &lt; 180) {\n        stroke('purple');\n        arc(cx, cy, 300, 300, -PI, -theta, OPEN);\n    }\n\n    // Reset stroke weight\n    strokeWeight(1);\n\n    // Display angle value\n    fill('black');\n    noStroke();\n    textSize(24);\n    // Place the text near the ray endpoint circle but opposite the center\n    let offset = 20; // Adjust the distance of the text from the circle\n    let textX = x_end + cos(-theta) * offset; // Offset along the angle\n    let textY = y_end + sin(-theta) * offset *1.1 - 7; // Offset along the angle\n    text(mySliderValue + \"\u00b0\", textX, textY);\n    // Determine angle name\n    let angleName = \"\";\n    if (mySliderValue == 0) {\n        angleName = \"Zero Angle\";\n    } else if (mySliderValue &lt; 90) {\n        angleName = \"Acute Angle\";\n    } else if (mySliderValue == 90) {\n        angleName = \"Right Angle\";\n    } else if (mySliderValue &lt; 180) {\n        angleName = \"Obtuse Angle\";\n    } else if (mySliderValue == 180) {\n        angleName = \"Straight Angle\";\n    }\n\n    // Display angle name in upper right\n    textSize(16);\n    text(angleName, drawWidth - 130, 50);\n\n    stroke('green');\n    // Compute and display complement\n    let complementText = \"\";\n    if (mySliderValue &lt; 90) {\n        let complement = 90 - mySliderValue;\n        complementText = \"Complement: \" + complement + \"\u00b0\";\n    } else if (mySliderValue == 90) {\n        complementText = \"Complement: None\";\n    } else {\n        complementText = \"Complement: N/A\";\n    }\n    textSize(20);\n    text(complementText, 20, 30);\n\n    stroke('purple');\n    // Compute and display supplement\n    let supplementText = \"\";\n    if (mySliderValue &lt; 180) {\n        let supplement = 180 - mySliderValue;\n        supplementText = \"Supplement: \" + supplement + \"\u00b0\";\n    } else if (mySliderValue == 180) {\n        supplementText = \"Supplement: None\";\n    } else {\n        supplementText = \"Supplement: N/A\";\n    }\n    text(supplementText, 20, 60);\n\n    // Draw label and value\n    noStroke();\n    textSize(16);\n    fill('black');\n    text(\"Angle: \" + mySliderValue + \"\u00b0\", 10, drawHeight + 25);\n}\n</code></pre>"},{"location":"sims/comp-and-sup-angles/#description","title":"Description","text":"<p>This code implements a MicroSim for teaching complementary and supplementary angles using p5.js. The MicroSim is designed to run in a browser and provides interactive functionality, including a slider that allows the user to change the angle dynamically. Key features include:</p>"},{"location":"sims/comp-and-sup-angles/#1-canvas-layout","title":"1. Canvas Layout:","text":"<p>Divided into two main regions:</p> <ul> <li>Drawing Region: Displays the angle visualization.</li> <li>Control Region: Contains interactive controls (slider) for adjusting the angle.</li> </ul> <p>Properly structured for embedding in an iFrame without external HTML interference.</p>"},{"location":"sims/comp-and-sup-angles/#2-visualization","title":"2. Visualization:","text":"<p>A static ray representing the x-axis.</p> <p>A dynamic ray that rotates according to the slider value.</p> <p>The dynamic ray's angle is visualized with arcs:</p> <ul> <li>Primary angle (red).</li> <li>Complementary angle (green).</li> <li>Supplementary angle (purple).</li> </ul> <p>The end of the dynamic ray is marked with an orange circle.</p>"},{"location":"sims/comp-and-sup-angles/#3-feedback-and-display","title":"3. Feedback and Display:","text":"<ul> <li>Angle values and names (e.g., Acute, Right) displayed dynamically based on the slider value.</li> <li>Complements and supplements are computed and displayed, with appropriate handling for special cases (e.g., \"None\" for angles 90\u00b0 and 180\u00b0).</li> </ul>"},{"location":"sims/comp-and-sup-angles/#4-user-interaction","title":"4. User Interaction:","text":"<p>A slider to select angles from 0\u00b0 to 180\u00b0.</p> <p>Text and arcs update in real-time as the slider is adjusted.</p>"},{"location":"sims/comp-and-sup-angles/#5-customization","title":"5. Customization:","text":"<p>Parameters like canvas size, text size, and margins are defined at the top for easy configuration.</p>"},{"location":"sims/cords/","title":"Cords","text":"<p>Run the Cords MicroSim</p>"},{"location":"sims/cords/#cords-v2","title":"Cords V2","text":"<p>Enable the user to also drag the points at the end of the cord.</p> <p>Run the Cords V2</p>"},{"location":"sims/cords/#references","title":"References","text":"<p>Random Cords By User Zoyroh</p>"},{"location":"sims/graph-viewer/","title":"Concept Graph Viewer","text":"<p>View Graph</p>"},{"location":"sims/pythagorean-theorem/","title":"Pythagorean Theorem MicroSim","text":"<p>Run the Pythagorean Theorem MicroSim Edit the MicroSim</p> <p>Version 1 of Pythagorean Theorem MicroSim</p> <p>This MicroSim demonstrates the Pythagorean Theorem, one of the most famous theorems in geometry. Using the ChatGPT o1-preview and a good MicroSim template it was easy for us to generate this demo.</p>"},{"location":"sims/pythagorean-theorem/#description-of-the-pythagorean-theorem-microsim","title":"Description of the Pythagorean Theorem MicroSim","text":"<ul> <li>Side Length Sliders<ul> <li>Adjust Length of Side <code>a</code> (base): Slider</li> <li>Adjust Length of Side <code>b</code> (height): Slider</li> </ul> </li> <li>Show Squares Button<ul> <li>Toggle display of squares on each side: Button</li> </ul> </li> <li>Calculate Hypotenuse Button<ul> <li>Computes and displays the length of the hypotenuse <code>c</code>: Button</li> </ul> </li> <li> <p>Reset Button</p> <ul> <li>Resets side lengths to default values: Button</li> </ul> </li> </ul> <pre><code>Create a p5.js sketch of showing a visualization of the Pythagorean theorem.\n\n1. Draw a right triangle in the center of the sketch canvas.\n2. Create two sliders that adjust the length of side a (base) and height (b)\n3. Create a toggle button that shows squares made of up sides a, b and c\n4. Show the length of a, b and the length of the hypotenuse C\n5. Add a reset button that resets the lengths to the default button.\n6. Use the MicroSIm template below for the layout.\n7. Place the equation c\u00b2 = a\u00b2 + b\u00b2 as a title in the upper right\n8. Display the lengths of a, b and c and their squares in the upper left\n</code></pre> <p>Here is the MicroSim template I gave it:</p> <p>MicroSim Template File</p>"},{"location":"sims/pythagorean-theorem/#prompt","title":"Prompt","text":""},{"location":"sims/pythagorean-theorem/#sample-code","title":"Sample Code","text":"<pre><code>// MicroSim Template with region drawing parameters\n// the width of the entire canvas\nlet canvasWidth = 400;\n// The top drawing region above the interactive controls\nlet drawHeight = 400;\n// control region height\nlet controlHeight = 50;\n// The total height of both the drawing region height + the control region height\nlet canvasHeight = drawHeight + controlHeight;\n// margin around the active plotting region\nlet margin = 25;\n// larger text so students in the back of the room can read the labels\nlet defaultTextSize = 16;\n\n// variables for sliders\nlet aSlider, bSlider;\n// variables for toggle button\nlet toggleButton;\nlet showSquares = false;\n// variable for reset button\nlet resetButton;\n// default values for a and b\nlet defaultA = 100;\nlet defaultB = 100;\n// variables for the lengths of sides\nlet aLength, bLength, cLength;\n\nfunction setup() {\n    const canvas = createCanvas(canvasWidth, canvasHeight);\n    // canvas.parent('canvas-container');\n    var mainElement = document.querySelector('main');\n    canvas.parent(mainElement);\n    textSize(defaultTextSize);\n\n    // create sliders\n    // aSlider adjusts length of side a (base)\n    // bSlider adjusts length of side b (height)\n    let sliderLeftMargin = margin;\n\n    aSlider = createSlider(50, 130, defaultA, 1); // min, max, default, step\n    aSlider.position(sliderLeftMargin, drawHeight + 15);\n    aSlider.size((canvasWidth - 2*margin)/2 - 10);\n\n    bSlider = createSlider(50, 132, defaultB, 1);\n    bSlider.position(sliderLeftMargin + (canvasWidth - 2*margin)/2 + 20, drawHeight + 15);\n    bSlider.size((canvasWidth - 2*margin)/2 - 10);\n\n    // create toggle button\n    toggleButton = createButton('Show Squares');\n    toggleButton.position(margin, drawHeight + 40);\n    toggleButton.mousePressed(toggleSquares);\n\n    // create reset button\n    resetButton = createButton('Reset');\n    resetButton.position(canvasWidth - margin - 50, drawHeight + 40);\n    resetButton.mousePressed(resetValues);\n}\n\nfunction draw() {\n    // make the background drawing region a very light blue\n    background('white'); // reset background\n    fill('aliceblue');\n    noStroke();\n    rect(0, 0, canvasWidth, drawHeight);\n    // make the background of the controls area white\n    fill('white')\n    rect(0, drawHeight, canvasWidth, controlHeight);\n\n    // Show the equation c\u00b2 = a\u00b2 + b\u00b2 at the top center\n    // note that \u00b2 is unicode with a value of : U+00B2\n    fill('black');\n    noStroke();\n    textSize(24); // Increase text size for the title\n    textAlign(CENTER); // Center the text\n    text(\"c\u00b2 = a\u00b2 + b\u00b2\", canvasWidth / 2 + 70, 30);\n\n    // get the updated slider values\n    aLength = aSlider.value();\n    bLength = bSlider.value();\n    cLength = sqrt(aLength*aLength + bLength*bLength);\n\n    // draw the right triangle in the center of the sketch canvas\n    // Right angle at (x0, y0)\n    let x0 = canvasWidth/2 - aLength/2;\n    let y0 = drawHeight/2 + bLength/2;\n\n    let x1 = x0 + aLength;\n    let y1 = y0;\n\n    let x2 = x0;\n    let y2 = y0 - bLength;\n\n    stroke(0);\n    fill('lightgray');\n    triangle(x0, y0, x1, y1, x2, y2);\n\n    // If showSquares is true, draw squares on sides a, b, and c\n    if (showSquares) {\n        // Draw square on side a\n        fill('lightgreen');\n        quad(\n            x0, y0,\n            x1, y1,\n            x1, y1 + aLength,\n            x0, y0 + aLength\n        );\n\n        // Draw square on side b\n        fill('lightblue');\n        quad(\n            x0, y0,\n            x2, y2,\n            x2 - bLength, y2,\n            x0 - bLength, y0\n        );\n\n        // Draw square on side c\n        fill('pink');\n        // Calculate the vector along the hypotenuse\n        let dx = x2 - x1;\n        let dy = y2 - y1;\n        // Calculate the unit vector perpendicular to the hypotenuse\n        let length = sqrt(dx*dx + dy*dy);\n        let ux = -dy / length;\n        let uy = dx / length;\n        // Scale it to the length of the hypotenuse\n        let px = ux * cLength;\n        let py = uy * cLength;\n        // Coordinates of the other two points of the square\n        let x3 = x2 + px;\n        let y3 = y2 + py;\n        let x4 = x1 + px;\n        let y4 = y1 + py;\n        // Draw the square on side c\n        quad(\n            x1, y1,\n            x2, y2,\n            x3, y3,\n            x4, y4\n        );\n    }\n\n    // Show the lengths of a, b, and c\n    fill(0);\n    noStroke();\n    textSize(defaultTextSize);\n    text(\"a: \" + nf(aLength, 0, 0), margin, 20);\n    text(\"b: \" + nf(bLength, 0, 0), margin, 40);\n    text(\"c: \" + nf(cLength, 0, 0), margin, 60);\n    text(\"a\u00b2: \" + nf(aLength*aLength, 0, 0), margin+100, 20);\n    text(\"b\u00b2: \" + nf(bLength*bLength, 0, 0), margin+100, 40);\n    text(\"c\u00b2: \" + nf(cLength*cLength, 0, 0), margin+100, 60);\n\n    // Label sides on the triangle\n    // Label side a\n    let midA_x = (x0 + x1)/2;\n    let midA_y = y0 + 15;\n    text(\"a\", midA_x, midA_y);\n\n    // Label side b\n    let midB_x = x0 - 15;\n    let midB_y = (y0 + y2)/2;\n    text(\"b\", midB_x, midB_y);\n\n    // Label side c\n    let midC_x = (x1 + x2)/2 + 10;\n    let midC_y = (y1 + y2)/2;\n    text(\"c\", midC_x, midC_y);\n\n    // Draw labels for sliders\n    fill(0);\n    noStroke();\n    text(\"Side a:\", aSlider.x * 1 + aSlider.width / 2 - 30, aSlider.y - 5);\n    text(\"Side b:\", bSlider.x * 1 + bSlider.width / 2 - 30, bSlider.y - 5);\n}\n\nfunction toggleSquares() {\n    showSquares = !showSquares;\n    if (showSquares) {\n        toggleButton.html('Hide Squares');\n    } else {\n        toggleButton.html('Show Squares');\n    }\n}\n\nfunction resetValues() {\n    aSlider.value(defaultA);\n    bSlider.value(defaultB);\n}\n</code></pre>"},{"location":"sims/pythagorean-theorem/#references","title":"References","text":"<p>My full ChatGPT Diaglog to Generate The MicroSim</p>"},{"location":"sims/sine-and-cosine-circle/","title":"Sine and Cosine Circle","text":"<p>Run the Sine and Cosine Circle MicroSim</p> <p>From the p5.js site we have the following example code:</p> <p>Modify this p5.js code to use a slider to change the angle.  Use the template below it for formatting.</p> <pre><code>let circleX = 200;\nlet circleY = 150;\nlet circleRadius = 75;\n\nlet graphX = 50;\nlet graphY = 300;\nlet graphAmplitude = 50;\nlet graphPeriod = 300;\n\nfunction setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES);\n  describe(\n    'Animated demonstration of a point moving around the unit circle, together with the corresponding sine and cosine values moving along their graphs.'\n  );\n}\n\nfunction draw() {\n  background(0);\n\n  // Set angle based on frameCount, and display current value\n\n  let angle = frameCount % 360;\n\n  fill(255);\n  textSize(20);\n  textAlign(LEFT, CENTER);\n  text(`angle: ${angle}`, 25, 25);\n\n  // Draw circle and diameters\n\n  noFill();\n  stroke(128);\n  strokeWeight(3);\n  circle(circleX, circleY, 2 * circleRadius);\n  line(circleX, circleY - circleRadius, circleX, circleY + circleRadius);\n  line(circleX - circleRadius, circleY, circleX + circleRadius, circleY);\n\n  // Draw moving points\n\n  let pointX = circleX + circleRadius * cos(angle);\n  let pointY = circleY - circleRadius * sin(angle);\n\n  line(circleX, circleY, pointX, pointY);\n\n  noStroke();\n\n  fill('white');\n  circle(pointX, pointY, 10);\n\n  fill('orange');\n  circle(pointX, circleY, 10);\n\n  fill('red');\n  circle(circleX, pointY, 10);\n\n  // Draw graph\n\n  stroke('grey');\n  strokeWeight(3);\n  line(graphX, graphY, graphX + 300, graphY);\n  line(graphX, graphY - graphAmplitude, graphX, graphY + graphAmplitude);\n  line(\n    graphX + graphPeriod,\n    graphY - graphAmplitude,\n    graphX + graphPeriod,\n    graphY + graphAmplitude\n  );\n\n  fill('grey');\n  strokeWeight(1);\n  textAlign(CENTER, CENTER);\n  text('0', graphX, graphY + graphAmplitude + 20);\n  text('360', graphX + graphPeriod, graphY + graphAmplitude + 20);\n  text('1', graphX / 2, graphY - graphAmplitude);\n  text('0', graphX / 2, graphY);\n  text('-1', graphX / 2, graphY + graphAmplitude);\n\n  fill('orange');\n  text('cos', graphX + graphPeriod + graphX / 2, graphY - graphAmplitude);\n  fill('red');\n  text('sin', graphX + graphPeriod + graphX / 2, graphY);\n\n  // Draw cosine curve\n\n  noFill();\n  stroke('orange');\n  beginShape();\n  for (let t = 0; t &lt;= 360; t++) {\n    let x = map(t, 0, 360, graphX, graphX + graphPeriod);\n    let y = graphY - graphAmplitude * cos(t);\n    vertex(x, y);\n  }\n  endShape();\n\n  // Draw sine curve\n\n  noFill();\n  stroke('red');\n  beginShape();\n  for (let t = 0; t &lt;= 360; t++) {\n    let x = map(t, 0, 360, graphX, graphX + graphPeriod);\n    let y = graphY - graphAmplitude * sin(t);\n    vertex(x, y);\n  }\n  endShape();\n\n  // Draw moving line\n\n  let lineX = map(angle, 0, 360, graphX, graphX + graphPeriod);\n  stroke('grey');\n  line(lineX, graphY - graphAmplitude, lineX, graphY + graphAmplitude);\n\n  // Draw moving points on graph\n\n  let orangeY = graphY - graphAmplitude * cos(angle);\n  let redY = graphY - graphAmplitude * sin(angle);\n\n  noStroke();\n\n  fill('orange');\n  circle(lineX, orangeY, 10);\n\n  fill('red');\n  circle(lineX, redY, 10);\n}\n</code></pre>"},{"location":"sims/sine-and-cosine-circle/#microsim-template","title":"MicroSim Template","text":"<pre><code>// Sample MicroSim Template for 2D Geometry\n\n// MicroSim Template for 2D geometry with region drawing parameters\n// Use for an instructor standing in front of a \"smart white board\" with conrols on the bottom\n// Author: Dan McCreary\n// Version geometry-1\n// This template puts a control region below the active drawing region of the canvas\n// the width of the entire canvas\n// No HTML should be placed above the drawing region so the MicroSim can be placed on a page with an iFrame\nlet canvasWidth = 600;\n// The top drawing region above the interactive controls\nlet drawWidth = canvasWidth;\nlet drawHeight = 400;\n// the control region os where we place sliders and buttons\n// height of the region that contains all the controls\nlet controlHeight = 40;\n// The total hight of both the drawing region height + the control region height\nlet canvasHeight = drawHeight + controlHeight;\n// margin around the active plotting region\nlet margin = 25;\n// the left margin area needs to hold the width of the text label and value\nlet sliderLeftMargin = 130;\n// larger text so students in the back of the room can read the labels\nlet defaultTextSize = 16;\n\nfunction setup() {\n    const canvas = createCanvas(canvasWidth, canvasHeight);\n    // canvas.parent('canvas-container');\n    var mainElement = document.querySelector('main');\n    canvas.parent(mainElement);\n    textSize(defaultTextSize);\n\n    // create a new slider at th bottom of the canvas in the control region\n    mySlider = createSlider(0, 300, 100, 1);\n    // position the slider below the drawing region\n    mySlider.position(sliderLeftMargin, drawHeight + 20);\n    // make the slider width fill the area to the right of the label and value of the slider\n    mySlider.size(canvasWidth - sliderLeftMargin - 30);\n}\n\nfunction draw() {\n    // make the background drawing region a very light blue\n    fill('aliceblue');\n    // draw a thin light gray outline for the region borders\n    stroke('silver');\n    rect(0, 0, canvasWidth, drawHeight);\n    // make the background of the controls area white\n    fill('white')\n    rect(0, drawHeight, canvasWidth, controlHeight);\n\n    // get the updated slider value\n    mySliderValue = mySlider.value();\n\n    // put any drawing code here\n    // draw a blue circle\n    fill('blue');\n    circle(canvasWidth/2, drawHeight/2, mySliderValue);\n\n    // put your custom code here\n\n    // draw label and value\n    fill('black');\n    text(\"MySlider: \" +  mySliderValue, 10, drawHeight + 25)\n}\n</code></pre>"},{"location":"sims/sine-and-cosine-circle/#references","title":"References","text":"<p>Angles and Motion Sine and Cosine from p5.js examples site.</p>"},{"location":"sims/templates/","title":"MicroSim Templates for a Geometry Course","text":"<p>Our templates allow generative AI systems to start with a working program that has a consistent layout and a consistent look and feel.  Our teachers have a strong preference for putting controls like buttons and sliders at the bottom of the screen with the labels and values to the left of the sliders.</p> <p>We also use a template that allows us to position the animation at any specific part of a web page using a iFrame with other content around the simulation.</p> <p>We also prefer a minimalistic approach that allows a simulation to be placed directly in a web page with a single HTML iframe element where the user just specifies the width and height of the simulation with the page.  By minimalistic, we mean we don't put a lot of HTML outside the canvas drawing area.</p>"},{"location":"sims/templates/#geometry-p5js-template-1","title":"Geometry p5.js Template #1","text":"<p>This template has a drawing region above a control region.  We place buttons and sliders only in the control region.  The width of the canvas is set to be </p>"},{"location":"sims/templates/#microsim-template","title":"MicroSim Template","text":"<p>Run the MicroSim Template Edit this MicroSim</p>"},{"location":"sims/templates/#about-this-microsim","title":"About this MicroSim","text":"<p>This MicroSim teaches us how to specify the drawing of a static filled circle.</p>"},{"location":"sims/templates/#example-iframe","title":"Example iFrame","text":""},{"location":"sims/templates/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Create a single file p5.js sketch.\nDraw a green circle on a 600x400 canvas with a radius of 200.\n</code></pre>"},{"location":"sims/templates/#sample-response","title":"Sample Response","text":"<pre><code>// canvas regions setup\n</code></pre>"},{"location":"sims/triangle-congruence/","title":"Triangle Congruence","text":"<p>Run the Triangle Congruence MicroSim</p>"},{"location":"sims/triangle-congruence/#congruence-triangles-microsim","title":"Congruence Triangles MicroSim","text":""},{"location":"sims/triangle-congruence/#prompt","title":"Prompt","text":"<pre><code>Prompt Name: Triangles Congruence MicroSim in p5.js\n\nYou are a expert at generating interactive p5.js sketches to help\nstudents learn basic high-school level geometry.\nYou create p5.js sketches that are part of a geometry course is offered to\nstudents in the 9th through 12th grade.\nStudents have taken basic algebra courses and they\nunderstand equations. \nYou are helping geometry teachers explain concepts in geometry.\n\nThe topic for this MicroSim is Triangles Congruence.\n\nCreate a p5.js sketch that will illustrates how different triangle congruence postulates work.\nUse SSS and SAS as an example.\n\nPlace a triangle in the center of the canvas.\nAdd sliders to change the parameters (SSS or SAS)\n\nUse the following p5.js guidelines.\n</code></pre> <pre><code>// Sample MicroSim Template for 2D Geometry\n\n// MicroSim Template for 2D geometry with region drawing parameters\n// Use for an instructor standing in front of a \"smart white board\" with conrols on the bottom\n// Author: Dan McCreary\n// Version geometry-1\n// This template puts a control region below the active drawing region of the canvas\n// the width of the entire canvas\n// No HTML should be placed above the drawing region so the MicroSim can be placed on a page with an iFrame\nlet canvasWidth = 600;\n// The top drawing region above the interactive controls\nlet drawWidth = canvasWidth;\nlet drawHeight = 400;\n// the control region os where we place sliders and buttons\n// height of the region that contains all the controls\nlet controlHeight = 40;\n// The total hight of both the drawing region height + the control region height\nlet canvasHeight = drawHeight + controlHeight;\n// margin around the active plotting region\nlet margin = 25;\n// the left margin area needs to hold the width of the text label and value\nlet sliderLeftMargin = 130;\n// larger text so students in the back of the room can read the labels\nlet defaultTextSize = 16;\n\nfunction setup() {\n    const canvas = createCanvas(canvasWidth, canvasHeight);\n    // canvas.parent('canvas-container');\n    var mainElement = document.querySelector('main');\n    canvas.parent(mainElement);\n    textSize(defaultTextSize);\n\n    // create a new slider at th bottom of the canvas in the control region\n    mySlider = createSlider(0, 300, 100, 1);\n    // position the slider below the drawing region\n    mySlider.position(sliderLeftMargin, drawHeight + 20);\n    // make the slider width fill the area to the right of the label and value of the slider\n    mySlider.size(canvasWidth - sliderLeftMargin - 30);\n}\n\nfunction draw() {\n    // make the background drawing region a very light blue\n    fill('aliceblue');\n    // draw a thin light gray outline for the region borders\n    stroke('silver');\n    rect(0, 0, canvasWidth, drawHeight);\n    // make the background of the controls area white\n    fill('white')\n    rect(0, drawHeight, canvasWidth, controlHeight);\n\n    // get the updated slider value\n    mySliderValue = mySlider.value();\n\n    // put any drawing code here\n    // draw a blue circle\n    fill('blue');\n    circle(canvasWidth/2, drawHeight/2, mySliderValue);\n\n    // put your custom code here\n\n    // draw label and value\n    fill('black');\n    text(\"MySlider: \" +  mySliderValue, 10, drawHeight + 25)\n}\n</code></pre>"},{"location":"sims/word-cloud/","title":"Word Cloud for Geometry","text":"<p>Word Cloud MicroSim</p> <p>OK, the link to the library was the problem. Now can you give me some suggestions on how to change the layout?</p> <p>ChatGPT</p> <p>Thought for 34 seconds</p> <p>Certainly! Changing the layout of your word cloud can greatly enhance its visual appeal and make it better fit your needs or preferences. Here are some suggestions on how you can modify various aspects of the layout:</p>"},{"location":"sims/word-cloud/#1-adjust-the-shape-of-the-word-cloud","title":"1. Adjust the Shape of the Word Cloud","text":"<p>By default, the word cloud fills the available rectangular space. You can change the shape to a circle, heart, star, or any custom shape using a mask image.</p> <p>Using a Predefined Shape:</p> <pre><code>WordCloud(wordCloudElement, {\n    // ... other options ...\n    shape: 'circle', // Options include 'circle', 'cardioid', 'diamond', 'square', 'triangle-forward', etc.\n});\n</code></pre> <p>Using a Custom Mask Image:</p> <ol> <li> <p>Add a Mask Image to Your HTML:</p> <pre><code>html\nCopy code\n\n`&lt;img id=\"mask-image\" src=\"path-to-your-mask-image.png\" style=\"display: none;\"&gt;\n`\n</code></pre> </li> <li> <p>Modify the WordCloud Options:</p> <pre><code>javascript\nCopy code\n\n`WordCloud(wordCloudElement, {\n    // ... other options ...\n    maskImage: document.getElementById('mask-image'),\n});\n`\n</code></pre> </li> </ol> <p>Note: The mask image should be a transparent PNG where the non-transparent areas define the shape.</p>"},{"location":"sims/word-cloud/#2-change-the-font-and-styling","title":"2. Change the Font and Styling","text":"<p>Change Font Family and Weight:</p> <pre><code>fontFamily: 'Arial, sans-serif',\nfontWeight: 'bold', // Options: 'normal', 'bold', 'bolder', 'lighter', or numeric value (100-900)\n</code></pre> <p>Use a Custom Font from Google Fonts:</p> <ol> <li> <p>Include the Font in Your HTML <code>&lt;head&gt;</code>:</p> <pre><code>html\nCopy code\n\n`&lt;link href=\"https://fonts.googleapis.com/css?family=Roboto\" rel=\"stylesheet\"&gt;\n`\n</code></pre> </li> <li> <p>Specify It in the WordCloud Options:</p> <pre><code>javascript\nCopy code\n\n`fontFamily: 'Roboto, sans-serif',\n`\n</code></pre> </li> </ol>"},{"location":"sims/word-cloud/#3-customize-colors","title":"3. Customize Colors","text":"<p>Use a Fixed Color Palette:</p> <pre><code>const colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231'];\ncolor: function (word, weight) {\n    return colors[Math.floor(Math.random() * colors.length)];\n},\n</code></pre> <p>Color Based on Word Frequency (Weight):</p> <pre><code>color: function (word, weight) {\n    return weight &gt; 50 ? '#ff0000' : '#0000ff'; // Red for high weights, blue for lower\n},\n</code></pre> <p>Random Colors:</p> <pre><code>color: function () {\n    return 'rgb(' + Math.floor(Math.random() * 255) + ',' +\n                     Math.floor(Math.random() * 255) + ',' +\n                     Math.floor(Math.random() * 255) + ')';\n},\n</code></pre>"},{"location":"sims/word-cloud/#4-adjust-word-orientation","title":"4. Adjust Word Orientation","text":"<p>Set Rotation Angles:</p> <pre><code>rotateRatio: 0.5, // 0 to 1, the probability the word will be rotated\nrotationSteps: 2, // Number of different rotation angles between minRotation and maxRotation\nminRotation: -Math.PI / 4,\nmaxRotation: Math.PI / 4,\n</code></pre> <p>Fix Words to Horizontal or Vertical Only:</p> <pre><code>rotateRatio: 0.5,\nrotationSteps: 2,\nminRotation: 0,\nmaxRotation: Math.PI / 2,\n</code></pre>"},{"location":"sims/word-cloud/#5-modify-the-grid-size-and-spacing","title":"5. Modify the Grid Size and Spacing","text":"<p>Adjust Grid Size:</p> <p>Smaller grid sizes allow more precise placement but may increase rendering time.</p> <pre><code>gridSize: 12, // Default is 8\n</code></pre> <p>Adjust Ellipticity (Shape Stretching):</p> <pre><code>ellipticity: 0.8, // 0.1 (very tall) to 2 (very wide)\n</code></pre>"},{"location":"sims/word-cloud/#6-set-the-background-color","title":"6. Set the Background Color","text":"<pre><code>backgroundColor: '#f0f0f0', // Light gray background\n</code></pre>"},{"location":"sims/word-cloud/#7-implement-interactive-features","title":"7. Implement Interactive Features","text":"<p>Add Tooltips on Hover:</p> <ol> <li> <p>Add a Tooltip Element to Your HTML:</p> <pre><code>html\nCopy code\n\n`&lt;div id=\"tooltip\" style=\"position: absolute; display: none; background: #333; color: #fff; padding: 5px; border-radius: 3px; pointer-events: none;\"&gt;&lt;/div&gt;\n`\n</code></pre> </li> <li> <p>Update the WordCloud Options:</p> <pre><code>javascript\nCopy code\n\n`hover: function (item, dimension, event) {\n    if (item) {\n        tooltip.style.left = event.pageX + 10 + 'px';\n        tooltip.style.top = event.pageY + 10 + 'px';\n        tooltip.style.display = 'block';\n        tooltip.textContent = `${item[0]} (${item[1]})`;\n    } else {\n        tooltip.style.display = 'none';\n    }\n},\n`\n</code></pre> </li> </ol>"},{"location":"sims/word-cloud/#8-limit-the-number-of-words-displayed","title":"8. Limit the Number of Words Displayed","text":"<p>If you want to focus on the most important concepts:</p> <pre><code>const topConcepts = geometryConcepts.slice(0, 30); // Adjust the number as needed\nWordCloud(wordCloudElement, {\n    list: topConcepts,\n    // ... other options ...\n});\n</code></pre>"},{"location":"sims/word-cloud/#9-adjust-the-weight-factor","title":"9. Adjust the Weight Factor","text":"<p>Fine-tune how word weights affect their sizes.</p> <pre><code>weightFactor: function (size) {\n    return size * 2; // Increase the multiplier to make words larger\n},\n</code></pre>"},{"location":"sims/word-cloud/#10-change-the-canvas-size","title":"10. Change the Canvas Size","text":"<p>Adjust the size of the container div to change the overall size of the word cloud.</p> <pre><code>&lt;div id=\"word-cloud\" style=\"width: 1000px; height: 500px;\"&gt;&lt;/div&gt;\n</code></pre>"},{"location":"sims/word-cloud/#example-implementation-with-changes","title":"Example Implementation with Changes","text":"<p>Here is a revised version of your HTML file incorporating some of these suggestions:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Geometry Word Cloud&lt;/title&gt;\n    &lt;style&gt;\n        #word-cloud {\n            width: 1000px;\n            height: 500px;\n            margin: 0 auto;\n            position: relative;\n            background-color: #f0f0f0;\n        }\n        #tooltip {\n            position: absolute;\n            display: none;\n            background: rgba(0, 0, 0, 0.7);\n            color: #fff;\n            padding: 5px 10px;\n            border-radius: 4px;\n            pointer-events: none;\n            font-size: 14px;\n            z-index: 1000;\n        }\n    &lt;/style&gt;\n\n    &lt;link href=\"https://fonts.googleapis.com/css?family=Montserrat:400,700\" rel=\"stylesheet\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1 style=\"text-align: center;\"&gt;Geometry Word Cloud&lt;/h1&gt;\n    &lt;div id=\"word-cloud\"&gt;&lt;/div&gt;\n    &lt;div id=\"tooltip\"&gt;&lt;/div&gt;\n\n\n    &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/wordcloud2.js/1.1.0/wordcloud2.min.js\"&gt;&lt;/script&gt;\n\n\n    &lt;script&gt;\n        window.onload = function() {\n            const geometryConcepts = [\n                [\"Triangle\", 70],\n                [\"Circle\", 68],\n                [\"Angle\", 67],\n                [\"Line\", 65],\n                [\"Quadrilateral\", 63],\n                // ... rest of your data ...\n            ];\n\n            const wordCloudElement = document.getElementById(\"word-cloud\");\n            const tooltip = document.getElementById('tooltip');\n\n            WordCloud(wordCloudElement, {\n                list: geometryConcepts,\n                gridSize: 12,\n                weightFactor: function (size) {\n                    return (size / 70) * 80; // Adjust the 80 to scale overall word sizes\n                },\n                fontFamily: 'Montserrat, sans-serif',\n                fontWeight: 'bold',\n                color: function (word, weight) {\n                    // Gradient from blue to red based on weight\n                    const maxWeight = 70;\n                    const minWeight = 30;\n                    const weightRatio = (weight - minWeight) / (maxWeight - minWeight);\n                    const r = Math.floor(255 * weightRatio);\n                    const b = Math.floor(255 * (1 - weightRatio));\n                    return `rgb(${r},0,${b})`;\n                },\n                rotateRatio: 0.5,\n                rotationSteps: 3,\n                minRotation: -Math.PI / 6,\n                maxRotation: Math.PI / 6,\n                backgroundColor: \"#f0f0f0\",\n                shuffle: true,\n                minSize: 14,\n                ellipticity: 0.8,\n                hover: function(item, dimension, event) {\n                    if (item) {\n                        tooltip.style.left = event.pageX + 10 + 'px';\n                        tooltip.style.top = event.pageY + 10 + 'px';\n                        tooltip.style.display = 'block';\n                        tooltip.textContent = `${item[0]} (${item[1]})`;\n                    } else {\n                        tooltip.style.display = 'none';\n                    }\n                },\n            });\n        };\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"sims/word-cloud/#explanation-of-modifications","title":"Explanation of Modifications","text":"<ul> <li>Container Size: Increased the <code>#word-cloud</code> div to 1000px by 500px for a wider layout.</li> <li>Custom Font: Used 'Montserrat' from Google Fonts for a modern look.</li> <li>Font Weight: Set to 'bold' to make words stand out.</li> <li>Color Function: Implemented a gradient from blue to red based on the weight of each word.</li> <li>Rotation Angles: Limited rotation to -30\u00b0 to +30\u00b0 for better readability.</li> <li>Grid Size and Weight Factor: Adjusted to fine-tune word placement and size.</li> <li>Ellipticity: Set to 0.8 to make the word cloud slightly wider than tall.</li> <li>Minimum Word Size: Increased to 14 pixels to ensure all words are legible.</li> <li>Tooltips: Enhanced tooltips to show when hovering over words, displaying the concept and its weight.</li> </ul>"},{"location":"sims/word-cloud/#additional-tips","title":"Additional Tips","text":"<ul> <li>Experiment with Different Fonts: Try different fonts to match the style you're aiming for. Google Fonts offers a wide variety of options.</li> <li>Use High-Quality Mask Images: If you decide to use a mask image for a custom shape, ensure it's a high-contrast, black-and-white image for best results.</li> <li>Optimize for Performance: Be cautious with grid sizes and the number of words. Smaller grid sizes and more words increase rendering time.</li> <li>Test Across Browsers: Check how the word cloud displays in different browsers and devices to ensure compatibility.</li> <li>Consider Accessibility: Ensure that the color contrasts are sufficient for readability, especially for users with visual impairments.</li> </ul>"},{"location":"sims/word-cloud/#resources","title":"Resources","text":"<ul> <li>WordCloud2.js Documentation: GitHub Repository</li> <li>Color Gradient Generators: Tools like ColorBrewer can help you choose color schemes.</li> <li>Google Fonts: fonts.google.com for a variety of font choices.</li> </ul> <p>Feel free to pick and choose from these suggestions based on your preferences. If you have specific layout ideas or need assistance with other customizations, please let me know, and I'll be happy to help further!</p> <p>o1</p>"},{"location":"sims/workflow/","title":"Workflow","text":"<p>Workflow in vis.js</p>"},{"location":"sims/workflow/#prompt","title":"Prompt","text":"<pre><code>I have a workflow diagram with the following steps:\n\n1. Course Description\n2. Concept Enumeration\n3. Concept Dependency\n4. Concept Taxonomy\n5. Concept Graph\n6. Content Generation\n7. Assessment Generation\n\nStep 2 depends on step 1\nStep 3 depends on step 2\nStep 4 depends on step 2\nStep 5 depends on step 3 and 4\nStep 6 depends on step 5\nStep 7 depends on step 6\n\nUse (p5.js, vis.js, mermaid) to create a diagram for this workflow using a left-to-right layout. \nUse a rectangle to render each step.\nUse different colors as a background for each step.\n</code></pre>"},{"location":"sims/workflow/#response-for-visjs","title":"Response for vis.js","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;Workflow Diagram with vis.js&lt;/title&gt;\n  &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js\"&gt;&lt;/script&gt;\n  &lt;style&gt;\n    #mynetwork {\n      width: 100%;\n      height: 600px;\n      border: 1px solid lightgray;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;Workflow Diagram&lt;/h1&gt;\n  &lt;div id=\"mynetwork\"&gt;&lt;/div&gt;\n\n  &lt;script&gt;\n    // Define nodes\n    const nodes = new vis.DataSet([\n      { id: 1, label: \"Course\\nDescription\", shape: \"box\", color: { background: \"#f9c5d1\", border: \"#000\" }, font: { multi: true, bold: true } },\n      { id: 2, label: \"Concept\\nEnumeration\", shape: \"box\", color: { background: \"#fdd686\", border: \"#000\" }, font: { multi: true, bold: true } },\n      { id: 3, label: \"Concept\\nDependency\", shape: \"box\", color: { background: \"#b4d8ff\", border: \"#000\" }, font: { multi: true, bold: true } },\n      { id: 4, label: \"Concept\\nTaxonomy\", shape: \"box\", color: { background: \"#a5dfaa\", border: \"#000\" }, font: { multi: true, bold: true } },\n      { id: 5, label: \"Concept\\nGraph\", shape: \"box\", color: { background: \"#f7a6ff\", border: \"#000\" }, font: { multi: true, bold: true } },\n      { id: 6, label: \"Content\\nGeneration\", shape: \"box\", color: { background: \"#ffd9a0\", border: \"#000\" }, font: { multi: true, bold: true } },\n      { id: 7, label: \"Assessment\\nGeneration\", shape: \"box\", color: { background: \"#d4a5ff\", border: \"#000\" }, font: { multi: true, bold: true } }\n    ]);\n\n    // Define edges\n    const edges = new vis.DataSet([\n      { from: 1, to: 2 },\n      { from: 2, to: 3 },\n      { from: 2, to: 4 },\n      { from: 3, to: 5 },\n      { from: 4, to: 5 },\n      { from: 5, to: 6 },\n      { from: 6, to: 7 }\n    ]);\n\n    // Create a network\n    const container = document.getElementById('mynetwork');\n    const data = { nodes, edges };\n    const options = {\n      layout: {\n        hierarchical: {\n          direction: 'LR', // Left-to-right layout\n          sortMethod: 'directed',\n          nodeSpacing: 150,\n          levelSeparation: 200\n        }\n      },\n      edges: {\n        arrows: {\n          to: { enabled: true }\n        },\n        color: \"black\",\n        width: 3\n      },\n      nodes: {\n        shape: \"box\",\n        margin: 5, // Global margin for text inside nodes\n        widthConstraint: {\n          minimum: 150,  // Set the minimum width (in pixels)\n          maximum: 200   // Set the maximum width (in pixels) for fixed width\n        },\n        heightConstraint: {\n          minimum: 100,  // Set the minimum height (in pixels)\n          maximum: 100   // Set the maximum height (in pixels) for fixed height\n        },\n        font: {\n          size: 24       // Set the font size (in pixels)\n        }\n      },\n      physics: false // Disable animation for fixed layout\n    };\n    const network = new vis.Network(container, data, options);\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"sims/workflow/#references","title":"References","text":"<p>ChatGPT Transcript</p>"}]}