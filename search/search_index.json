{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to our website.</p>"},{"location":"about/","title":"About the AI Geometry Course","text":"<p>This website contains resources to help teach a high-school level course on geometry.</p>"},{"location":"checklist/","title":"Site Checklist","text":"<ol> <li>Customize the fields in your mkdocs.yml file</li> <li>Configure Google Analytics to use the right site ID</li> <li>Make sure that your .gitignore file includes the <code>site</code> directory</li> <li>Test the build</li> <li>Make sure the Edit button appears</li> <li>Make sure that code color heightening renders correctly</li> <li>run <code>git config advice.addIgnoredFile false</code></li> </ol>"},{"location":"code-highlight-test/","title":"Code Syntax Color Highlight Test","text":""},{"location":"code-highlight-test/#python","title":"Python","text":"<pre><code>hello_string = \"Hello World!\"\nprint(hello_string)\nx = 1\nif x == 1:\n    # indented four spaces\n    print(\"x is 1.\")\n</code></pre>"},{"location":"contact/","title":"Contact","text":"<p>Please contact me on LinkedIn</p> <p>Thanks! - Dan</p>"},{"location":"glossary/","title":"Glossary of Terms","text":""},{"location":"glossary/#iso-definition","title":"ISO Definition","text":"<p>A term definition is considered to be consistent with ISO metadata registry guideline 11179 if it meets the following criteria:</p> <ol> <li>Precise</li> <li>Concise</li> <li>Distinct</li> <li>Non-circular</li> <li>Unencumbered with business rules</li> </ol>"},{"location":"glossary/#term","title":"Term","text":"<p>This is the definition of the term.</p>"},{"location":"how-we-built-this-site/","title":"How We Built This Site","text":"<p>This page describes how we built this website and some of  the rationale behind why we made various design choices.</p>"},{"location":"how-we-built-this-site/#python","title":"Python","text":"<p>MicroSims are about how we use generative AI to create animations and simulations.  The language of AI is Python.  So we wanted to create a site that could be easily understood by Python developers.</p>"},{"location":"how-we-built-this-site/#mkdocs-vs-docusaurus","title":"Mkdocs vs. Docusaurus","text":"<p>There are two main tools used by Python developers to write documentation: Mkdocs and Docusaurus.  Mkdocs is easier to use and more popular than Docusaurus. Docusaurus is also optimized for single-page applications. Mkdocs also has an extensive library of themes and plugins. None of us are experts in JavaScript or React. Based on our ChatGPT Analysis of the Tradeoffs we chose mkdocs for this site management.</p>"},{"location":"how-we-built-this-site/#github-and-github-pages","title":"GitHub and GitHub Pages","text":"<p>GitHub is a logical choice to store our  site source code and documentation.  GitHub also has a Custom GitHub Action that does auto-deployment if any files on the site change. We don't currently have this action enabled, but other teams can use this feature if they don't have the ability to do a local build with mkdocs.</p> <p>GitHub also has Issues,  Projects and releases that we can use to manage our bugs and tasks.</p> <p>The best practice for low-cost websites that have public-only content is GitHub Pages. Mkdocs has a command (<code>mkdocs gh-deploy</code>) that does deployment directly to GitHub Pages.  This was an easy choice to make.</p>"},{"location":"how-we-built-this-site/#github-clone","title":"GitHub Clone","text":"<p>If you would like to clone this repository, here are the commands:</p> <pre><code>mkdir projects\ncd projects\ngit clone https://github.com/dmccreary/microsims\n</code></pre>"},{"location":"how-we-built-this-site/#after-changes","title":"After Changes","text":"<p>After you make local changes you must do the following:</p> <pre><code># add the new files to a a local commit transaction\ngit add FILES\n# Execute the a local commit with a message about what and why you are doing the commit\ngit commit -m \"comment\"\n# Update the central GitHub repository\ngit push\n</code></pre>"},{"location":"how-we-built-this-site/#material-theme","title":"Material Theme","text":"<p>We had several options when picking a mkdocs theme:</p> <ol> <li>Mkdocs default</li> <li>Readthedocs</li> <li>Third-Party Themes See Ranking</li> </ol> <p>The Material Theme had 16K stars.  No other theme had over a few hundred. This was also an easy design decision.</p> <p>One key criterial was the social Open Graph tags so that when our users post a link to a simulation, the image of the simulation is included in the link.  Since Material supported this, we used the Material theme. You can see our ChatGPT Design Decision Analysis if you want to check our decision process.</p>"},{"location":"how-we-built-this-site/#enable-edit-icon","title":"Enable Edit Icon","text":"<p>To enable the Edit icon on all pages, you must add the edit_uri and the content.action.edit under the theme features area.</p> <pre><code>edit_uri: edit/master/docs/\n</code></pre> <pre><code>    theme:\n        features:\n            - content.action.edit\n</code></pre>"},{"location":"how-we-built-this-site/#conda-vs-venv","title":"Conda vs VENV","text":"<p>There are two choices for virtual environments.  We can use the native Python venv or use Conda.  venv is simle but is only designed for pure Python projects.  We imagine that this site could use JavaScript and other langauges in the future, so we picked Conda. There is nothing on this microsite that prevents you from using one or the other.  See the ChatGPT Analysis Here.</p> <p>Here is the conda script that we ran to create a new mkdocs environment that also supports the material social imaging libraries.</p> <pre><code>conda deactivate\nconda create -n mkdocs python=3\nconda activate mkdocs\npip install mkdocs \"mkdocs-material[imaging]\"\n</code></pre>"},{"location":"how-we-built-this-site/#mkdocs-commands","title":"Mkdocs Commands","text":"<p>There are three simple mkdoc commands we use.</p>"},{"location":"how-we-built-this-site/#local-build","title":"Local Build","text":"<pre><code>mkdocs build\n</code></pre> <p>This builds your website in a folder called <code>site</code>.  Use this to test that the mkdocs.yml site is working and does not have any errors.</p>"},{"location":"how-we-built-this-site/#run-a-local-server","title":"Run a Local Server","text":"<pre><code>mkdocs serve\n</code></pre> <p>This runs a server on <code>http://localhost:8000</code>. Use this to test the display formatting locally before you push your code up to the GitHub repo.</p> <pre><code>mkdoc gh-deploy\n</code></pre> <p>This pushes everything up to the GitHub Pages site. Note that it does not commit your code to GitHub.</p>"},{"location":"how-we-built-this-site/#mkdocs-material-social-tags","title":"Mkdocs Material Social Tags","text":"<p>We are using the Material Social tags.  This is a work in progress!</p> <p>Here is what we have learned.</p> <ol> <li>There are extensive image processing libraries that can't be installed with just pip.  You will need to run a tool like brew on the Mac to get the libraries installed.</li> <li>Even after <code>brew</code> installs the libraries, you have to get your environment to find the libraries.  The only way I could get that to work was to set up a local UNIX environment variable.</li> </ol> <p>Here is the brew command that I ran:</p> <pre><code>brew install cairo freetype libffi libjpeg libpng zlib\n</code></pre> <p>I then had to add the following to my ~/.zshrc file:</p> <pre><code>export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib\n</code></pre> <p>Note that I am running on a Mac with Apple silicon.  This means that the image libraries that brew downloads must be specific to the Mac Arm instruction set.</p>"},{"location":"how-we-built-this-site/#image-generation-and-compression","title":"Image Generation and Compression","text":"<p>I have used ChatGPT to create most of my images.  However, they are too large for most websites.  To compress them down I used  https://tinypng.com/ which is a free tool  for compressing png images without significant loss of quality.  The files created with ChatGPT are typically around 1-2 MB.  After  using the TinyPNG site the size is typically around 200-300KB.</p> <ul> <li>Cover images for blog post #4364</li> <li>Discussion on overriding the Social Card Image</li> </ul>"},{"location":"license/","title":"Creative Commons License","text":"<p>All content in this repository is governed by the following license agreement:</p>"},{"location":"license/#license-type","title":"License Type","text":"<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p>"},{"location":"license/#link-to-license-agreement","title":"Link to License Agreement","text":"<p>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en</p>"},{"location":"license/#your-rights","title":"Your Rights","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material</li> </ul> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>"},{"location":"license/#restrictions","title":"Restrictions","text":"<ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial \u2014 You may not use the material for commercial purposes.</li> <li>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> <li>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li> </ul> <p>Notices</p> <p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.</p> <p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.</p> <p>This deed highlights only some of the key features and terms of the actual license. It is not a license and has no legal value. You should carefully review all of the terms and conditions of the actual license before using the licensed material.</p>"},{"location":"references/","title":"Site References","text":"<ol> <li>mkdocs - https://www.mkdocs.org/ - this is our tool for building the website.  It converts Markdown into HTML in the <code>site</code> directory.</li> <li>mkdocs material theme - https://squidfunk.github.io/mkdocs-material/ - this is the theme for our site.  The theme adds the user interface elements that give our site the look and feel.  It also has the features such as social cards.</li> <li>GitHub Pages - https://pages.github.com/ - this is the free tool for hosting public websites created by mkdocs</li> <li>Markdown - https://www.mkdocs.org/user-guide/writing-your-docs/#writing-with-markdown - this is the format we use for text.  It allows us to have headers, lists, tables, links and images without learning HTML.</li> <li>Deploy Mkdocs GitHub Action - https://github.com/marketplace/actions/deploy-mkdocs - this is the tool we use to automatically build our site after edits are checked in with Git.</li> <li>Git Book - https://git-scm.com/book/en/v2 - a useful book on Git.  Just read the first two chapters to learn how to check in new code.</li> <li>Conda - https://conda.io/ - this is a command line tool that keeps our Python libraries organized for each project.</li> <li>VS Code - https://code.visualstudio.com/ - this is the integrated development environment we use to mange the files on our website.</li> <li>Markdown Paste - https://marketplace.visualstudio.com/items?itemName=telesoho.vscode-markdown-paste-image - this is the VS code extension we use to make sure we keep the markdown format generated by ChatGPT.</li> </ol>"},{"location":"prompts/","title":"Sample Prompts","text":"<p>Use these prompts to generate your own knowledge graph for a geometry course.</p>"},{"location":"prompts/#course-description","title":"Course Description","text":""},{"location":"prompts/#concept-enumerations","title":"Concept Enumerations","text":""},{"location":"prompts/#concept-dependencies","title":"Concept Dependencies","text":""},{"location":"prompts/#concept-taxonomy","title":"Concept Taxonomy","text":""},{"location":"prompts/#concept-glossary","title":"Concept Glossary","text":""},{"location":"prompts/01-course-description/","title":"Course Description","text":""},{"location":"prompts/01-course-description/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Create a one-page course description of a high-school\nlevel geometry course as it might appear in a school\ncourse catalog.  Mention that the course is designed\nfor self-paced independent learning and includes a\nlarge number of interactive geometry animations\nand simulations to make the concepts fun and easy to learn. \n</code></pre>"},{"location":"prompts/01-course-description/#sample-chatgpt-response","title":"Sample ChatGPT Response","text":"<p>Title: High School Geometry Course Code: MATH-204 Grade Levels: 9-12 Credits: 1.0</p>"},{"location":"prompts/01-course-description/#course-overview","title":"Course Overview","text":"<p>This high-school level Geometry course is designed for self-paced, independent learners who want to explore the world of shapes, sizes, patterns, and spatial reasoning in a flexible and engaging way. The course provides a comprehensive introduction to the fundamental concepts of geometry, including angles, lines, triangles, polygons, circles, transformations, and 3D objects.</p> <p>With a focus on visual and hands-on learning, students will have access to interactive geometry animations and simulations that make abstract concepts fun, intuitive, and easy to understand. These tools allow students to experiment, explore, and visualize geometric principles dynamically, fostering deeper comprehension and retention.</p>"},{"location":"prompts/01-course-description/#course-features","title":"Course Features","text":"<ul> <li>Self-Paced Learning: Work through the material at your own speed with flexible deadlines.</li> <li>Interactive Simulations: Hands-on tools for exploring concepts like congruence, similarity, and the Pythagorean theorem in an engaging way.</li> <li>Real-World Applications: Discover how geometry is used in architecture, design, robotics, and other fields.</li> <li>Support for Independent Study: Includes guided examples, video tutorials, and interactive problem sets for effective learning.</li> </ul>"},{"location":"prompts/01-course-description/#topics-covered","title":"Topics Covered","text":"<ul> <li>Basics of Geometry: Points, lines, planes, and angles</li> <li>Triangles: Properties, congruence, and similarity</li> <li>Polygons and Quadrilaterals: Classification and properties</li> <li>Circles: Arcs, chords, tangents, and sector areas</li> <li>Coordinate Geometry: Equations of lines and parabolas</li> <li>Transformations: Translations, reflections, rotations, and dilations</li> <li>Solid Geometry: Surface area and volume of 3D shapes</li> </ul>"},{"location":"prompts/01-course-description/#who-should-take-this-course","title":"Who Should Take This Course?","text":"<p>This course is ideal for students who:</p> <ul> <li>Prefer a flexible learning environment.</li> <li>Enjoy visual and hands-on approaches to problem-solving.</li> <li>Are preparing for standardized tests or higher-level math courses.</li> </ul>"},{"location":"prompts/01-course-description/#technology-requirements","title":"Technology Requirements","text":"<p>Students will need access to a computer or tablet with internet connectivity to use the interactive tools and simulations included in the course.</p>"},{"location":"prompts/01-course-description/#assessment","title":"Assessment","text":"<p>Students will complete online quizzes, practice problems, and projects demonstrating their understanding of key concepts. A final exam or cumulative project will be required to earn course credit.</p> <p>Take this exciting journey into the world of Geometry and experience how mathematics can come alive with interactivity and exploration!</p> <p>4o</p>"},{"location":"prompts/02-concept-enumerations/","title":"Concept Enumerations","text":"<p>That is a perfect course description.  Now for our next step, use this course description to create an enumerated  list of the 150 core concepts taught in this course.  Return this list as a numbered list with only a short concept label in each list element.  Use short names and abbreviations when possible.</p>"},{"location":"prompts/02-concept-enumerations/#chatgpt-o1-preview-response","title":"ChatGPT o1-preview response","text":"<ol> <li>Point</li> <li>Line</li> <li>Plane</li> <li>Angle</li> <li>Segment</li> <li>Ray</li> <li>Collinear points</li> <li>Coplanar points</li> <li>Intersection</li> <li>Parallel lines</li> <li>Perpendicular lines</li> <li>Midpoint</li> <li>Bisector</li> <li>Angle bisector</li> <li>Perp bisector</li> <li>Acute angle</li> <li>Right angle</li> <li>Obtuse angle</li> <li>Straight angle</li> <li>Reflex angle</li> <li>Adjacent angles</li> <li>Vertical angles</li> <li>Complementary angles</li> <li>Supplementary angles</li> <li>Linear pair</li> <li>Transversal</li> <li>Corresponding angles</li> <li>Alt int angles</li> <li>Alt ext angles</li> <li>Same-side int angles</li> <li>Same-side ext angles</li> <li>Triangle</li> <li>Scalene triangle</li> <li>Isosceles triangle</li> <li>Equilateral triangle</li> <li>Acute triangle</li> <li>Right triangle</li> <li>Obtuse triangle</li> <li>Triangle sum theorem</li> <li>Ext angle theorem</li> <li>Congruent triangles</li> <li>SSS congruence</li> <li>SAS congruence</li> <li>ASA congruence</li> <li>AAS congruence</li> <li>HL congruence</li> <li>Triangle inequality</li> <li>Similar triangles</li> <li>AA similarity</li> <li>SSS similarity</li> <li>SAS similarity</li> <li>Proportional sides</li> <li>Pythagorean theorem</li> <li>45-45-90 triangle</li> <li>30-60-90 triangle</li> <li>Quadrilateral</li> <li>Parallelogram</li> <li>Rectangle</li> <li>Square</li> <li>Rhombus</li> <li>Trapezoid</li> <li>Isosceles trapezoid</li> <li>Kite</li> <li>Properties of parallelogram</li> <li>Properties of rectangle</li> <li>Properties of rhombus</li> <li>Properties of square</li> <li>Properties of trapezoid</li> <li>Midsegment theorem</li> <li>Polygon interior angles</li> <li>Polygon exterior angles</li> <li>Circle</li> <li>Radius</li> <li>Diameter</li> <li>Chord</li> <li>Tangent</li> <li>Secant</li> <li>Arc</li> <li>Central angle</li> <li>Inscribed angle</li> <li>Arc length</li> <li>Sector area</li> <li>Circumference</li> <li>Equation of circle</li> <li>Distance formula</li> <li>Midpoint formula</li> <li>Slope</li> <li>Slope-intercept form</li> <li>Point-slope form</li> <li>Standard form (line)</li> <li>Parallel lines (coord)</li> <li>Perpendicular lines (coord)</li> <li>Reflection</li> <li>Rotation</li> <li>Translation</li> <li>Dilation</li> <li>Transformation</li> <li>Rigid motion</li> <li>Isometry</li> <li>Symmetry</li> <li>Line symmetry</li> <li>Rotational symmetry</li> <li>Tessellation</li> <li>Glide reflection</li> <li>Composite transformations</li> <li>Preimage</li> <li>Image</li> <li>Vector</li> <li>Directed line segment</li> <li>Component form</li> <li>Solid geometry</li> <li>Prism</li> <li>Cylinder</li> <li>Pyramid</li> <li>Cone</li> <li>Sphere</li> <li>Surface area (SA)</li> <li>Volume (Vol)</li> <li>SA of prism</li> <li>SA of cylinder</li> <li>SA of pyramid</li> <li>SA of cone</li> <li>SA of sphere</li> <li>Vol of prism</li> <li>Vol of cylinder</li> <li>Vol of pyramid</li> <li>Vol of cone</li> <li>Vol of sphere</li> <li>Nets</li> <li>Cross section</li> <li>Euler's formula</li> <li>Congruent figures</li> <li>Similar figures</li> <li>Scale factor</li> <li>Inductive reasoning</li> <li>Deductive reasoning</li> <li>Conditional statement</li> <li>Converse</li> <li>Inverse</li> <li>Contrapositive</li> <li>Biconditional</li> <li>Proof</li> <li>Two-column proof</li> <li>Paragraph proof</li> <li>Flowchart proof</li> <li>Coordinate proof</li> <li>Geometric constructions</li> <li>Compass and straightedge</li> <li>Constructing bisectors</li> <li>Constructing parallels</li> </ol>"},{"location":"prompts/02-concept-enumerations/#workflow","title":"Workflow","text":"<p>Breaking down concepts</p> <p>I'm listing 150 core geometry concepts for a high-school course, using short names and abbreviations. The list is numbered, each concept clearly labeled.</p> <p>Unveiling core concepts</p> <p>I'm detailing fundamental geometry concepts, including points, lines, triangles, polygons, circles, coordinate geometry, transformations, and solid geometry. Each topic will be expanded to identify at least 150 individual concepts.</p> <p>Identifying geometric terms</p> <p>I'm working through various geometric concepts such as angles, triangles, and congruence through the exploration of terms like acute, obtuse, right, and straight angles, as well as different types of triangles and their properties.</p> <p>Examining geometric shapes</p> <p>I'm mapping out the study of various geometric forms, ranging from triangles like 45-45-90 and 30-60-90, to quadrilaterals such as parallelograms, rectangles, and trapezoids, each with their unique properties.</p> <p>Breaking down math insights</p> <p>I'm outlining a comprehensive list of 150 concepts in geometry, including various solids and their properties, geometric constructions, logical reasoning, proof types, and specific triangle properties.</p>"},{"location":"prompts/03-concept-dependency/","title":"Concept Dependency","text":""},{"location":"prompts/03-concept-dependency/#prompt","title":"Prompt","text":"<pre><code>That was very good.\nLet's call the number in front of each concept the ConceptID\nand the string after the number the \"ConceptLabel\".\n\nNow our next step is to create a precise concept learning dependency\ngraph.  For each concept, create a list of other concepts\nthat must be understood before that concept can be mastered.\n\nReturn a CSV file that has the following format:\n\n- Column 1 is the ConceptID from the list above\n- Column 2 is the ConceptLabel from the list above\n- Column 3 is the Dependencies.  It is a pipe-delimited list of the ConceptIDs that this concept depends on.\n\nFoundation concepts don't depend on any other concepts.  Their Dependencies is empty.  Some of  initial introductory concepts are foundation concepts.\nThere must be at least one concept that depends on a foundation concept.\nMake sure each concept is connected to the graph in some way.\n</code></pre>"},{"location":"prompts/03-concept-dependency/#sample-response","title":"Sample Response","text":"<pre><code>ConceptID,ConceptLabel,Dependencies\n1,Point,\n2,Line,\n3,Plane,\n4,Angle,6\n5,Segment,1|2\n6,Ray,1|2\n7,Collinear points,1|2\n8,Coplanar points,1|3\n9,Intersection,2|3\n10,Parallel lines,2\n11,Perpendicular lines,2\n12,Midpoint,5\n13,Bisector,5\n14,Angle bisector,4|13\n15,Perp bisector,5|11\n16,Acute angle,4\n17,Right angle,4\n18,Obtuse angle,4\n19,Straight angle,4\n20,Reflex angle,4\n21,Adjacent angles,4\n22,Vertical angles,4\n23,Complementary angles,4|16|17\n24,Supplementary angles,4|17|18\n25,Linear pair,4|21\n26,Transversal,2|10\n27,Corresponding angles,26|4\n28,Alt int angles,26|4\n29,Alt ext angles,26|4\n30,Same-side int angles,26|4\n31,Same-side ext angles,26|4\n32,Triangle,5\n33,Scalene triangle,32\n34,Isosceles triangle,32\n35,Equilateral triangle,32\n36,Acute triangle,32|16\n37,Right triangle,32|17\n38,Obtuse triangle,32|18\n39,Triangle sum theorem,32\n40,Ext angle theorem,32|39\n41,Congruent triangles,32\n42,SSS congruence,41|5\n43,SAS congruence,41|5|4\n44,ASA congruence,41|4\n45,AAS congruence,41|4\n46,HL congruence,41|37|11\n47,Triangle inequality,32|5\n48,Similar triangles,32\n49,AA similarity,48|4\n50,SSS similarity,48|5\n51,SAS similarity,48|5|4\n52,Proportional sides,5\n53,Pythagorean theorem,37|5\n54,45-45-90 triangle,37|53\n55,30-60-90 triangle,37|53\n56,Quadrilateral,5\n57,Parallelogram,56|10\n58,Rectangle,57|11\n59,Square,58|60\n60,Rhombus,57\n61,Trapezoid,56|10\n62,Isosceles trapezoid,61\n63,Kite,56\n64,Properties of parallelogram,57\n65,Properties of rectangle,58\n66,Properties of rhombus,60\n67,Properties of square,59\n68,Properties of trapezoid,61\n69,Midsegment theorem,32|12\n70,Polygon interior angles,5|56\n71,Polygon exterior angles,5|56\n72,Circle,1\n73,Radius,72\n74,Diameter,72|73\n75,Chord,72\n76,Tangent,72|2\n77,Secant,72|2\n78,Arc,72\n79,Central angle,72|4\n80,Inscribed angle,72|4\n81,Arc length,72|78\n82,Sector area,72|79\n83,Circumference,72\n84,Equation of circle,72|85\n85,Distance formula,1\n86,Midpoint formula,85\n87,Slope,85\n88,Slope-intercept form,87\n89,Point-slope form,87\n90,Standard form (line),87\n91,Parallel lines (coord),87|10\n92,Perpendicular lines (coord),87|11\n93,Reflection,97\n94,Rotation,97\n95,Translation,97\n96,Dilation,97\n97,Transformation,\n98,Rigid motion,97\n99,Isometry,98\n100,Symmetry,97\n101,Line symmetry,100|2\n102,Rotational symmetry,100|94\n103,Tessellation,97|5\n104,Glide reflection,93|95\n105,Composite transformations,97\n106,Preimage,97\n107,Image,97\n108,Vector,95\n109,Directed line segment,5|108\n110,Component form,108\n111,Solid geometry,2|3\n112,Prism,111\n113,Cylinder,111\n114,Pyramid,111\n115,Cone,111\n116,Sphere,111\n117,Surface area (SA),111\n118,Volume (Vol),111\n119,SA of prism,117|112\n120,SA of cylinder,117|113\n121,SA of pyramid,117|114\n122,SA of cone,117|115\n123,SA of sphere,117|116\n124,Vol of prism,118|112\n125,Vol of cylinder,118|113\n126,Vol of pyramid,118|114\n127,Vol of cone,118|115\n128,Vol of sphere,118|116\n129,Nets,111\n130,Cross section,111\n131,Euler's formula,112|114|129\n132,Congruent figures,41\n133,Similar figures,48\n134,Scale factor,133\n135,Inductive reasoning,\n136,Deductive reasoning,\n137,Conditional statement,\n138,Converse,137\n139,Inverse,137\n140,Contrapositive,137\n141,Biconditional,137\n142,Proof,135|136|137\n143,Two-column proof,142\n144,Paragraph proof,142\n145,Flowchart proof,142\n146,Coordinate proof,85|142\n147,Geometric constructions,2|5\n148,Compass and straightedge,147\n149,Constructing bisectors,148\n150,Constructing parallels,148\n</code></pre>"},{"location":"prompts/03-concept-dependency/#workflow","title":"Workflow","text":"<p>Crafting the CSV file</p> <p>I'm preparing to generate a CSV file with three crucial columns: ConceptID, ConceptLabel, and Dependencies. Foundation concepts have empty Dependencies, some initial concepts are foundations, and each concept links to the graph.</p> <p>Mapping dependencies</p> <p>I'm organizing 150 concepts into a CSV file, linking each concept to its ConceptID and listing dependencies using pipe-delimited ConceptIDs.</p> <p>Ensuring logical progression</p> <p>I'm making sure each cell in the CSV file aligns with geometric concepts. Dependencies must progress logically, forming a cohesive and connected graph.</p> <p>Categorizing concepts</p> <p>I'm mapping out the concepts and identifying how they link together. Next, I'll group them under broader topics for clarity and organization.</p> <p>Mapping geometric concepts</p> <p>I'm piecing together geometric terms like interior and exterior angles, triangles, congruence, similarity, polygon properties, and circle terms such as radius, diameter, chord, and tangent.</p> <p>Organizing geometry topics</p> <p>Deciphering foundation concepts</p> <p>I'm identifying foundational geometric concepts like point, line, plane, segment, ray, and collinear points. Understanding angles might require grasping rays first.</p> <p>I'm mapping out foundational concepts and their dependencies. Foundational concepts include Point, Line, and Plane. Segment and Ray might be foundational or dependent.</p> <p>Shaping the structure</p> <p>OK, let me see. I'm working through the CSV rows, pinpointing relationships and nurturing foundational concepts. Progress is steady, making it a rewarding journey.</p> <p>Understanding geometric relationships</p> <p>I'm mapping out how various geometric concepts depend on types of angles and lines. This exploration highlights the connections between angles, bisectors, and directional lines.</p> <p>Mapping connections</p> <p>Identifying dependencies</p> <p>I'm organizing various triangle types and geometric properties by pinpointing key dependencies, such as congruent triangles, segments, and angles, while tracking the progression towards specific geometric conclusions.</p> <p>Analyzing geometric relationships</p> <p>I'm examining various geometric shapes, including rectangles, squares, triangles, and quadrilaterals, and their relationships with parallel and perpendicular lines, focusing on properties and theorems.</p> <p>Mapping relationships</p> <p>I'm gathering info on how concepts like diameter and radius interact within circles, then linking them to elements such as chords, tangents, and secants.</p> <p>Connecting geometric concepts</p> <p>I'm linking the concepts of perpendicular lines, reflection, rotation, translation, dilation, and transformation to their respective formulas and symmetries, creating a cohesive understanding of geometric principles.</p> <p>Mapping concepts</p> <p>I'm piecing together how concepts like component form, solid geometry, and surface area or volume depend on each other and on prior concepts, creating a logical interconnected structure of knowledge.</p> <p>Incorporating foundational and specific concepts, the pyramid and cone volumes intrigue me, as do cross sections and Euler's formula. Properties of congruent and similar figures deepen the exploration of geometric principles.</p> <p>Compiling dependencies</p> <p>I'm working through organizing concepts in a CSV file, detailing each concept's dependencies with ConceptIDs. The goal is to create a structured, informative document for clarity and understanding.</p> <p>Synthesizing geometric terms</p> <p>Piecing together the geometric terms and concepts, I'm focusing on points, lines, planes, angles, and polygons. Each term is linked to corresponding properties and theorems, forming a comprehensive geometric glossary.</p> <p>Revisiting transformations</p> <p>I'm rethinking the role of Transformation as a foundational idea, given that it involves mapping figures to others, which requires prior knowledge.</p>"},{"location":"prompts/04-taxonomy/","title":"Taxonomy","text":""},{"location":"prompts/04-taxonomy/#sample-prompt","title":"Sample Prompt","text":"<pre><code>That was perfect.  Thank you for your excellent results.\nThis is going very well.\n\nNext, I would like you to create a 10-classification taxonomy system to classify each concept.  For example here are some suggestions\n\n1. Foundational Concepts\n2. Terms and Definitions\n3. Types of Polygons and Shapes\n4. Forumlas\n5. Steps in a proof\n6. Application of geometry\n...\n10. Miscellaneous\n\nPlease consider these as a starting point and list a taxonomy and return your suggestions for a full 10-item classification system.\n</code></pre> <p>Certainly! Based on the concepts covered in the course and your suggestions, here is a 10-classification taxonomy system:</p> <ol> <li>Foundational Concepts</li> <li>Lines and Angles</li> <li>Triangles</li> <li>Quadrilaterals and Polygons</li> <li>Circles</li> <li>Coordinate Geometry</li> <li>Transformations and Symmetry</li> <li>Solid Geometry</li> <li>Reasoning and Proof</li> <li>Constructions and Tools</li> </ol> <p>Descriptions:</p> <ol> <li> <p>Foundational Concepts: Basic elements and definitions that form the groundwork of geometry, such as points, lines, planes, and basic postulates.</p> </li> <li> <p>Lines and Angles: Concepts involving the properties and relationships of lines, segments, rays, and various types of angles.</p> </li> <li> <p>Triangles: Study of triangle properties, classifications, congruence, similarity, and key theorems like the Pythagorean theorem.</p> </li> <li> <p>Quadrilaterals and Polygons: Exploration of four-sided figures and multi-sided polygons, including their properties, classifications, and angle sums.</p> </li> <li> <p>Circles: Concepts related to circles, including chords, tangents, arcs, sectors, and circle theorems.</p> </li> <li> <p>Coordinate Geometry: Application of algebraic principles to geometric problems using the coordinate plane, including equations of lines and circles.</p> </li> <li> <p>Transformations and Symmetry: Movements of figures in the plane, such as translations, rotations, reflections, dilations, and concepts of symmetry and tessellations.</p> </li> <li> <p>Solid Geometry: Study of three-dimensional figures, including prisms, cylinders, pyramids, cones, spheres, and calculations of surface area and volume.</p> </li> <li> <p>Reasoning and Proof: Development of logical thinking through inductive and deductive reasoning, understanding conditional statements, and various proof techniques.</p> </li> <li> <p>Constructions and Tools: Geometric constructions using tools like compass and straightedge, including constructing angles, bisectors, and parallel lines.</p> </li> </ol> <p>I hope this classification system aligns well with the course content and your requirements!</p>"},{"location":"prompts/04-taxonomy/#workflow","title":"Workflow","text":"<p>Crafting a taxonomy</p> <p>I\u2019m creating a 10-classification taxonomy system for 150 concepts. Considering user suggestions and adding new ideas to ensure accuracy and policy compliance.</p> <p>Charting the course</p> <p>I\u2019m outlining a 10-classification taxonomy system to categorize concepts, starting with Foundations of Geometry, Lines and Angles, Triangles, and progressing to Three-Dimensional Figures and Constructions. This approach ensures a comprehensive framework.</p> <p>Mapping the classifications</p> <p>I'm drafting a 10-item classification system for geometry topics, including foundational concepts, shapes, formulas, proofs, and construction techniques. This ensures a comprehensive and systematic approach.</p> <p>Organizing geometric topics</p> <p>I\u2019m piecing together a 10-item classification system for geometry, focusing on foundational concepts, lines, angles, triangles, quadrilaterals, circles, coordinate geometry, transformations, solids, and logic.</p> <p>Organizing key themes</p> <p>I\u2019m mapping out a taxonomy for a geometry course, covering foundational concepts, lines and angles, triangles, quadrilaterals, polygons, and circles, with a brief overview of each category.</p>"},{"location":"prompts/04-taxonomy/#adding-the-taxonomyid-to-the-csv-file","title":"Adding the TaxonomyID to the CSV file","text":"<pre><code>Thank you.  That was perfect. Now please generate a new CSV file and add one new column called the TaxonomyID.\n\nThe new format is:\n\n- Column 1 is the ConceptID from the list above\n- Column 2 is the ConceptLabel from the list above\n- Column 3 is the Dependencies.  It is a pipe-delimited list of the ConceptIDs that this concept depends on.\n- Column 4 is the TaxonomyID.  It matches the number in the taxonomy you re\n</code></pre>"},{"location":"prompts/04-taxonomy/#key","title":"Key","text":""},{"location":"prompts/04-taxonomy/#key-prompt","title":"Key Prompt","text":"<pre><code>please create an HTML table that has the key in it.  Use the following format:\n\n&lt;table&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Foundation&lt;/td&gt;\n                &lt;td style=\"background-color: red; color: white;\"&gt;Red&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Lines and Angles&lt;/td&gt;\n                &lt;td style=\"background-color: orange;\"&gt;Orange&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Triangles&lt;/td&gt;\n                &lt;td style=\"background-color: yellow;\"&gt;Yellow&lt;/td&gt;\n            &lt;/tr&gt;\n</code></pre>"},{"location":"prompts/04-taxonomy/#chatgpt-response","title":"ChatGPT Response","text":"<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Foundational Concepts&lt;/td&gt;\n        &lt;td style=\"background-color: red; color: white;\"&gt;Red&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Lines and Angles&lt;/td&gt;\n        &lt;td style=\"background-color: orange; color: black;\"&gt;Orange&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Triangles&lt;/td&gt;\n        &lt;td style=\"background-color: yellow; color: black;\"&gt;Yellow&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Quadrilaterals and Polygons&lt;/td&gt;\n        &lt;td style=\"background-color: green; color: white;\"&gt;Green&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Circles&lt;/td&gt;\n        &lt;td style=\"background-color: blue; color: white;\"&gt;Blue&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Coordinate Geometry&lt;/td&gt;\n        &lt;td style=\"background-color: indigo; color: white;\"&gt;Indigo&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Transformations and Symmetry&lt;/td&gt;\n        &lt;td style=\"background-color: violet; color: white;\"&gt;Violet&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Solid Geometry&lt;/td&gt;\n        &lt;td style=\"background-color: brown; color: white;\"&gt;Brown&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Reasoning and Proof&lt;/td&gt;\n        &lt;td style=\"background-color: gray; color: white;\"&gt;Gray&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Constructions and Tools&lt;/td&gt;\n        &lt;td style=\"background-color: black; color: white;\"&gt;Black&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>"},{"location":"sims/","title":"MicroSims for Geometry","text":""},{"location":"sims/#concept-graph-viewer","title":"Concept Graph Viewer","text":""},{"location":"sims/graph-viewer/","title":"Concept Graph Viewer","text":"<p>View Graph</p>"}]}